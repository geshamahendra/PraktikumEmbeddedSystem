
AVRASM ver. 2.1.30  D:\Data\Documents\smart_air_purifier\Debug\List\smart_air_purifier.asm Wed Dec 22 12:34:51 2021

D:\Data\Documents\smart_air_purifier\Debug\List\smart_air_purifier.asm(1090): warning: Register r4 already defined by the .DEF directive
D:\Data\Documents\smart_air_purifier\Debug\List\smart_air_purifier.asm(1091): warning: Register r5 already defined by the .DEF directive
D:\Data\Documents\smart_air_purifier\Debug\List\smart_air_purifier.asm(1092): warning: Register r6 already defined by the .DEF directive
D:\Data\Documents\smart_air_purifier\Debug\List\smart_air_purifier.asm(1093): warning: Register r7 already defined by the .DEF directive
D:\Data\Documents\smart_air_purifier\Debug\List\smart_air_purifier.asm(1094): warning: Register r8 already defined by the .DEF directive
D:\Data\Documents\smart_air_purifier\Debug\List\smart_air_purifier.asm(1095): warning: Register r9 already defined by the .DEF directive
D:\Data\Documents\smart_air_purifier\Debug\List\smart_air_purifier.asm(1096): warning: Register r11 already defined by the .DEF directive
D:\Data\Documents\smart_air_purifier\Debug\List\smart_air_purifier.asm(1097): warning: Register r10 already defined by the .DEF directive
D:\Data\Documents\smart_air_purifier\Debug\List\smart_air_purifier.asm(1098): warning: Register r12 already defined by the .DEF directive
D:\Data\Documents\smart_air_purifier\Debug\List\smart_air_purifier.asm(1099): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 10,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _servo_ac=R4
                 	.DEF _servo_ac_msb=R5
                 	.DEF _servo_ap=R6
                 	.DEF _servo_ap_msb=R7
                 	.DEF _dust=R8
                 	.DEF _dust_msb=R9
                 	.DEF _counter=R11
                 	.DEF _i=R10
                 	.DEF _data_temp=R12
                 	.DEF _data_temp_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00c1 	JMP  __RESET
000002 940c 0117 	JMP  _ext_int0_isr
000004 940c 012c 	JMP  _ext_int1_isr
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0133 	JMP  _timer1_compa_isr
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000046 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000047 0000
000048 0000      	.DB  0x0,0x0,0x0,0x0
                 
                 _0x3:
000049 0201
00004a 0804      	.DB  0x1,0x2,0x4,0x8
                 _0x4:
00004b 0801
00004c 0204      	.DB  0x1,0x8,0x4,0x2
                 _0x0:
00004d 6853
00004e 7475
00004f 6f64
000050 6e77      	.DB  0x53,0x68,0x75,0x74,0x64,0x6F,0x77,0x6E
000051 2e2e
000052 0021
000053 5250
000054 5345      	.DB  0x2E,0x2E,0x21,0x0,0x50,0x52,0x45,0x53
000055 2053
000056 5453
000057 5241
000058 2e54      	.DB  0x53,0x20,0x53,0x54,0x41,0x52,0x54,0x2E
000059 2e2e
00005a 0021
00005b 2020
00005c 5320      	.DB  0x2E,0x2E,0x21,0x0,0x20,0x20,0x20,0x53
00005d 414d
00005e 5452
00005f 4120
000060 5249      	.DB  0x4D,0x41,0x52,0x54,0x20,0x41,0x49,0x52
000061 2020
000062 2020
000063 2000
000064 2020      	.DB  0x20,0x20,0x20,0x20,0x0,0x20,0x20,0x20
000065 5020
000066 5255
000067 4649
000068 4549      	.DB  0x20,0x50,0x55,0x52,0x49,0x46,0x49,0x45
000069 2052
00006a 2020
00006b 0020
00006c 5020      	.DB  0x52,0x20,0x20,0x20,0x20,0x0,0x20,0x50
00006d 4552
00006e 5353
00006f 5320
000070 4154      	.DB  0x52,0x45,0x53,0x53,0x20,0x53,0x54,0x41
000071 5452
000072 0020
000073 3425
000074 322e      	.DB  0x52,0x54,0x20,0x0,0x25,0x34,0x2E,0x32
000075 4366
000076 2520
000077 6434
000078 2000      	.DB  0x66,0x43,0x20,0x25,0x34,0x64,0x0,0x20
000079 2020
00007a 2020
00007b 4120
00007c 414d      	.DB  0x20,0x20,0x20,0x20,0x20,0x41,0x4D,0x41
00007d 204e
00007e 2020
00007f 2020
000080 0020      	.DB  0x4E,0x20,0x20,0x20,0x20,0x20,0x20,0x0
000081 2020
000082 4954
000083 4144
000084 204b      	.DB  0x20,0x20,0x54,0x49,0x44,0x41,0x4B,0x20
000085 4553
000086 4148
000087 2054
000088 2020      	.DB  0x53,0x45,0x48,0x41,0x54,0x20,0x20,0x20
000089 2000
00008a 2020
00008b 4542
00008c 4252      	.DB  0x0,0x20,0x20,0x20,0x42,0x45,0x52,0x42
00008d 4841
00008e 5941
00008f 2041
000090 2020      	.DB  0x41,0x48,0x41,0x59,0x41,0x20,0x20,0x20
000091 0020      	.DB  0x20,0x0
                 _0x2000000:
000092 4e2d
000093 4e41
D:\Data\Documents\smart_air_purifier\Debug\List\smart_air_purifier.asm(1176): warning: .cseg .db misalignment - padding zero byte
000094 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2020003:
000095 c080      	.DB  0x80,0xC0
                 _0x20C0060:
D:\Data\Documents\smart_air_purifier\Debug\List\smart_air_purifier.asm(1180): warning: .cseg .db misalignment - padding zero byte
000096 0001      	.DB  0x1
                 _0x20C0000:
000097 4e2d
000098 4e41
000099 4900
00009a 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Data\Documents\smart_air_purifier\Debug\List\smart_air_purifier.asm(1183): warning: .cseg .db misalignment - padding zero byte
00009b 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00009c 0001      	.DW  0x01
00009d 0002      	.DW  0x02
00009e 008c      	.DW  __REG_BIT_VARS*2
                 
00009f 0004      	.DW  0x04
0000a0 0004      	.DW  0x04
0000a1 008e      	.DW  __REG_VARS*2
                 
0000a2 0004      	.DW  0x04
0000a3 0536      	.DW  _move_right
0000a4 0092      	.DW  _0x3*2
                 
0000a5 0004      	.DW  0x04
0000a6 053a      	.DW  _move_left
0000a7 0096      	.DW  _0x4*2
                 
0000a8 0001      	.DW  0x01
0000a9 0500      	.DW  _0x17
0000aa 00a5      	.DW  _0x0*2+11
                 
0000ab 0011      	.DW  0x11
0000ac 0501      	.DW  _0x17+1
0000ad 00f1      	.DW  _0x0*2+87
                 
0000ae 0001      	.DW  0x01
0000af 0512      	.DW  _0x17+18
0000b0 00a5      	.DW  _0x0*2+11
                 
0000b1 0011      	.DW  0x11
0000b2 0513      	.DW  _0x17+19
0000b3 0102      	.DW  _0x0*2+104
                 
0000b4 0001      	.DW  0x01
0000b5 0524      	.DW  _0x17+36
0000b6 00a5      	.DW  _0x0*2+11
                 
0000b7 0011      	.DW  0x11
0000b8 0525      	.DW  _0x17+37
0000b9 0113      	.DW  _0x0*2+121
                 
0000ba 0002      	.DW  0x02
0000bb 055c      	.DW  __base_y_G101
0000bc 012a      	.DW  _0x2020003*2
                 
0000bd 0001      	.DW  0x01
0000be 0563      	.DW  __seed_G106
0000bf 012c      	.DW  _0x20C0060*2
                 
                 _0xFFFFFFFF:
0000c0 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0000c1 94f8      	CLI
0000c2 27ee      	CLR  R30
0000c3 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000c4 e0f1      	LDI  R31,1
0000c5 bff5      	OUT  MCUCR,R31
0000c6 bfe5      	OUT  MCUCR,R30
0000c7 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
0000c9 e08d      	LDI  R24,(14-2)+1
0000ca e0a2      	LDI  R26,2
0000cb 27bb      	CLR  R27
                 __CLEAR_REG:
0000cc 93ed      	ST   X+,R30
0000cd 958a      	DEC  R24
0000ce f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000cf e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000d0 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000d1 e0a0      	LDI  R26,LOW(__SRAM_START)
0000d2 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000d3 93ed      	ST   X+,R30
0000d4 9701      	SBIW R24,1
0000d5 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000d6 e3e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000d7 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000d8 9185      	LPM  R24,Z+
0000d9 9195      	LPM  R25,Z+
0000da 9700      	SBIW R24,0
0000db f061      	BREQ __GLOBAL_INI_END
0000dc 91a5      	LPM  R26,Z+
0000dd 91b5      	LPM  R27,Z+
0000de 9005      	LPM  R0,Z+
0000df 9015      	LPM  R1,Z+
0000e0 01bf      	MOVW R22,R30
0000e1 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000e2 9005      	LPM  R0,Z+
0000e3 920d      	ST   X+,R0
0000e4 9701      	SBIW R24,1
0000e5 f7e1      	BRNE __GLOBAL_INI_LOOP
0000e6 01fb      	MOVW R30,R22
0000e7 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0000e8 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000e9 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000ea bfed      	OUT  SPL,R30
0000eb e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000ec bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000ed e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000ee e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000ef 940c 0151 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*******************************************************
                 ;This program was created by the
                 ;CodeWizardAVR V3.12 Advanced
                 ;Automatic Program Generator
                 ;� Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 ;
                 ;Project :
                 ;Version :
                 ;Date    : 22/12/2021
                 ;Author  :
                 ;Company :
                 ;Comments:
                 ;
                 ;
                 ;Chip type               : ATmega128
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 10,000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 1024
                 ;*******************************************************/
                 ;
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;
                 ;// Alphanumeric LCD functions
                 ;#include <alcd.h>
                 ;
                 ;// SPI functions
                 ;#include <spi.h>
                 ;
                 ;// Declare your global variables here
                 ;#define CS_bar PORTB.0
                 ;#define MCP3204_Command 0B00000100
                 ;#define air_fresh PORTA.2
                 ;
                 ;bit start_bit = 0;
                 ;int servo_ac = 0;
                 ;int servo_ap = 0;
                 ;
                 ;unsigned char move_right[4]={1,2,4,8};
                 
                 	.DSEG
                 ;unsigned char move_left[4]={1,8,4,2};
                 ;unsigned long int value, step;
                 ;
                 ;char text[16];
                 ;float temperature;
                 ;unsigned int dust;
                 ;unsigned char counter, i;
                 ;unsigned int data_temp, data_dust;
                 ;
                 ;//read adc spi
                 ;unsigned int read_adc(unsigned char no_sensor)
                 ; 0000 0037 {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0038     unsigned int temp1, temp2;
                 ; 0000 0039     CS_bar= 1;
0000f1 93aa      	ST   -Y,R26
0000f2 940e 0b88 	CALL __SAVELOCR4
                 ;	no_sensor -> Y+4
                 ;	temp1 -> R16,R17
                 ;	temp2 -> R18,R19
0000f4 9ac0      	SBI  0x18,0
                 ; 0000 003A     CS_bar= 0;
0000f5 98c0      	CBI  0x18,0
                 ; 0000 003B     temp1= spi(MCP3204_Command);
0000f6 e0a4      	LDI  R26,LOW(4)
0000f7 940e 0683 	CALL _spi
0000f9 2f0e      	MOV  R16,R30
0000fa 2711      	CLR  R17
                 ; 0000 003C     no_sensor= no_sensor<<6;
0000fb 81ec      	LDD  R30,Y+4
0000fc 95e2      	SWAP R30
0000fd 7fe0      	ANDI R30,0xF0
0000fe 0fee      	LSL  R30
0000ff 0fee      	LSL  R30
000100 83ec      	STD  Y+4,R30
                 ; 0000 003D     temp1=spi(no_sensor);
000101 81ac      	LDD  R26,Y+4
000102 940e 0683 	CALL _spi
000104 2f0e      	MOV  R16,R30
000105 2711      	CLR  R17
                 ; 0000 003E     temp1= temp1 & 0x000F;
                +
000106 700f     +ANDI R16 , LOW ( 15 )
000107 7010     +ANDI R17 , HIGH ( 15 )
                 	__ANDWRN 16,17,15
                 ; 0000 003F     temp1= temp1<<8;
000108 2f10      	MOV  R17,R16
000109 2700      	CLR  R16
                 ; 0000 0040     temp2= spi(0);
00010a e0a0      	LDI  R26,LOW(0)
00010b 940e 0683 	CALL _spi
00010d 2f2e      	MOV  R18,R30
00010e 2733      	CLR  R19
                 ; 0000 0041     temp2= temp2 & 0x00FF;
00010f 7030      	ANDI R19,HIGH(255)
                 ; 0000 0042     temp1= temp1 + temp2;
                +
000110 0f02     +ADD R16 , R18
000111 1f13     +ADC R17 , R19
                 	__ADDWRR 16,17,18,19
                 ; 0000 0043     CS_bar= 1;
000112 9ac0      	SBI  0x18,0
                 ; 0000 0044     return(temp1);
000113 01f8      	MOVW R30,R16
000114 940e 0b8f 	CALL __LOADLOCR4
000116 c19b      	RJMP _0x20E0008
                 ; 0000 0045 }
                 ; .FEND
                 ;
                 ;// External Interrupt 0 service routine
                 ;interrupt [EXT_INT0] void ext_int0_isr(void)
                 ; 0000 0049 {
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
000117 940e 079a 	CALL SUBOPT_0x0
                 ; 0000 004A // Place your code here
                 ; 0000 004B  start_bit=0;
000119 94e8      	CLT
00011a f820      	BLD  R2,0
                 ; 0000 004C  lcd_clear();
00011b 940e 07a8 	CALL SUBOPT_0x1
                 ; 0000 004D  lcd_gotoxy(0,0);
00011d e0a0      	LDI  R26,LOW(0)
00011e 940e 05f4 	CALL _lcd_gotoxy
                 ; 0000 004E  lcd_putsf("Shutdown..!");
                +
000120 e9aa     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
000121 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
000122 940e 07ad 	CALL SUBOPT_0x2
                 ; 0000 004F  delay_ms(1000);
                 ; 0000 0050  lcd_clear();
                 ; 0000 0051  lcd_gotoxy(0,1);
000124 e0a1      	LDI  R26,LOW(1)
000125 940e 05f4 	CALL _lcd_gotoxy
                 ; 0000 0052  lcd_putsf("PRESS START...!");
                +
000127 eaa6     +LDI R26 , LOW ( 2 * _0x0 + ( 12 ) )
000128 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 12 ) )
                 	__POINTW2FN _0x0,12
000129 940e 0642 	CALL _lcd_putsf
                 ; 0000 0053 }
00012b c017      	RJMP _0x37
                 ; .FEND
                 ;
                 ;// External Interrupt 1 service routine
                 ;interrupt [EXT_INT1] void ext_int1_isr(void)
                 ; 0000 0057 {
                 _ext_int1_isr:
                 ; .FSTART _ext_int1_isr
00012c 93ea      	ST   -Y,R30
00012d b7ef      	IN   R30,SREG
                 ; 0000 0058 // Place your code here
                 ; 0000 0059  start_bit = 1;
00012e 9468      	SET
00012f f820      	BLD  R2,0
                 ; 0000 005A }
000130 bfef      	OUT  SREG,R30
000131 91e9      	LD   R30,Y+
000132 9518      	RETI
                 ; .FEND
                 ;
                 ;// Timer1 output compare A interrupt service routine
                 ;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
                 ; 0000 005E {
                 _timer1_compa_isr:
                 ; .FSTART _timer1_compa_isr
000133 940e 079a 	CALL SUBOPT_0x0
                 ; 0000 005F // Place your code here
                 ; 0000 0060 counter++; //counter=counter+1
000135 94b3      	INC  R11
                 ; 0000 0061 if (counter == 15 && start_bit == 1)
000136 e0ef      	LDI  R30,LOW(15)
000137 15eb      	CP   R30,R11
000138 f411      	BRNE _0xC
000139 fc20      	SBRC R2,0
00013a c001      	RJMP _0xD
                 _0xC:
00013b c007      	RJMP _0xB
                 _0xD:
                 ; 0000 0062  {
                 ; 0000 0063   air_fresh = 1;
00013c 9ada      	SBI  0x1B,2
                 ; 0000 0064   delay_ms(1000);
00013d eea8      	LDI  R26,LOW(1000)
00013e e0b3      	LDI  R27,HIGH(1000)
00013f 940e 091f 	CALL _delay_ms
                 ; 0000 0065   air_fresh = 0;
000141 98da      	CBI  0x1B,2
                 ; 0000 0066   counter = 0;
000142 24bb      	CLR  R11
                 ; 0000 0067  }
                 ; 0000 0068 }
                 _0xB:
                 _0x37:
000143 91e9      	LD   R30,Y+
000144 bfef      	OUT  SREG,R30
000145 91f9      	LD   R31,Y+
000146 91e9      	LD   R30,Y+
000147 91b9      	LD   R27,Y+
000148 91a9      	LD   R26,Y+
000149 9199      	LD   R25,Y+
00014a 9189      	LD   R24,Y+
00014b 9179      	LD   R23,Y+
00014c 9169      	LD   R22,Y+
00014d 90f9      	LD   R15,Y+
00014e 9019      	LD   R1,Y+
00014f 9009      	LD   R0,Y+
000150 9518      	RETI
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 006B {
                 _main:
                 ; .FSTART _main
                 ; 0000 006C // Declare your local variables here
                 ; 0000 006D 
                 ; 0000 006E // Input/Output Ports initialization
                 ; 0000 006F // Port A initialization
                 ; 0000 0070 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 0071 DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
000151 efef      	LDI  R30,LOW(255)
000152 bbea      	OUT  0x1A,R30
                 ; 0000 0072 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 0073 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
000153 e0e0      	LDI  R30,LOW(0)
000154 bbeb      	OUT  0x1B,R30
                 ; 0000 0074 
                 ; 0000 0075 // Port B initialization
                 ; 0000 0076 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 0077 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
000155 e0e7      	LDI  R30,LOW(7)
000156 bbe7      	OUT  0x17,R30
                 ; 0000 0078 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=0 Bit1=0 Bit0=0
                 ; 0000 0079 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000157 e0e0      	LDI  R30,LOW(0)
000158 bbe8      	OUT  0x18,R30
                 ; 0000 007A 
                 ; 0000 007B // Port C initialization
                 ; 0000 007C // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 007D DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
000159 efef      	LDI  R30,LOW(255)
00015a bbe4      	OUT  0x14,R30
                 ; 0000 007E // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 007F PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
00015b e0e0      	LDI  R30,LOW(0)
00015c bbe5      	OUT  0x15,R30
                 ; 0000 0080 
                 ; 0000 0081 // Port D initialization
                 ; 0000 0082 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0083 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
00015d bbe1      	OUT  0x11,R30
                 ; 0000 0084 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0085 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
00015e bbe2      	OUT  0x12,R30
                 ; 0000 0086 
                 ; 0000 0087 // Port E initialization
                 ; 0000 0088 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0089 DDRE=(0<<DDE7) | (0<<DDE6) | (0<<DDE5) | (0<<DDE4) | (0<<DDE3) | (0<<DDE2) | (0<<DDE1) | (0<<DDE0);
00015f b9e2      	OUT  0x2,R30
                 ; 0000 008A // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 008B PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
000160 b9e3      	OUT  0x3,R30
                 ; 0000 008C 
                 ; 0000 008D // Port F initialization
                 ; 0000 008E // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 008F DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF3) | (0<<DDF2) | (0<<DDF1) | (0<<DDF0);
000161 93e0 0061 	STS  97,R30
                 ; 0000 0090 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0091 PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
000163 93e0 0062 	STS  98,R30
                 ; 0000 0092 
                 ; 0000 0093 // Port G initialization
                 ; 0000 0094 // Function: Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0095 DDRG=(0<<DDG4) | (0<<DDG3) | (0<<DDG2) | (0<<DDG1) | (0<<DDG0);
000165 93e0 0064 	STS  100,R30
                 ; 0000 0096 // State: Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0097 PORTG=(0<<PORTG4) | (0<<PORTG3) | (0<<PORTG2) | (0<<PORTG1) | (0<<PORTG0);
000167 93e0 0065 	STS  101,R30
                 ; 0000 0098 
                 ; 0000 0099 // Timer/Counter 1 initialization
                 ; 0000 009A // Clock source: System Clock
                 ; 0000 009B // Clock value: 39,063 kHz
                 ; 0000 009C // Mode: CTC top=OCR1A
                 ; 0000 009D // OC1A output: Disconnected
                 ; 0000 009E // OC1B output: Disconnected
                 ; 0000 009F // OC1C output: Disconnected
                 ; 0000 00A0 // Noise Canceler: Off
                 ; 0000 00A1 // Input Capture on Falling Edge
                 ; 0000 00A2 // Timer Period: 1 s
                 ; 0000 00A3 // Timer1 Overflow Interrupt: Off
                 ; 0000 00A4 // Input Capture Interrupt: Off
                 ; 0000 00A5 // Compare A Match Interrupt: On
                 ; 0000 00A6 // Compare B Match Interrupt: Off
                 ; 0000 00A7 // Compare C Match Interrupt: Off
                 ; 0000 00A8 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
000169 bdef      	OUT  0x2F,R30
                 ; 0000 00A9 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (1<<WGM12) | (1<<CS12) | (0<<CS11) | (0<<CS10);
00016a e0ec      	LDI  R30,LOW(12)
00016b bdee      	OUT  0x2E,R30
                 ; 0000 00AA TCNT1H=0x00;
00016c e0e0      	LDI  R30,LOW(0)
00016d bded      	OUT  0x2D,R30
                 ; 0000 00AB TCNT1L=0x00;
00016e bdec      	OUT  0x2C,R30
                 ; 0000 00AC ICR1H=0x00;
00016f bde7      	OUT  0x27,R30
                 ; 0000 00AD ICR1L=0x00;
000170 bde6      	OUT  0x26,R30
                 ; 0000 00AE OCR1AH=0x98;
000171 e9e8      	LDI  R30,LOW(152)
000172 bdeb      	OUT  0x2B,R30
                 ; 0000 00AF OCR1AL=0x96;
000173 e9e6      	LDI  R30,LOW(150)
000174 bdea      	OUT  0x2A,R30
                 ; 0000 00B0 OCR1BH=0x00;
000175 e0e0      	LDI  R30,LOW(0)
000176 bde9      	OUT  0x29,R30
                 ; 0000 00B1 OCR1BL=0x00;
000177 bde8      	OUT  0x28,R30
                 ; 0000 00B2 OCR1CH=0x00;
000178 93e0 0079 	STS  121,R30
                 ; 0000 00B3 OCR1CL=0x00;
00017a 93e0 0078 	STS  120,R30
                 ; 0000 00B4 
                 ; 0000 00B5 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 00B6 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (1<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
00017c e1e0      	LDI  R30,LOW(16)
00017d bfe7      	OUT  0x37,R30
                 ; 0000 00B7 // External Interrupt(s) initialization
                 ; 0000 00B8 // INT0: On
                 ; 0000 00B9 // INT0 Mode: Falling Edge
                 ; 0000 00BA // INT1: On
                 ; 0000 00BB // INT1 Mode: Falling Edge
                 ; 0000 00BC // INT2: Off
                 ; 0000 00BD // INT3: Off
                 ; 0000 00BE // INT4: Off
                 ; 0000 00BF // INT5: Off
                 ; 0000 00C0 // INT6: Off
                 ; 0000 00C1 // INT7: Off
                 ; 0000 00C2 EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (1<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
00017e e0ea      	LDI  R30,LOW(10)
00017f 93e0 006a 	STS  106,R30
                 ; 0000 00C3 EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (0<<ISC50) | (0<<ISC41) | (0<<ISC40);
000181 e0e0      	LDI  R30,LOW(0)
000182 bfea      	OUT  0x3A,R30
                 ; 0000 00C4 EIMSK=(0<<INT7) | (0<<INT6) | (0<<INT5) | (0<<INT4) | (0<<INT3) | (0<<INT2) | (1<<INT1) | (1<<INT0);
000183 e0e3      	LDI  R30,LOW(3)
000184 bfe9      	OUT  0x39,R30
                 ; 0000 00C5 EIFR=(0<<INTF7) | (0<<INTF6) | (0<<INTF5) | (0<<INTF4) | (0<<INTF3) | (0<<INTF2) | (1<<INTF1) | (1<<INTF0);
000185 bfe8      	OUT  0x38,R30
                 ; 0000 00C6 
                 ; 0000 00C7 // SPI initialization
                 ; 0000 00C8 // SPI Type: Master
                 ; 0000 00C9 // SPI Clock Rate: 156,250 kHz
                 ; 0000 00CA // SPI Clock Phase: Cycle Start
                 ; 0000 00CB // SPI Clock Polarity: Low
                 ; 0000 00CC // SPI Data Order: MSB First
                 ; 0000 00CD SPCR=(0<<SPIE) | (1<<SPE) | (0<<DORD) | (1<<MSTR) | (0<<CPOL) | (0<<CPHA) | (1<<SPR1) | (0<<SPR0);
000186 e5e2      	LDI  R30,LOW(82)
000187 b9ed      	OUT  0xD,R30
                 ; 0000 00CE SPSR=(0<<SPI2X);
000188 e0e0      	LDI  R30,LOW(0)
000189 b9ee      	OUT  0xE,R30
                 ; 0000 00CF 
                 ; 0000 00D0 // Alphanumeric LCD initialization
                 ; 0000 00D1 // Connections are specified in the
                 ; 0000 00D2 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 00D3 // RS - PORTC Bit 0
                 ; 0000 00D4 // RD - PORTC Bit 2
                 ; 0000 00D5 // EN - PORTC Bit 1
                 ; 0000 00D6 // D4 - PORTC Bit 4
                 ; 0000 00D7 // D5 - PORTC Bit 5
                 ; 0000 00D8 // D6 - PORTC Bit 6
                 ; 0000 00D9 // D7 - PORTC Bit 7
                 ; 0000 00DA // Characters/line: 16
                 ; 0000 00DB lcd_init(16);
00018a e1a0      	LDI  R26,LOW(16)
00018b 940e 0655 	CALL _lcd_init
                 ; 0000 00DC 
                 ; 0000 00DD // Global enable interrupts
                 ; 0000 00DE #asm("sei")
00018d 9478      	sei
                 ; 0000 00DF 
                 ; 0000 00E0   lcd_gotoxy(0,0);
00018e e0e0      	LDI  R30,LOW(0)
00018f 93ea      	ST   -Y,R30
000190 e0a0      	LDI  R26,LOW(0)
000191 940e 05f4 	CALL _lcd_gotoxy
                 ; 0000 00E1   lcd_putsf("   SMART AIR    ");
                +
000193 eba6     +LDI R26 , LOW ( 2 * _0x0 + ( 28 ) )
000194 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 28 ) )
                 	__POINTW2FN _0x0,28
000195 940e 0642 	CALL _lcd_putsf
                 ; 0000 00E2   lcd_gotoxy(0,1);
000197 940e 07b4 	CALL SUBOPT_0x3
                 ; 0000 00E3   lcd_putsf("    PURIFIER    ");
                +
000199 eca7     +LDI R26 , LOW ( 2 * _0x0 + ( 45 ) )
00019a e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 45 ) )
                 	__POINTW2FN _0x0,45
00019b 940e 07ad 	CALL SUBOPT_0x2
                 ; 0000 00E4   delay_ms(1000);
                 ; 0000 00E5   lcd_clear();
                 ; 0000 00E6   lcd_gotoxy(0,1);
00019d 940e 07b9 	CALL SUBOPT_0x4
                 ; 0000 00E7   lcd_putsf(" PRESS START ");
                 ; 0000 00E8 
                 ; 0000 00E9 
                 ; 0000 00EA while (1)
                 _0x12:
                 ; 0000 00EB       {
                 ; 0000 00EC       // Converting data
                 ; 0000 00ED               lcd_clear();
00019f 940e 0605 	CALL _lcd_clear
                 ; 0000 00EE               data_temp = read_adc(0);
0001a1 e0a0      	LDI  R26,LOW(0)
0001a2 df4e      	RCALL _read_adc
0001a3 016f      	MOVW R12,R30
                 ; 0000 00EF               delay_ms(100);
0001a4 940e 07c0 	CALL SUBOPT_0x5
                 ; 0000 00F0               temperature = (float)data_temp/4096*500-55;
0001a6 01f6      	MOVW R30,R12
0001a7 940e 07c4 	CALL SUBOPT_0x6
0001a9 93e0 0556 	STS  _temperature,R30
0001ab 93f0 0557 	STS  _temperature+1,R31
0001ad 9360 0558 	STS  _temperature+2,R22
0001af 9370 0559 	STS  _temperature+3,R23
                 ; 0000 00F1               data_dust = read_adc(2);
0001b1 e0a2      	LDI  R26,LOW(2)
0001b2 df3e      	RCALL _read_adc
0001b3 93e0 055a 	STS  _data_dust,R30
0001b5 93f0 055b 	STS  _data_dust+1,R31
                 ; 0000 00F2               dust = (float)data_dust/4096*500-55;
0001b7 940e 07c4 	CALL SUBOPT_0x6
0001b9 940e 095c 	CALL __CFD1U
0001bb 014f      	MOVW R8,R30
                 ; 0000 00F3               delay_ms(100);
0001bc 940e 07c0 	CALL SUBOPT_0x5
                 ; 0000 00F4               lcd_gotoxy(0,0);
0001be e0e0      	LDI  R30,LOW(0)
0001bf 93ea      	ST   -Y,R30
0001c0 e0a0      	LDI  R26,LOW(0)
0001c1 940e 05f4 	CALL _lcd_gotoxy
                 ; 0000 00F5               sprintf(text,"%4.2fC %4d",temperature, dust);
0001c3 e4e6      	LDI  R30,LOW(_text)
0001c4 e0f5      	LDI  R31,HIGH(_text)
0001c5 93fa      	ST   -Y,R31
0001c6 93ea      	ST   -Y,R30
                +
0001c7 eee6     +LDI R30 , LOW ( 2 * _0x0 + ( 76 ) )
0001c8 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 76 ) )
                 	__POINTW1FN _0x0,76
0001c9 93fa      	ST   -Y,R31
0001ca 93ea      	ST   -Y,R30
0001cb 91e0 0556 	LDS  R30,_temperature
0001cd 91f0 0557 	LDS  R31,_temperature+1
0001cf 9160 0558 	LDS  R22,_temperature+2
0001d1 9170 0559 	LDS  R23,_temperature+3
0001d3 940e 0b66 	CALL __PUTPARD1
0001d5 01f4      	MOVW R30,R8
0001d6 2766      	CLR  R22
0001d7 2777      	CLR  R23
0001d8 940e 0b66 	CALL __PUTPARD1
0001da e088      	LDI  R24,8
0001db 940e 05a0 	CALL _sprintf
0001dd 962c      	ADIW R28,12
                 ; 0000 00F6               lcd_puts(text);
0001de e4a6      	LDI  R26,LOW(_text)
0001df e0b5      	LDI  R27,HIGH(_text)
0001e0 940e 0633 	CALL _lcd_puts
                 ; 0000 00F7 
                 ; 0000 00F8           if (start_bit == 1)
0001e2 fe20      	SBRS R2,0
0001e3 c038      	RJMP _0x15
                 ; 0000 00F9           {
                 ; 0000 00FA                 if (dust <= 50)
0001e4 e3e2      	LDI  R30,LOW(50)
0001e5 e0f0      	LDI  R31,HIGH(50)
0001e6 15e8      	CP   R30,R8
0001e7 05f9      	CPC  R31,R9
0001e8 f078      	BRLO _0x16
                 ; 0000 00FB                 {
                 ; 0000 00FC                  lcd_gotoxy(0,1);
0001e9 940e 07b4 	CALL SUBOPT_0x3
                 ; 0000 00FD                  lcd_puts("");
                +
0001eb e0a0     +LDI R26 , LOW ( _0x17 + ( 0 ) )
0001ec e0b5     +LDI R27 , HIGH ( _0x17 + ( 0 ) )
                 	__POINTW2MN _0x17,0
0001ed 940e 0633 	CALL _lcd_puts
                 ; 0000 00FE                  lcd_puts("      AMAN      ");
                +
0001ef e0a1     +LDI R26 , LOW ( _0x17 + ( 1 ) )
0001f0 e0b5     +LDI R27 , HIGH ( _0x17 + ( 1 ) )
                 	__POINTW2MN _0x17,1
0001f1 940e 0633 	CALL _lcd_puts
                 ; 0000 00FF                  servo_ap = 0;
0001f3 2466      	CLR  R6
0001f4 2477      	CLR  R7
                 ; 0000 0100                  delay_ms(1500);
0001f5 940e 07e1 	CALL SUBOPT_0x7
                 ; 0000 0101                  break;
0001f7 c081      	RJMP _0x14
                 ; 0000 0102                 }
                 ; 0000 0103                 else if (50 < dust <= 200)
                 _0x16:
0001f8 01f4      	MOVW R30,R8
0001f9 e3a2      	LDI  R26,LOW(50)
0001fa e0b0      	LDI  R27,HIGH(50)
0001fb 940e 0ae9 	CALL __LTW12U
0001fd 2fae      	MOV  R26,R30
0001fe ece8      	LDI  R30,LOW(200)
0001ff e0b0      	LDI  R27,0
000200 fda7      	SBRC R26,7
000201 efbf      	SER  R27
000202 e0f0      	LDI  R31,0
000203 17ea      	CP   R30,R26
000204 07fb      	CPC  R31,R27
000205 f05c      	BRLT _0x19
                 ; 0000 0104                 {
                 ; 0000 0105                  lcd_gotoxy(0,1);
000206 940e 07b4 	CALL SUBOPT_0x3
                 ; 0000 0106                  lcd_puts("");
                +
000208 e1a2     +LDI R26 , LOW ( _0x17 + ( 18 ) )
000209 e0b5     +LDI R27 , HIGH ( _0x17 + ( 18 ) )
                 	__POINTW2MN _0x17,18
00020a 940e 0633 	CALL _lcd_puts
                 ; 0000 0107                  lcd_puts("  TIDAK SEHAT   ");
                +
00020c e1a3     +LDI R26 , LOW ( _0x17 + ( 19 ) )
00020d e0b5     +LDI R27 , HIGH ( _0x17 + ( 19 ) )
                 	__POINTW2MN _0x17,19
00020e 940e 07e5 	CALL SUBOPT_0x8
                 ; 0000 0108                  servo_ap = 1;
                 ; 0000 0109                  delay_ms(1500);
                 ; 0000 010A                  break;
000210 c068      	RJMP _0x14
                 ; 0000 010B                 }
                 ; 0000 010C                 else
                 _0x19:
                 ; 0000 010D                 {
                 ; 0000 010E                  lcd_gotoxy(0,1);
000211 940e 07b4 	CALL SUBOPT_0x3
                 ; 0000 010F                  lcd_puts("");
                +
000213 e2a4     +LDI R26 , LOW ( _0x17 + ( 36 ) )
000214 e0b5     +LDI R27 , HIGH ( _0x17 + ( 36 ) )
                 	__POINTW2MN _0x17,36
000215 940e 0633 	CALL _lcd_puts
                 ; 0000 0110                  lcd_puts("   BERBAHAYA    ");
                +
000217 e2a5     +LDI R26 , LOW ( _0x17 + ( 37 ) )
000218 e0b5     +LDI R27 , HIGH ( _0x17 + ( 37 ) )
                 	__POINTW2MN _0x17,37
000219 940e 07e5 	CALL SUBOPT_0x8
                 ; 0000 0111                  servo_ap = 1;
                 ; 0000 0112                  delay_ms(1500);
                 ; 0000 0113                  break;
00021b c05d      	RJMP _0x14
                 ; 0000 0114                 };
                 ; 0000 0115 
                 ; 0000 0116                 if (temperature <= 26)
                 ; 0000 0117                 {
                 ; 0000 0118                    servo_ac = 0;
                 ; 0000 0119                    break;
                 ; 0000 011A                 }
                 ; 0000 011B                 else
                 ; 0000 011C                 {
                 ; 0000 011D                    servo_ac = 1;
                 ; 0000 011E                    break;
                 ; 0000 011F                 };
                 ; 0000 0120           }
                 ; 0000 0121           else
                 _0x15:
                 ; 0000 0122           {
                 ; 0000 0123              lcd_clear();
00021c 940e 07a8 	CALL SUBOPT_0x1
                 ; 0000 0124              lcd_gotoxy(0,1);
00021e 940e 07b9 	CALL SUBOPT_0x4
                 ; 0000 0125              lcd_putsf(" PRESS START ");
                 ; 0000 0126              break;
000220 c058      	RJMP _0x14
                 ; 0000 0127           }
                 ; 0000 0128 
                 ; 0000 0129                 if (servo_ac == 1)
                 ; 0000 012A                 {
                 ; 0000 012B                    for (step=0; step<=value-1; step++)
                 _0x20:
000221 940e 07f5 	CALL SUBOPT_0xA
000223 f078      	BRLO _0x21
                 ; 0000 012C                     {
                 ; 0000 012D                      i= step % 4;
000224 940e 080c 	CALL SUBOPT_0xB
                 ; 0000 012E                      PORTA.0 = move_right[i];
000226 5cea      	SUBI R30,LOW(-_move_right)
000227 4ffa      	SBCI R31,HIGH(-_move_right)
000228 81e0      	LD   R30,Z
000229 30e0      	CPI  R30,0
00022a f411      	BRNE _0x22
00022b 98d8      	CBI  0x1B,0
00022c c001      	RJMP _0x23
                 _0x22:
00022d 9ad8      	SBI  0x1B,0
                 _0x23:
                 ; 0000 012F                      delay_ms(100);
00022e 940e 07c0 	CALL SUBOPT_0x5
                 ; 0000 0130 
                 ; 0000 0131                     };
000230 940e 0812 	CALL SUBOPT_0xC
000232 cfee      	RJMP _0x20
                 _0x21:
                 ; 0000 0132                 }
                 ; 0000 0133                 else
000233 c012      	RJMP _0x24
                 ; 0000 0134                 {
                 ; 0000 0135                     for (step=0; step<=value-1; step++)
                 _0x26:
000234 940e 07f5 	CALL SUBOPT_0xA
000236 f078      	BRLO _0x27
                 ; 0000 0136                     {
                 ; 0000 0137                      i= step % 4;
000237 940e 080c 	CALL SUBOPT_0xB
                 ; 0000 0138                      PORTA.0 = move_left[i];
000239 5ce6      	SUBI R30,LOW(-_move_left)
00023a 4ffa      	SBCI R31,HIGH(-_move_left)
00023b 81e0      	LD   R30,Z
00023c 30e0      	CPI  R30,0
00023d f411      	BRNE _0x28
00023e 98d8      	CBI  0x1B,0
00023f c001      	RJMP _0x29
                 _0x28:
000240 9ad8      	SBI  0x1B,0
                 _0x29:
                 ; 0000 0139                      delay_ms(100);
000241 940e 07c0 	CALL SUBOPT_0x5
                 ; 0000 013A 
                 ; 0000 013B                     };
000243 940e 0812 	CALL SUBOPT_0xC
000245 cfee      	RJMP _0x26
                 _0x27:
                 ; 0000 013C                 };
                 _0x24:
                 ; 0000 013D 
                 ; 0000 013E                 if (servo_ap == 1)
000246 e0e1      	LDI  R30,LOW(1)
000247 e0f0      	LDI  R31,HIGH(1)
000248 15e6      	CP   R30,R6
000249 05f7      	CPC  R31,R7
00024a f4a9      	BRNE _0x2A
                 ; 0000 013F                 {
                 ; 0000 0140                    for (step=0; step<=value-1; step++)
00024b 940e 07eb 	CALL SUBOPT_0x9
                 _0x2C:
00024d 940e 07f5 	CALL SUBOPT_0xA
00024f f078      	BRLO _0x2D
                 ; 0000 0141                     {
                 ; 0000 0142                      i= step % 4;
000250 940e 080c 	CALL SUBOPT_0xB
                 ; 0000 0143                      PORTA.1 = move_right[i];
000252 5cea      	SUBI R30,LOW(-_move_right)
000253 4ffa      	SBCI R31,HIGH(-_move_right)
000254 81e0      	LD   R30,Z
000255 30e0      	CPI  R30,0
000256 f411      	BRNE _0x2E
000257 98d9      	CBI  0x1B,1
000258 c001      	RJMP _0x2F
                 _0x2E:
000259 9ad9      	SBI  0x1B,1
                 _0x2F:
                 ; 0000 0144                      delay_ms(100);
00025a 940e 07c0 	CALL SUBOPT_0x5
                 ; 0000 0145 
                 ; 0000 0146                     };
00025c 940e 0812 	CALL SUBOPT_0xC
00025e cfee      	RJMP _0x2C
                 _0x2D:
                 ; 0000 0147                 }
                 ; 0000 0148                 else
00025f c014      	RJMP _0x30
                 _0x2A:
                 ; 0000 0149                 {
                 ; 0000 014A                     for (step=0; step<=value-1; step++)
000260 940e 07eb 	CALL SUBOPT_0x9
                 _0x32:
000262 940e 07f5 	CALL SUBOPT_0xA
000264 f078      	BRLO _0x33
                 ; 0000 014B                     {
                 ; 0000 014C                      i= step % 4;
000265 940e 080c 	CALL SUBOPT_0xB
                 ; 0000 014D                      PORTA.1 = move_left[i];
000267 5ce6      	SUBI R30,LOW(-_move_left)
000268 4ffa      	SBCI R31,HIGH(-_move_left)
000269 81e0      	LD   R30,Z
00026a 30e0      	CPI  R30,0
00026b f411      	BRNE _0x34
00026c 98d9      	CBI  0x1B,1
00026d c001      	RJMP _0x35
                 _0x34:
00026e 9ad9      	SBI  0x1B,1
                 _0x35:
                 ; 0000 014E                      delay_ms(100);
00026f 940e 07c0 	CALL SUBOPT_0x5
                 ; 0000 014F 
                 ; 0000 0150                     };
000271 940e 0812 	CALL SUBOPT_0xC
000273 cfee      	RJMP _0x32
                 _0x33:
                 ; 0000 0151                 };
                 _0x30:
                 ; 0000 0152           delay_ms(1000);
000274 eea8      	LDI  R26,LOW(1000)
000275 e0b3      	LDI  R27,HIGH(1000)
000276 940e 091f 	CALL _delay_ms
                 ; 0000 0153       };
000278 cf26      	RJMP _0x12
                 _0x14:
                 ; 0000 0154 }
                 _0x36:
000279 cfff      	RJMP _0x36
                 ; .FEND
                 
                 	.DSEG
                 _0x17:
000500           	.BYTE 0x36
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
00027a 93ba      	ST   -Y,R27
00027b 93aa      	ST   -Y,R26
00027c 931a      	ST   -Y,R17
00027d 930a      	ST   -Y,R16
00027e 81aa      	LDD  R26,Y+2
00027f 81bb      	LDD  R27,Y+2+1
000280 9612      	ADIW R26,2
000281 940e 0b43 	CALL __GETW1P
000283 9730      	SBIW R30,0
000284 f129      	BREQ _0x2000010
000285 81aa      	LDD  R26,Y+2
000286 81bb      	LDD  R27,Y+2+1
000287 9614      	ADIW R26,4
000288 940e 0b43 	CALL __GETW1P
00028a 018f      	MOVW R16,R30
00028b 9730      	SBIW R30,0
00028c f061      	BREQ _0x2000012
                +
00028d 3002     +CPI R16 , LOW ( 2 )
00028e e0e0     +LDI R30 , HIGH ( 2 )
00028f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000290 f080      	BRLO _0x2000013
000291 01f8      	MOVW R30,R16
000292 9731      	SBIW R30,1
000293 018f      	MOVW R16,R30
                +
000294 81aa     +LDD R26 , Y + 2
000295 81bb     +LDD R27 , Y + 2 + 1
000296 9614     +ADIW R26 , 4
000297 93ed     +ST X + , R30
000298 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000299 81aa      	LDD  R26,Y+2
00029a 81bb      	LDD  R27,Y+2+1
00029b 9612      	ADIW R26,2
00029c 940e 081d 	CALL SUBOPT_0xD
00029e 9731      	SBIW R30,1
00029f 81ac      	LDD  R26,Y+4
0002a0 83a0      	STD  Z+0,R26
                 _0x2000013:
0002a1 81aa      	LDD  R26,Y+2
0002a2 81bb      	LDD  R27,Y+2+1
0002a3 940e 0b43 	CALL __GETW1P
0002a5 23ff      	TST  R31
0002a6 f012      	BRMI _0x2000014
0002a7 940e 081d 	CALL SUBOPT_0xD
                 _0x2000014:
0002a9 c006      	RJMP _0x2000015
                 _0x2000010:
0002aa 81aa      	LDD  R26,Y+2
0002ab 81bb      	LDD  R27,Y+2+1
0002ac efef      	LDI  R30,LOW(65535)
0002ad efff      	LDI  R31,HIGH(65535)
0002ae 93ed      	ST   X+,R30
0002af 93fc      	ST   X,R31
                 _0x2000015:
0002b0 8119      	LDD  R17,Y+1
0002b1 8108      	LDD  R16,Y+0
                 _0x20E0008:
0002b2 9625      	ADIW R28,5
0002b3 9508      	RET
                 ; .FEND
                 __ftoe_G100:
                 ; .FSTART __ftoe_G100
0002b4 940e 0823 	CALL SUBOPT_0xE
0002b6 e8e0      	LDI  R30,LOW(128)
0002b7 83ea      	STD  Y+2,R30
0002b8 e3ef      	LDI  R30,LOW(63)
0002b9 83eb      	STD  Y+3,R30
0002ba 940e 0b88 	CALL __SAVELOCR4
0002bc 85ee      	LDD  R30,Y+14
0002bd 85ff      	LDD  R31,Y+14+1
0002be 3fef      	CPI  R30,LOW(0xFFFF)
0002bf efaf      	LDI  R26,HIGH(0xFFFF)
0002c0 07fa      	CPC  R31,R26
0002c1 f449      	BRNE _0x2000019
0002c2 85e8      	LDD  R30,Y+8
0002c3 85f9      	LDD  R31,Y+8+1
0002c4 93fa      	ST   -Y,R31
0002c5 93ea      	ST   -Y,R30
                +
0002c6 e2a4     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
0002c7 e0b1     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
0002c8 940e 068b 	CALL _strcpyf
0002ca c0b7      	RJMP _0x20E0007
                 _0x2000019:
0002cb 3fef      	CPI  R30,LOW(0x7FFF)
0002cc e7af      	LDI  R26,HIGH(0x7FFF)
0002cd 07fa      	CPC  R31,R26
0002ce f449      	BRNE _0x2000018
0002cf 85e8      	LDD  R30,Y+8
0002d0 85f9      	LDD  R31,Y+8+1
0002d1 93fa      	ST   -Y,R31
0002d2 93ea      	ST   -Y,R30
                +
0002d3 e2a5     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
0002d4 e0b1     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
0002d5 940e 068b 	CALL _strcpyf
0002d7 c0aa      	RJMP _0x20E0007
                 _0x2000018:
0002d8 85ab      	LDD  R26,Y+11
0002d9 30a7      	CPI  R26,LOW(0x7)
0002da f010      	BRLO _0x200001B
0002db e0e6      	LDI  R30,LOW(6)
0002dc 87eb      	STD  Y+11,R30
                 _0x200001B:
0002dd 851b      	LDD  R17,Y+11
                 _0x200001C:
0002de 2fe1      	MOV  R30,R17
0002df 5011      	SUBI R17,1
0002e0 30e0      	CPI  R30,0
0002e1 f019      	BREQ _0x200001E
0002e2 940e 082a 	CALL SUBOPT_0xF
0002e4 cff9      	RJMP _0x200001C
                 _0x200001E:
                +
0002e5 85ec     +LDD R30 , Y + 12
0002e6 85fd     +LDD R31 , Y + 12 + 1
0002e7 856e     +LDD R22 , Y + 12 + 2
0002e8 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0002e9 940e 0b7d 	CALL __CPD10
0002eb f421      	BRNE _0x200001F
0002ec e030      	LDI  R19,LOW(0)
0002ed 940e 082a 	CALL SUBOPT_0xF
0002ef c02d      	RJMP _0x2000020
                 _0x200001F:
0002f0 853b      	LDD  R19,Y+11
0002f1 940e 0839 	CALL SUBOPT_0x10
0002f3 f009      	BREQ PC+2
0002f4 f408      	BRCC PC+2
0002f5 c00b      	RJMP _0x2000021
0002f6 940e 082a 	CALL SUBOPT_0xF
                 _0x2000022:
0002f8 940e 0839 	CALL SUBOPT_0x10
0002fa f028      	BRLO _0x2000024
0002fb 940e 0844 	CALL SUBOPT_0x11
0002fd 940e 0849 	CALL SUBOPT_0x12
0002ff cff8      	RJMP _0x2000022
                 _0x2000024:
000300 c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
000301 940e 0839 	CALL SUBOPT_0x10
000303 f440      	BRSH _0x2000028
000304 940e 0844 	CALL SUBOPT_0x11
000306 940e 0855 	CALL SUBOPT_0x13
000308 940e 085c 	CALL SUBOPT_0x14
00030a 5031      	SUBI R19,LOW(1)
00030b cff5      	RJMP _0x2000026
                 _0x2000028:
00030c 940e 082a 	CALL SUBOPT_0xF
                 _0x2000025:
                +
00030e 85ec     +LDD R30 , Y + 12
00030f 85fd     +LDD R31 , Y + 12 + 1
000310 856e     +LDD R22 , Y + 12 + 2
000311 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000312 940e 0861 	CALL SUBOPT_0x15
000314 940e 085c 	CALL SUBOPT_0x14
000316 940e 0839 	CALL SUBOPT_0x10
000318 f020      	BRLO _0x2000029
000319 940e 0844 	CALL SUBOPT_0x11
00031b 940e 0849 	CALL SUBOPT_0x12
                 _0x2000029:
                 _0x2000020:
00031d e010      	LDI  R17,LOW(0)
                 _0x200002A:
00031e 85eb      	LDD  R30,Y+11
00031f 17e1      	CP   R30,R17
000320 f1a8      	BRLO _0x200002C
                +
000321 81ac     +LDD R26 , Y + 4
000322 81bd     +LDD R27 , Y + 4 + 1
000323 818e     +LDD R24 , Y + 4 + 2
000324 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000325 940e 0868 	CALL SUBOPT_0x16
000327 940e 0861 	CALL SUBOPT_0x15
000329 01df      	MOVW R26,R30
00032a 01cb      	MOVW R24,R22
00032b 940e 06e2 	CALL _floor
                +
00032d 83ec     +STD Y + 4 , R30
00032e 83fd     +STD Y + 4 + 1 , R31
00032f 836e     +STD Y + 4 + 2 , R22
000330 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000331 940e 0844 	CALL SUBOPT_0x11
000333 940e 0a6d 	CALL __DIVF21
000335 940e 095c 	CALL __CFD1U
000337 2f0e      	MOV  R16,R30
000338 940e 086f 	CALL SUBOPT_0x17
00033a 940e 0876 	CALL SUBOPT_0x18
00033c 27ff      	CLR  R31
00033d 2766      	CLR  R22
00033e 2777      	CLR  R23
00033f 940e 0995 	CALL __CDF1
                +
000341 81ac     +LDD R26 , Y + 4
000342 81bd     +LDD R27 , Y + 4 + 1
000343 818e     +LDD R24 , Y + 4 + 2
000344 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000345 940e 0a1f 	CALL __MULF12
000347 940e 0844 	CALL SUBOPT_0x11
000349 940e 087b 	CALL SUBOPT_0x19
00034b 940e 085c 	CALL SUBOPT_0x14
00034d 2fe1      	MOV  R30,R17
00034e 5f1f      	SUBI R17,-1
00034f 30e0      	CPI  R30,0
000350 f669      	BRNE _0x200002A
000351 940e 086f 	CALL SUBOPT_0x17
000353 e2ee      	LDI  R30,LOW(46)
000354 93ec      	ST   X,R30
000355 cfc8      	RJMP _0x200002A
                 _0x200002C:
000356 940e 0880 	CALL SUBOPT_0x1A
000358 9731      	SBIW R30,1
000359 85aa      	LDD  R26,Y+10
00035a 83a0      	STD  Z+0,R26
00035b 3030      	CPI  R19,0
00035c f42c      	BRGE _0x200002E
00035d 9531      	NEG  R19
00035e 85a8      	LDD  R26,Y+8
00035f 85b9      	LDD  R27,Y+8+1
000360 e2ed      	LDI  R30,LOW(45)
000361 c003      	RJMP _0x2000113
                 _0x200002E:
000362 85a8      	LDD  R26,Y+8
000363 85b9      	LDD  R27,Y+8+1
000364 e2eb      	LDI  R30,LOW(43)
                 _0x2000113:
000365 93ec      	ST   X,R30
000366 940e 0880 	CALL SUBOPT_0x1A
000368 940e 0880 	CALL SUBOPT_0x1A
00036a 9731      	SBIW R30,1
00036b 01bf      	MOVW R22,R30
00036c 2fa3      	MOV  R26,R19
00036d e0ea      	LDI  R30,LOW(10)
00036e 940e 0afd 	CALL __DIVB21
000370 5de0      	SUBI R30,-LOW(48)
000371 01db      	MOVW R26,R22
000372 93ec      	ST   X,R30
000373 940e 0880 	CALL SUBOPT_0x1A
000375 9731      	SBIW R30,1
000376 01bf      	MOVW R22,R30
000377 2fa3      	MOV  R26,R19
000378 e0ea      	LDI  R30,LOW(10)
000379 940e 0b27 	CALL __MODB21
00037b 5de0      	SUBI R30,-LOW(48)
00037c 01db      	MOVW R26,R22
00037d 93ec      	ST   X,R30
00037e 85a8      	LDD  R26,Y+8
00037f 85b9      	LDD  R27,Y+8+1
000380 e0e0      	LDI  R30,LOW(0)
000381 93ec      	ST   X,R30
                 _0x20E0007:
000382 940e 0b8f 	CALL __LOADLOCR4
000384 9660      	ADIW R28,16
000385 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000386 93ba      	ST   -Y,R27
000387 93aa      	ST   -Y,R26
000388 97ef      	SBIW R28,63
000389 9761      	SBIW R28,17
00038a 940e 0b86 	CALL __SAVELOCR6
00038c e010      	LDI  R17,0
                +
00038d 01fe     +MOVW R30 , R28
00038e 5ae8     +SUBI R30 , LOW ( - 88 )
00038f 4fff     +SBCI R31 , HIGH ( - 88 )
000390 9001     +LD R0 , Z +
000391 81f0     +LD R31 , Z
000392 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000393 87e8      	STD  Y+8,R30
000394 87f9      	STD  Y+8+1,R31
                +
000395 01fe     +MOVW R30 , R28
000396 5aea     +SUBI R30 , LOW ( - 86 )
000397 4fff     +SBCI R31 , HIGH ( - 86 )
000398 9001     +LD R0 , Z +
000399 81f0     +LD R31 , Z
00039a 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00039b 83ee      	STD  Y+6,R30
00039c 83ff      	STD  Y+6+1,R31
00039d 81ae      	LDD  R26,Y+6
00039e 81bf      	LDD  R27,Y+6+1
00039f e0e0      	LDI  R30,LOW(0)
0003a0 e0f0      	LDI  R31,HIGH(0)
0003a1 93ed      	ST   X+,R30
0003a2 93fc      	ST   X,R31
                 _0x2000030:
0003a3 01de      	MOVW R26,R28
0003a4 5aa4      	SUBI R26,LOW(-(92))
0003a5 4fbf      	SBCI R27,HIGH(-(92))
0003a6 940e 081d 	CALL SUBOPT_0xD
0003a8 9731      	SBIW R30,1
0003a9 91e4      	LPM  R30,Z
0003aa 2f2e      	MOV  R18,R30
0003ab 30e0      	CPI  R30,0
0003ac f409      	BRNE PC+2
0003ad c1e9      	RJMP _0x2000032
0003ae 2fe1      	MOV  R30,R17
0003af 30e0      	CPI  R30,0
0003b0 f439      	BRNE _0x2000036
0003b1 3225      	CPI  R18,37
0003b2 f411      	BRNE _0x2000037
0003b3 e011      	LDI  R17,LOW(1)
0003b4 c002      	RJMP _0x2000038
                 _0x2000037:
0003b5 940e 0886 	CALL SUBOPT_0x1B
                 _0x2000038:
0003b7 c1de      	RJMP _0x2000035
                 _0x2000036:
0003b8 30e1      	CPI  R30,LOW(0x1)
0003b9 f4c1      	BRNE _0x2000039
0003ba 3225      	CPI  R18,37
0003bb f419      	BRNE _0x200003A
0003bc 940e 0886 	CALL SUBOPT_0x1B
0003be c1d6      	RJMP _0x2000114
                 _0x200003A:
0003bf e012      	LDI  R17,LOW(2)
0003c0 e0e0      	LDI  R30,LOW(0)
0003c1 8bed      	STD  Y+21,R30
0003c2 e000      	LDI  R16,LOW(0)
0003c3 322d      	CPI  R18,45
0003c4 f411      	BRNE _0x200003B
0003c5 e001      	LDI  R16,LOW(1)
0003c6 c1cf      	RJMP _0x2000035
                 _0x200003B:
0003c7 322b      	CPI  R18,43
0003c8 f419      	BRNE _0x200003C
0003c9 e2eb      	LDI  R30,LOW(43)
0003ca 8bed      	STD  Y+21,R30
0003cb c1ca      	RJMP _0x2000035
                 _0x200003C:
0003cc 3220      	CPI  R18,32
0003cd f419      	BRNE _0x200003D
0003ce e2e0      	LDI  R30,LOW(32)
0003cf 8bed      	STD  Y+21,R30
0003d0 c1c5      	RJMP _0x2000035
                 _0x200003D:
0003d1 c002      	RJMP _0x200003E
                 _0x2000039:
0003d2 30e2      	CPI  R30,LOW(0x2)
0003d3 f439      	BRNE _0x200003F
                 _0x200003E:
0003d4 e050      	LDI  R21,LOW(0)
0003d5 e013      	LDI  R17,LOW(3)
0003d6 3320      	CPI  R18,48
0003d7 f411      	BRNE _0x2000040
0003d8 6800      	ORI  R16,LOW(128)
0003d9 c1bc      	RJMP _0x2000035
                 _0x2000040:
0003da c002      	RJMP _0x2000041
                 _0x200003F:
0003db 30e3      	CPI  R30,LOW(0x3)
0003dc f491      	BRNE _0x2000042
                 _0x2000041:
0003dd 3320      	CPI  R18,48
0003de f010      	BRLO _0x2000044
0003df 332a      	CPI  R18,58
0003e0 f008      	BRLO _0x2000045
                 _0x2000044:
0003e1 c007      	RJMP _0x2000043
                 _0x2000045:
0003e2 e0aa      	LDI  R26,LOW(10)
0003e3 9f5a      	MUL  R21,R26
0003e4 2d50      	MOV  R21,R0
0003e5 2fe2      	MOV  R30,R18
0003e6 53e0      	SUBI R30,LOW(48)
0003e7 0f5e      	ADD  R21,R30
0003e8 c1ad      	RJMP _0x2000035
                 _0x2000043:
0003e9 e040      	LDI  R20,LOW(0)
0003ea 322e      	CPI  R18,46
0003eb f411      	BRNE _0x2000046
0003ec e014      	LDI  R17,LOW(4)
0003ed c1a8      	RJMP _0x2000035
                 _0x2000046:
0003ee c00f      	RJMP _0x2000047
                 _0x2000042:
0003ef 30e4      	CPI  R30,LOW(0x4)
0003f0 f499      	BRNE _0x2000049
0003f1 3320      	CPI  R18,48
0003f2 f010      	BRLO _0x200004B
0003f3 332a      	CPI  R18,58
0003f4 f008      	BRLO _0x200004C
                 _0x200004B:
0003f5 c008      	RJMP _0x200004A
                 _0x200004C:
0003f6 6200      	ORI  R16,LOW(32)
0003f7 e0aa      	LDI  R26,LOW(10)
0003f8 9f4a      	MUL  R20,R26
0003f9 2d40      	MOV  R20,R0
0003fa 2fe2      	MOV  R30,R18
0003fb 53e0      	SUBI R30,LOW(48)
0003fc 0f4e      	ADD  R20,R30
0003fd c198      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
0003fe 362c      	CPI  R18,108
0003ff f419      	BRNE _0x200004D
000400 6002      	ORI  R16,LOW(2)
000401 e015      	LDI  R17,LOW(5)
000402 c193      	RJMP _0x2000035
                 _0x200004D:
000403 c003      	RJMP _0x200004E
                 _0x2000049:
000404 30e5      	CPI  R30,LOW(0x5)
000405 f009      	BREQ PC+2
000406 c18f      	RJMP _0x2000035
                 _0x200004E:
000407 2fe2      	MOV  R30,R18
000408 36e3      	CPI  R30,LOW(0x63)
000409 f459      	BRNE _0x2000053
00040a 940e 088d 	CALL SUBOPT_0x1C
00040c 940e 0894 	CALL SUBOPT_0x1D
00040e 940e 088d 	CALL SUBOPT_0x1C
000410 81a4      	LDD  R26,Z+4
000411 93aa      	ST   -Y,R26
000412 940e 089b 	CALL SUBOPT_0x1E
000414 c180      	RJMP _0x2000054
                 _0x2000053:
000415 34e5      	CPI  R30,LOW(0x45)
000416 f011      	BREQ _0x2000057
000417 36e5      	CPI  R30,LOW(0x65)
000418 f409      	BRNE _0x2000058
                 _0x2000057:
000419 c003      	RJMP _0x2000059
                 _0x2000058:
00041a 36e6      	CPI  R30,LOW(0x66)
00041b f009      	BREQ PC+2
00041c c048      	RJMP _0x200005A
                 _0x2000059:
00041d 01fe      	MOVW R30,R28
00041e 9676      	ADIW R30,22
00041f 87ee      	STD  Y+14,R30
000420 87ff      	STD  Y+14+1,R31
000421 940e 08a1 	CALL SUBOPT_0x1F
000423 940e 0b47 	CALL __GETD1P
000425 940e 08a8 	CALL SUBOPT_0x20
000427 940e 08ad 	CALL SUBOPT_0x21
000429 85ad      	LDD  R26,Y+13
00042a 23aa      	TST  R26
00042b f032      	BRMI _0x200005B
00042c 89ad      	LDD  R26,Y+21
00042d 32ab      	CPI  R26,LOW(0x2B)
00042e f059      	BREQ _0x200005D
00042f 32a0      	CPI  R26,LOW(0x20)
000430 f081      	BREQ _0x200005F
000431 c017      	RJMP _0x2000060
                 _0x200005B:
000432 940e 08af 	CALL SUBOPT_0x22
000434 940e 0929 	CALL __ANEGF1
000436 940e 08a8 	CALL SUBOPT_0x20
000438 e2ed      	LDI  R30,LOW(45)
000439 8bed      	STD  Y+21,R30
                 _0x200005D:
00043a ff07      	SBRS R16,7
00043b c005      	RJMP _0x2000061
00043c 89ed      	LDD  R30,Y+21
00043d 93ea      	ST   -Y,R30
00043e 940e 089b 	CALL SUBOPT_0x1E
000440 c008      	RJMP _0x2000062
                 _0x2000061:
                 _0x200005F:
000441 85ee      	LDD  R30,Y+14
000442 85ff      	LDD  R31,Y+14+1
000443 9631      	ADIW R30,1
000444 87ee      	STD  Y+14,R30
000445 87ff      	STD  Y+14+1,R31
000446 9731      	SBIW R30,1
000447 89ad      	LDD  R26,Y+21
000448 83a0      	STD  Z+0,R26
                 _0x2000062:
                 _0x2000060:
000449 ff05      	SBRS R16,5
00044a e046      	LDI  R20,LOW(6)
00044b 3626      	CPI  R18,102
00044c f451      	BRNE _0x2000064
00044d 940e 08af 	CALL SUBOPT_0x22
00044f 940e 0b66 	CALL __PUTPARD1
000451 934a      	ST   -Y,R20
000452 89ab      	LDD  R26,Y+19
000453 89bc      	LDD  R27,Y+19+1
000454 940e 06f9 	CALL _ftoa
000456 c009      	RJMP _0x2000065
                 _0x2000064:
000457 940e 08af 	CALL SUBOPT_0x22
000459 940e 0b66 	CALL __PUTPARD1
00045b 934a      	ST   -Y,R20
00045c 932a      	ST   -Y,R18
00045d 89ac      	LDD  R26,Y+20
00045e 89bd      	LDD  R27,Y+20+1
00045f de54      	RCALL __ftoe_G100
                 _0x2000065:
000460 01fe      	MOVW R30,R28
000461 9676      	ADIW R30,22
000462 940e 08b4 	CALL SUBOPT_0x23
000464 c01e      	RJMP _0x2000066
                 _0x200005A:
000465 37e3      	CPI  R30,LOW(0x73)
000466 f439      	BRNE _0x2000068
000467 940e 08ad 	CALL SUBOPT_0x21
000469 940e 08bc 	CALL SUBOPT_0x24
00046b 940e 08b4 	CALL SUBOPT_0x23
00046d c00e      	RJMP _0x2000069
                 _0x2000068:
00046e 37e0      	CPI  R30,LOW(0x70)
00046f f4c1      	BRNE _0x200006B
000470 940e 08ad 	CALL SUBOPT_0x21
000472 940e 08bc 	CALL SUBOPT_0x24
000474 87ee      	STD  Y+14,R30
000475 87ff      	STD  Y+14+1,R31
000476 85ae      	LDD  R26,Y+14
000477 85bf      	LDD  R27,Y+14+1
000478 940e 06a4 	CALL _strlenf
00047a 2f1e      	MOV  R17,R30
00047b 6008      	ORI  R16,LOW(8)
                 _0x2000069:
00047c 770f      	ANDI R16,LOW(127)
00047d 3040      	CPI  R20,0
00047e f011      	BREQ _0x200006D
00047f 1741      	CP   R20,R17
000480 f008      	BRLO _0x200006E
                 _0x200006D:
000481 c001      	RJMP _0x200006C
                 _0x200006E:
000482 2f14      	MOV  R17,R20
                 _0x200006C:
                 _0x2000066:
000483 e040      	LDI  R20,LOW(0)
000484 e0e0      	LDI  R30,LOW(0)
000485 8bec      	STD  Y+20,R30
000486 e030      	LDI  R19,LOW(0)
000487 c06d      	RJMP _0x200006F
                 _0x200006B:
000488 36e4      	CPI  R30,LOW(0x64)
000489 f011      	BREQ _0x2000072
00048a 36e9      	CPI  R30,LOW(0x69)
00048b f411      	BRNE _0x2000073
                 _0x2000072:
00048c 6004      	ORI  R16,LOW(4)
00048d c002      	RJMP _0x2000074
                 _0x2000073:
00048e 37e5      	CPI  R30,LOW(0x75)
00048f f4a1      	BRNE _0x2000075
                 _0x2000074:
000490 e0ea      	LDI  R30,LOW(10)
000491 8bec      	STD  Y+20,R30
000492 ff01      	SBRS R16,1
000493 c008      	RJMP _0x2000076
                +
000494 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000495 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000496 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000497 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000498 940e 08c1 	CALL SUBOPT_0x25
00049a e01a      	LDI  R17,LOW(10)
00049b c022      	RJMP _0x2000077
                 _0x2000076:
                +
00049c e1e0     +LDI R30 , LOW ( 0x2710 )
00049d e2f7     +LDI R31 , HIGH ( 0x2710 )
00049e e060     +LDI R22 , BYTE3 ( 0x2710 )
00049f e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0004a0 940e 08c1 	CALL SUBOPT_0x25
0004a2 e015      	LDI  R17,LOW(5)
0004a3 c01a      	RJMP _0x2000077
                 _0x2000075:
0004a4 35e8      	CPI  R30,LOW(0x58)
0004a5 f411      	BRNE _0x2000079
0004a6 6008      	ORI  R16,LOW(8)
0004a7 c003      	RJMP _0x200007A
                 _0x2000079:
0004a8 37e8      	CPI  R30,LOW(0x78)
0004a9 f009      	BREQ PC+2
0004aa c0ea      	RJMP _0x20000B8
                 _0x200007A:
0004ab e1e0      	LDI  R30,LOW(16)
0004ac 8bec      	STD  Y+20,R30
0004ad ff01      	SBRS R16,1
0004ae c008      	RJMP _0x200007C
                +
0004af e0e0     +LDI R30 , LOW ( 0x10000000 )
0004b0 e0f0     +LDI R31 , HIGH ( 0x10000000 )
0004b1 e060     +LDI R22 , BYTE3 ( 0x10000000 )
0004b2 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0004b3 940e 08c1 	CALL SUBOPT_0x25
0004b5 e018      	LDI  R17,LOW(8)
0004b6 c007      	RJMP _0x2000077
                 _0x200007C:
                +
0004b7 e0e0     +LDI R30 , LOW ( 0x1000 )
0004b8 e1f0     +LDI R31 , HIGH ( 0x1000 )
0004b9 e060     +LDI R22 , BYTE3 ( 0x1000 )
0004ba e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0004bb 940e 08c1 	CALL SUBOPT_0x25
0004bd e014      	LDI  R17,LOW(4)
                 _0x2000077:
0004be 3040      	CPI  R20,0
0004bf f011      	BREQ _0x200007D
0004c0 770f      	ANDI R16,LOW(127)
0004c1 c001      	RJMP _0x200007E
                 _0x200007D:
0004c2 e041      	LDI  R20,LOW(1)
                 _0x200007E:
0004c3 ff01      	SBRS R16,1
0004c4 c008      	RJMP _0x200007F
0004c5 940e 08ad 	CALL SUBOPT_0x21
0004c7 940e 08a1 	CALL SUBOPT_0x1F
0004c9 9614      	ADIW R26,4
0004ca 940e 0b47 	CALL __GETD1P
0004cc c00f      	RJMP _0x2000115
                 _0x200007F:
0004cd ff02      	SBRS R16,2
0004ce c007      	RJMP _0x2000081
0004cf 940e 08ad 	CALL SUBOPT_0x21
0004d1 940e 08bc 	CALL SUBOPT_0x24
0004d3 940e 0ae4 	CALL __CWD1
0004d5 c006      	RJMP _0x2000115
                 _0x2000081:
0004d6 940e 08ad 	CALL SUBOPT_0x21
0004d8 940e 08bc 	CALL SUBOPT_0x24
0004da 2766      	CLR  R22
0004db 2777      	CLR  R23
                 _0x2000115:
                +
0004dc 87ea     +STD Y + 10 , R30
0004dd 87fb     +STD Y + 10 + 1 , R31
0004de 876c     +STD Y + 10 + 2 , R22
0004df 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0004e0 ff02      	SBRS R16,2
0004e1 c012      	RJMP _0x2000083
0004e2 85ad      	LDD  R26,Y+13
0004e3 23aa      	TST  R26
0004e4 f442      	BRPL _0x2000084
0004e5 940e 08af 	CALL SUBOPT_0x22
0004e7 940e 0ad6 	CALL __ANEGD1
0004e9 940e 08a8 	CALL SUBOPT_0x20
0004eb e2ed      	LDI  R30,LOW(45)
0004ec 8bed      	STD  Y+21,R30
                 _0x2000084:
0004ed 89ed      	LDD  R30,Y+21
0004ee 30e0      	CPI  R30,0
0004ef f019      	BREQ _0x2000085
0004f0 5f1f      	SUBI R17,-LOW(1)
0004f1 5f4f      	SUBI R20,-LOW(1)
0004f2 c001      	RJMP _0x2000086
                 _0x2000085:
0004f3 7f0b      	ANDI R16,LOW(251)
                 _0x2000086:
                 _0x2000083:
0004f4 2f34      	MOV  R19,R20
                 _0x200006F:
0004f5 fd00      	SBRC R16,0
0004f6 c014      	RJMP _0x2000087
                 _0x2000088:
0004f7 1715      	CP   R17,R21
0004f8 f410      	BRSH _0x200008B
0004f9 1735      	CP   R19,R21
0004fa f008      	BRLO _0x200008C
                 _0x200008B:
0004fb c00f      	RJMP _0x200008A
                 _0x200008C:
0004fc ff07      	SBRS R16,7
0004fd c008      	RJMP _0x200008D
0004fe ff02      	SBRS R16,2
0004ff c004      	RJMP _0x200008E
000500 7f0b      	ANDI R16,LOW(251)
000501 892d      	LDD  R18,Y+21
000502 5011      	SUBI R17,LOW(1)
000503 c001      	RJMP _0x200008F
                 _0x200008E:
000504 e320      	LDI  R18,LOW(48)
                 _0x200008F:
000505 c001      	RJMP _0x2000090
                 _0x200008D:
000506 e220      	LDI  R18,LOW(32)
                 _0x2000090:
000507 940e 0886 	CALL SUBOPT_0x1B
000509 5051      	SUBI R21,LOW(1)
00050a cfec      	RJMP _0x2000088
                 _0x200008A:
                 _0x2000087:
                 _0x2000091:
00050b 1714      	CP   R17,R20
00050c f490      	BRSH _0x2000093
00050d 6100      	ORI  R16,LOW(16)
00050e ff02      	SBRS R16,2
00050f c006      	RJMP _0x2000094
000510 940e 08c6 	CALL SUBOPT_0x26
000512 f009      	BREQ _0x2000095
000513 5051      	SUBI R21,LOW(1)
                 _0x2000095:
000514 5011      	SUBI R17,LOW(1)
000515 5041      	SUBI R20,LOW(1)
                 _0x2000094:
000516 e3e0      	LDI  R30,LOW(48)
000517 93ea      	ST   -Y,R30
000518 940e 089b 	CALL SUBOPT_0x1E
00051a 3050      	CPI  R21,0
00051b f009      	BREQ _0x2000096
00051c 5051      	SUBI R21,LOW(1)
                 _0x2000096:
00051d 5041      	SUBI R20,LOW(1)
00051e cfec      	RJMP _0x2000091
                 _0x2000093:
00051f 2f31      	MOV  R19,R17
000520 89ec      	LDD  R30,Y+20
000521 30e0      	CPI  R30,0
000522 f4b9      	BRNE _0x2000097
                 _0x2000098:
000523 3030      	CPI  R19,0
000524 f0a1      	BREQ _0x200009A
000525 ff03      	SBRS R16,3
000526 c006      	RJMP _0x200009B
000527 85ee      	LDD  R30,Y+14
000528 85ff      	LDD  R31,Y+14+1
000529 9125      	LPM  R18,Z+
00052a 87ee      	STD  Y+14,R30
00052b 87ff      	STD  Y+14+1,R31
00052c c005      	RJMP _0x200009C
                 _0x200009B:
00052d 85ae      	LDD  R26,Y+14
00052e 85bf      	LDD  R27,Y+14+1
00052f 912d      	LD   R18,X+
000530 87ae      	STD  Y+14,R26
000531 87bf      	STD  Y+14+1,R27
                 _0x200009C:
000532 940e 0886 	CALL SUBOPT_0x1B
000534 3050      	CPI  R21,0
000535 f009      	BREQ _0x200009D
000536 5051      	SUBI R21,LOW(1)
                 _0x200009D:
000537 5031      	SUBI R19,LOW(1)
000538 cfea      	RJMP _0x2000098
                 _0x200009A:
000539 c051      	RJMP _0x200009E
                 _0x2000097:
                 _0x20000A0:
00053a 940e 08d8 	CALL SUBOPT_0x27
00053c 940e 0b02 	CALL __DIVD21U
00053e 2f2e      	MOV  R18,R30
00053f 302a      	CPI  R18,10
000540 f030      	BRLO _0x20000A2
000541 ff03      	SBRS R16,3
000542 c002      	RJMP _0x20000A3
000543 5c29      	SUBI R18,-LOW(55)
000544 c001      	RJMP _0x20000A4
                 _0x20000A3:
000545 5a29      	SUBI R18,-LOW(87)
                 _0x20000A4:
000546 c001      	RJMP _0x20000A5
                 _0x20000A2:
000547 5d20      	SUBI R18,-LOW(48)
                 _0x20000A5:
000548 fd04      	SBRC R16,4
000549 c021      	RJMP _0x20000A7
00054a 3321      	CPI  R18,49
00054b f460      	BRSH _0x20000A9
                +
00054c 89a8     +LDD R26 , Y + 16
00054d 89b9     +LDD R27 , Y + 16 + 1
00054e 898a     +LDD R24 , Y + 16 + 2
00054f 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000550 30a1     +CPI R26 , LOW ( 0x1 )
000551 e0e0     +LDI R30 , HIGH ( 0x1 )
000552 07be     +CPC R27 , R30
000553 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000554 078e     +CPC R24 , R30
000555 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000556 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000557 f409      	BRNE _0x20000A8
                 _0x20000A9:
000558 c00b      	RJMP _0x20000AB
                 _0x20000A8:
000559 1743      	CP   R20,R19
00055a f440      	BRSH _0x2000116
00055b 1753      	CP   R21,R19
00055c f010      	BRLO _0x20000AE
00055d ff00      	SBRS R16,0
00055e c001      	RJMP _0x20000AF
                 _0x20000AE:
00055f c010      	RJMP _0x20000AD
                 _0x20000AF:
000560 e220      	LDI  R18,LOW(32)
000561 ff07      	SBRS R16,7
000562 c008      	RJMP _0x20000B0
                 _0x2000116:
000563 e320      	LDI  R18,LOW(48)
                 _0x20000AB:
000564 6100      	ORI  R16,LOW(16)
000565 ff02      	SBRS R16,2
000566 c004      	RJMP _0x20000B1
000567 940e 08c6 	CALL SUBOPT_0x26
000569 f009      	BREQ _0x20000B2
00056a 5051      	SUBI R21,LOW(1)
                 _0x20000B2:
                 _0x20000B1:
                 _0x20000B0:
                 _0x20000A7:
00056b 940e 0886 	CALL SUBOPT_0x1B
00056d 3050      	CPI  R21,0
00056e f009      	BREQ _0x20000B3
00056f 5051      	SUBI R21,LOW(1)
                 _0x20000B3:
                 _0x20000AD:
000570 5031      	SUBI R19,LOW(1)
000571 940e 08d8 	CALL SUBOPT_0x27
000573 940e 0b33 	CALL __MODD21U
000575 940e 08a8 	CALL SUBOPT_0x20
000577 89ec      	LDD  R30,Y+20
                +
000578 89a8     +LDD R26 , Y + 16
000579 89b9     +LDD R27 , Y + 16 + 1
00057a 898a     +LDD R24 , Y + 16 + 2
00057b 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00057c 27ff      	CLR  R31
00057d 2766      	CLR  R22
00057e 2777      	CLR  R23
00057f 940e 0b02 	CALL __DIVD21U
000581 940e 08c1 	CALL SUBOPT_0x25
                +
000583 89e8     +LDD R30 , Y + 16
000584 89f9     +LDD R31 , Y + 16 + 1
000585 896a     +LDD R22 , Y + 16 + 2
000586 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000587 940e 0b7d 	CALL __CPD10
000589 f009      	BREQ _0x20000A1
00058a cfaf      	RJMP _0x20000A0
                 _0x20000A1:
                 _0x200009E:
00058b ff00      	SBRS R16,0
00058c c008      	RJMP _0x20000B4
                 _0x20000B5:
00058d 3050      	CPI  R21,0
00058e f031      	BREQ _0x20000B7
00058f 5051      	SUBI R21,LOW(1)
000590 e2e0      	LDI  R30,LOW(32)
000591 93ea      	ST   -Y,R30
000592 940e 089b 	CALL SUBOPT_0x1E
000594 cff8      	RJMP _0x20000B5
                 _0x20000B7:
                 _0x20000B4:
                 _0x20000B8:
                 _0x2000054:
                 _0x2000114:
000595 e010      	LDI  R17,LOW(0)
                 _0x2000035:
000596 ce0c      	RJMP _0x2000030
                 _0x2000032:
000597 81ae      	LDD  R26,Y+6
000598 81bf      	LDD  R27,Y+6+1
000599 940e 0b43 	CALL __GETW1P
00059b 940e 0b8d 	CALL __LOADLOCR6
00059d 96ef      	ADIW R28,63
00059e 966f      	ADIW R28,31
00059f 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0005a0 92ff      	PUSH R15
0005a1 2ef8      	MOV  R15,R24
0005a2 9726      	SBIW R28,6
0005a3 940e 0b88 	CALL __SAVELOCR4
0005a5 940e 08e1 	CALL SUBOPT_0x28
0005a7 9730      	SBIW R30,0
0005a8 f419      	BRNE _0x20000B9
0005a9 efef      	LDI  R30,LOW(65535)
0005aa efff      	LDI  R31,HIGH(65535)
0005ab c023      	RJMP _0x20E0006
                 _0x20000B9:
0005ac 01de      	MOVW R26,R28
0005ad 9616      	ADIW R26,6
0005ae 940e 0ad2 	CALL __ADDW2R15
0005b0 018d      	MOVW R16,R26
0005b1 940e 08e1 	CALL SUBOPT_0x28
0005b3 83ee      	STD  Y+6,R30
0005b4 83ff      	STD  Y+6+1,R31
0005b5 e0e0      	LDI  R30,LOW(0)
0005b6 87e8      	STD  Y+8,R30
0005b7 87e9      	STD  Y+8+1,R30
0005b8 01de      	MOVW R26,R28
0005b9 961a      	ADIW R26,10
0005ba 940e 0ad2 	CALL __ADDW2R15
0005bc 940e 0b43 	CALL __GETW1P
0005be 93fa      	ST   -Y,R31
0005bf 93ea      	ST   -Y,R30
0005c0 931a      	ST   -Y,R17
0005c1 930a      	ST   -Y,R16
0005c2 e7ea      	LDI  R30,LOW(_put_buff_G100)
0005c3 e0f2      	LDI  R31,HIGH(_put_buff_G100)
0005c4 93fa      	ST   -Y,R31
0005c5 93ea      	ST   -Y,R30
0005c6 01de      	MOVW R26,R28
0005c7 961a      	ADIW R26,10
0005c8 ddbd      	RCALL __print_G100
0005c9 019f      	MOVW R18,R30
0005ca 81ae      	LDD  R26,Y+6
0005cb 81bf      	LDD  R27,Y+6+1
0005cc e0e0      	LDI  R30,LOW(0)
0005cd 93ec      	ST   X,R30
0005ce 01f9      	MOVW R30,R18
                 _0x20E0006:
0005cf 940e 0b8f 	CALL __LOADLOCR4
0005d1 962a      	ADIW R28,10
0005d2 90ff      	POP  R15
0005d3 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
0005d4 93aa      	ST   -Y,R26
0005d5 b3e5      	IN   R30,0x15
0005d6 70ef      	ANDI R30,LOW(0xF)
0005d7 2fae      	MOV  R26,R30
0005d8 81e8      	LD   R30,Y
0005d9 7fe0      	ANDI R30,LOW(0xF0)
0005da 2bea      	OR   R30,R26
0005db bbe5      	OUT  0x15,R30
                +
0005dc e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
0005dd 958a     +DEC R24
0005de f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
0005df 9aa9      	SBI  0x15,1
                +
0005e0 e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
0005e1 958a     +DEC R24
0005e2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
0005e3 98a9      	CBI  0x15,1
                +
0005e4 e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
0005e5 958a     +DEC R24
0005e6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
0005e7 c0a1      	RJMP _0x20E0004
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0005e8 93aa      	ST   -Y,R26
0005e9 81a8      	LD   R26,Y
0005ea dfe9      	RCALL __lcd_write_nibble_G101
0005eb 81e8          ld    r30,y
0005ec 95e2          swap  r30
0005ed 83e8          st    y,r30
0005ee 81a8      	LD   R26,Y
0005ef dfe4      	RCALL __lcd_write_nibble_G101
                +
0005f0 ea87     +LDI R24 , LOW ( 167 )
                +__DELAY_USB_LOOP :
0005f1 958a     +DEC R24
0005f2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 167
0005f3 c095      	RJMP _0x20E0004
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0005f4 93aa      	ST   -Y,R26
0005f5 81e8      	LD   R30,Y
0005f6 e0f0      	LDI  R31,0
0005f7 5ae4      	SUBI R30,LOW(-__base_y_G101)
0005f8 4ffa      	SBCI R31,HIGH(-__base_y_G101)
0005f9 81e0      	LD   R30,Z
0005fa 81a9      	LDD  R26,Y+1
0005fb 0fae      	ADD  R26,R30
0005fc dfeb      	RCALL __lcd_write_data
0005fd 81e9      	LDD  R30,Y+1
0005fe 93e0 0560 	STS  __lcd_x,R30
000600 81e8      	LD   R30,Y
000601 93e0 0561 	STS  __lcd_y,R30
000603 9622      	ADIW R28,2
000604 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000605 e0a2      	LDI  R26,LOW(2)
000606 940e 08e8 	CALL SUBOPT_0x29
000608 e0ac      	LDI  R26,LOW(12)
000609 dfde      	RCALL __lcd_write_data
00060a e0a1      	LDI  R26,LOW(1)
00060b 940e 08e8 	CALL SUBOPT_0x29
00060d e0e0      	LDI  R30,LOW(0)
00060e 93e0 0561 	STS  __lcd_y,R30
000610 93e0 0560 	STS  __lcd_x,R30
000612 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000613 93aa      	ST   -Y,R26
000614 81a8      	LD   R26,Y
000615 30aa      	CPI  R26,LOW(0xA)
000616 f031      	BREQ _0x2020005
000617 91e0 0562 	LDS  R30,__lcd_maxx
000619 91a0 0560 	LDS  R26,__lcd_x
00061b 17ae      	CP   R26,R30
00061c f060      	BRLO _0x2020004
                 _0x2020005:
00061d e0e0      	LDI  R30,LOW(0)
00061e 93ea      	ST   -Y,R30
00061f 91a0 0561 	LDS  R26,__lcd_y
000621 5faf      	SUBI R26,-LOW(1)
000622 93a0 0561 	STS  __lcd_y,R26
000624 dfcf      	RCALL _lcd_gotoxy
000625 81a8      	LD   R26,Y
000626 30aa      	CPI  R26,LOW(0xA)
000627 f409      	BRNE _0x2020007
000628 c060      	RJMP _0x20E0004
                 _0x2020007:
                 _0x2020004:
000629 91e0 0560 	LDS  R30,__lcd_x
00062b 5fef      	SUBI R30,-LOW(1)
00062c 93e0 0560 	STS  __lcd_x,R30
00062e 9aa8      	SBI  0x15,0
00062f 81a8      	LD   R26,Y
000630 dfb7      	RCALL __lcd_write_data
000631 98a8      	CBI  0x15,0
000632 c056      	RJMP _0x20E0004
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000633 93ba      	ST   -Y,R27
000634 93aa      	ST   -Y,R26
000635 931a      	ST   -Y,R17
                 _0x2020008:
000636 81a9      	LDD  R26,Y+1
000637 81ba      	LDD  R27,Y+1+1
000638 91ed      	LD   R30,X+
000639 83a9      	STD  Y+1,R26
00063a 83ba      	STD  Y+1+1,R27
00063b 2f1e      	MOV  R17,R30
00063c 30e0      	CPI  R30,0
00063d f019      	BREQ _0x202000A
00063e 2fa1      	MOV  R26,R17
00063f dfd3      	RCALL _lcd_putchar
000640 cff5      	RJMP _0x2020008
                 _0x202000A:
000641 c010      	RJMP _0x20E0005
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
000642 93ba      	ST   -Y,R27
000643 93aa      	ST   -Y,R26
000644 931a      	ST   -Y,R17
                 _0x202000B:
000645 81e9      	LDD  R30,Y+1
000646 81fa      	LDD  R31,Y+1+1
000647 9631      	ADIW R30,1
000648 83e9      	STD  Y+1,R30
000649 83fa      	STD  Y+1+1,R31
00064a 9731      	SBIW R30,1
00064b 91e4      	LPM  R30,Z
00064c 2f1e      	MOV  R17,R30
00064d 30e0      	CPI  R30,0
00064e f019      	BREQ _0x202000D
00064f 2fa1      	MOV  R26,R17
000650 dfc2      	RCALL _lcd_putchar
000651 cff3      	RJMP _0x202000B
                 _0x202000D:
                 _0x20E0005:
000652 8118      	LDD  R17,Y+0
000653 9623      	ADIW R28,3
000654 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000655 93aa      	ST   -Y,R26
000656 b3e4      	IN   R30,0x14
000657 6fe0      	ORI  R30,LOW(0xF0)
000658 bbe4      	OUT  0x14,R30
000659 9aa1      	SBI  0x14,1
00065a 9aa0      	SBI  0x14,0
00065b 9aa2      	SBI  0x14,2
00065c 98a9      	CBI  0x15,1
00065d 98a8      	CBI  0x15,0
00065e 98aa      	CBI  0x15,2
00065f 81e8      	LD   R30,Y
000660 93e0 0562 	STS  __lcd_maxx,R30
000662 58e0      	SUBI R30,-LOW(128)
                +
000663 93e0 055e+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
000665 81e8      	LD   R30,Y
000666 54e0      	SUBI R30,-LOW(192)
                +
000667 93e0 055f+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
000669 e1a4      	LDI  R26,LOW(20)
00066a e0b0      	LDI  R27,0
00066b 940e 091f 	CALL _delay_ms
00066d 940e 08ee 	CALL SUBOPT_0x2A
00066f 940e 08ee 	CALL SUBOPT_0x2A
000671 940e 08ee 	CALL SUBOPT_0x2A
000673 e2a0      	LDI  R26,LOW(32)
000674 df5f      	RCALL __lcd_write_nibble_G101
                +
000675 ef8a     +LDI R24 , LOW ( 250 )
000676 e090     +LDI R25 , HIGH ( 250 )
                +__DELAY_USW_LOOP :
000677 9701     +SBIW R24 , 1
000678 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 250
000679 e2a8      	LDI  R26,LOW(40)
00067a df6d      	RCALL __lcd_write_data
00067b e0a4      	LDI  R26,LOW(4)
00067c df6b      	RCALL __lcd_write_data
00067d e8a5      	LDI  R26,LOW(133)
00067e df69      	RCALL __lcd_write_data
00067f e0a6      	LDI  R26,LOW(6)
000680 df67      	RCALL __lcd_write_data
000681 df83      	RCALL _lcd_clear
000682 c006      	RJMP _0x20E0004
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _spi:
                 ; .FSTART _spi
000683 93aa      	ST   -Y,R26
000684 81e8      	LD   R30,Y
000685 b9ef      	OUT  0xF,R30
                 _0x2040003:
000686 9b77      	SBIS 0xE,7
000687 cffe      	RJMP _0x2040003
000688 b1ef      	IN   R30,0xF
                 _0x20E0004:
000689 9621      	ADIW R28,1
00068a 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
00068b 93ba      	ST   -Y,R27
00068c 93aa      	ST   -Y,R26
00068d 91e9          ld   r30,y+
00068e 91f9          ld   r31,y+
00068f 91a9          ld   r26,y+
000690 91b9          ld   r27,y+
000691 01cd          movw r24,r26
                 strcpyf0:
000692 9005      	lpm  r0,z+
000693 920d          st   x+,r0
000694 2000          tst  r0
000695 f7e1          brne strcpyf0
000696 01fc          movw r30,r24
000697 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000698 93ba      	ST   -Y,R27
000699 93aa      	ST   -Y,R26
00069a 91a9          ld   r26,y+
00069b 91b9          ld   r27,y+
00069c 27ee          clr  r30
00069d 27ff          clr  r31
                 strlen0:
00069e 916d          ld   r22,x+
00069f 2366          tst  r22
0006a0 f011          breq strlen1
0006a1 9631          adiw r30,1
0006a2 cffb          rjmp strlen0
                 strlen1:
0006a3 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0006a4 93ba      	ST   -Y,R27
0006a5 93aa      	ST   -Y,R26
0006a6 27aa          clr  r26
0006a7 27bb          clr  r27
0006a8 91e9          ld   r30,y+
0006a9 91f9          ld   r31,y+
                 strlenf0:
0006aa 9005      	lpm  r0,z+
0006ab 2000          tst  r0
0006ac f011          breq strlenf1
0006ad 9611          adiw r26,1
0006ae cffb          rjmp strlenf0
                 strlenf1:
0006af 01fd          movw r30,r26
0006b0 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
0006b1 940e 0b6b 	CALL __PUTPARD2
0006b3 817b         ldd  r23,y+3
0006b4 816a         ldd  r22,y+2
0006b5 81f9         ldd  r31,y+1
0006b6 81e8         ld   r30,y
0006b7 fb77         bst  r23,7
0006b8 0f77         lsl  r23
0006b9 fd67         sbrc r22,7
0006ba 6071         sbr  r23,1
0006bb 2f97         mov  r25,r23
0006bc 579e         subi r25,0x7e
0006bd f081         breq __ftrunc0
0006be f078         brcs __ftrunc0
0006bf 3198         cpi  r25,24
0006c0 f490         brsh __ftrunc1
0006c1 27aa         clr  r26
0006c2 27bb         clr  r27
0006c3 2788         clr  r24
                 __ftrunc2:
0006c4 9408         sec
0006c5 9587         ror  r24
0006c6 95b7         ror  r27
0006c7 95a7         ror  r26
0006c8 959a         dec  r25
0006c9 f7d1         brne __ftrunc2
0006ca 23ea         and  r30,r26
0006cb 23fb         and  r31,r27
0006cc 2368         and  r22,r24
0006cd c005         rjmp __ftrunc1
                 __ftrunc0:
0006ce 94e8         clt
0006cf 2777         clr  r23
0006d0 27ee         clr  r30
0006d1 27ff         clr  r31
0006d2 2766         clr  r22
                 __ftrunc1:
0006d3 776f         cbr  r22,0x80
0006d4 9576         lsr  r23
0006d5 f408         brcc __ftrunc3
0006d6 6860         sbr  r22,0x80
                 __ftrunc3:
0006d7 f977         bld  r23,7
0006d8 91a9         ld   r26,y+
0006d9 91b9         ld   r27,y+
0006da 9189         ld   r24,y+
0006db 9199         ld   r25,y+
0006dc 17ea         cp   r30,r26
0006dd 07fb         cpc  r31,r27
0006de 0768         cpc  r22,r24
0006df 0779         cpc  r23,r25
0006e0 fb97         bst  r25,7
0006e1 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0006e2 940e 0b6b 	CALL __PUTPARD2
0006e4 940e 0b5c 	CALL __GETD2S0
0006e6 940e 06b1 	CALL _ftrunc
0006e8 940e 0b61 	CALL __PUTD1S0
0006ea f419          brne __floor1
                 __floor0:
0006eb 940e 0b57 	CALL __GETD1S0
0006ed c009      	RJMP _0x20E0003
                 __floor1:
0006ee f7e6          brtc __floor0
0006ef 940e 0b57 	CALL __GETD1S0
                +
0006f1 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0006f2 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0006f3 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0006f4 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0006f5 940e 09c8 	CALL __SUBF12
                 _0x20E0003:
0006f7 9624      	ADIW R28,4
0006f8 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
0006f9 d129      	RCALL SUBOPT_0xE
0006fa e0e0      	LDI  R30,LOW(0)
0006fb 83ea      	STD  Y+2,R30
0006fc e3ef      	LDI  R30,LOW(63)
0006fd 83eb      	STD  Y+3,R30
0006fe 931a      	ST   -Y,R17
0006ff 930a      	ST   -Y,R16
000700 85eb      	LDD  R30,Y+11
000701 85fc      	LDD  R31,Y+11+1
000702 3fef      	CPI  R30,LOW(0xFFFF)
000703 efaf      	LDI  R26,HIGH(0xFFFF)
000704 07fa      	CPC  R31,R26
000705 f431      	BRNE _0x20C000D
000706 d1ef      	RCALL SUBOPT_0x2B
                +
000707 e2ae     +LDI R26 , LOW ( 2 * _0x20C0000 + ( 0 ) )
000708 e0b1     +LDI R27 , HIGH ( 2 * _0x20C0000 + ( 0 ) )
                 	__POINTW2FN _0x20C0000,0
000709 940e 068b 	CALL _strcpyf
00070b c08a      	RJMP _0x20E0002
                 _0x20C000D:
00070c 3fef      	CPI  R30,LOW(0x7FFF)
00070d e7af      	LDI  R26,HIGH(0x7FFF)
00070e 07fa      	CPC  R31,R26
00070f f431      	BRNE _0x20C000C
000710 d1e5      	RCALL SUBOPT_0x2B
                +
000711 e2af     +LDI R26 , LOW ( 2 * _0x20C0000 + ( 1 ) )
000712 e0b1     +LDI R27 , HIGH ( 2 * _0x20C0000 + ( 1 ) )
                 	__POINTW2FN _0x20C0000,1
000713 940e 068b 	CALL _strcpyf
000715 c080      	RJMP _0x20E0002
                 _0x20C000C:
000716 85ac      	LDD  R26,Y+12
000717 23aa      	TST  R26
000718 f452      	BRPL _0x20C000F
                +
000719 85e9     +LDD R30 , Y + 9
00071a 85fa     +LDD R31 , Y + 9 + 1
00071b 856b     +LDD R22 , Y + 9 + 2
00071c 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00071d 940e 0929 	CALL __ANEGF1
00071f d1db      	RCALL SUBOPT_0x2C
000720 d1df      	RCALL SUBOPT_0x2D
000721 e2ed      	LDI  R30,LOW(45)
000722 93ec      	ST   X,R30
                 _0x20C000F:
000723 85a8      	LDD  R26,Y+8
000724 30a7      	CPI  R26,LOW(0x7)
000725 f010      	BRLO _0x20C0010
000726 e0e6      	LDI  R30,LOW(6)
000727 87e8      	STD  Y+8,R30
                 _0x20C0010:
000728 8518      	LDD  R17,Y+8
                 _0x20C0011:
000729 2fe1      	MOV  R30,R17
00072a 5011      	SUBI R17,1
00072b 30e0      	CPI  R30,0
00072c f021      	BREQ _0x20C0013
00072d d1d9      	RCALL SUBOPT_0x2E
00072e d139      	RCALL SUBOPT_0x16
00072f d1dc      	RCALL SUBOPT_0x2F
000730 cff8      	RJMP _0x20C0011
                 _0x20C0013:
000731 d1df      	RCALL SUBOPT_0x30
000732 940e 09cf 	CALL __ADDF12
000734 d1c6      	RCALL SUBOPT_0x2C
000735 e010      	LDI  R17,LOW(0)
                +
000736 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000737 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000738 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000739 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00073a d1d1      	RCALL SUBOPT_0x2F
                 _0x20C0014:
00073b d1d5      	RCALL SUBOPT_0x30
00073c 940e 0ab2 	CALL __CMPF12
00073e f068      	BRLO _0x20C0016
00073f d1c7      	RCALL SUBOPT_0x2E
000740 d114      	RCALL SUBOPT_0x13
000741 d1ca      	RCALL SUBOPT_0x2F
000742 5f1f      	SUBI R17,-LOW(1)
000743 3217      	CPI  R17,39
000744 f030      	BRLO _0x20C0017
000745 d1b0      	RCALL SUBOPT_0x2B
                +
000746 e3a3     +LDI R26 , LOW ( 2 * _0x20C0000 + ( 5 ) )
000747 e0b1     +LDI R27 , HIGH ( 2 * _0x20C0000 + ( 5 ) )
                 	__POINTW2FN _0x20C0000,5
000748 940e 068b 	CALL _strcpyf
00074a c04b      	RJMP _0x20E0002
                 _0x20C0017:
00074b cfef      	RJMP _0x20C0014
                 _0x20C0016:
00074c 3010      	CPI  R17,0
00074d f421      	BRNE _0x20C0018
00074e d1b1      	RCALL SUBOPT_0x2D
00074f e3e0      	LDI  R30,LOW(48)
000750 93ec      	ST   X,R30
000751 c020      	RJMP _0x20C0019
                 _0x20C0018:
                 _0x20C001A:
000752 2fe1      	MOV  R30,R17
000753 5011      	SUBI R17,1
000754 30e0      	CPI  R30,0
000755 f0e1      	BREQ _0x20C001C
000756 d1b0      	RCALL SUBOPT_0x2E
000757 d110      	RCALL SUBOPT_0x16
000758 d108      	RCALL SUBOPT_0x15
000759 01df      	MOVW R26,R30
00075a 01cb      	MOVW R24,R22
00075b 940e 06e2 	CALL _floor
00075d d1ae      	RCALL SUBOPT_0x2F
00075e d1b2      	RCALL SUBOPT_0x30
00075f 940e 0a6d 	CALL __DIVF21
000761 940e 095c 	CALL __CFD1U
000763 2f0e      	MOV  R16,R30
000764 d19b      	RCALL SUBOPT_0x2D
000765 d110      	RCALL SUBOPT_0x18
000766 e0f0      	LDI  R31,0
000767 d19f      	RCALL SUBOPT_0x2E
000768 940e 0ae4 	CALL __CWD1
00076a 940e 0995 	CALL __CDF1
00076c 940e 0a1f 	CALL __MULF12
00076e d1ab      	RCALL SUBOPT_0x31
00076f d10b      	RCALL SUBOPT_0x19
000770 d18a      	RCALL SUBOPT_0x2C
000771 cfe0      	RJMP _0x20C001A
                 _0x20C001C:
                 _0x20C0019:
000772 85e8      	LDD  R30,Y+8
000773 30e0      	CPI  R30,0
000774 f0e9      	BREQ _0x20E0001
000775 d18a      	RCALL SUBOPT_0x2D
000776 e2ee      	LDI  R30,LOW(46)
000777 93ec      	ST   X,R30
                 _0x20C001E:
000778 85e8      	LDD  R30,Y+8
000779 50e1      	SUBI R30,LOW(1)
00077a 87e8      	STD  Y+8,R30
00077b 5fef      	SUBI R30,-LOW(1)
00077c f0a9      	BREQ _0x20C0020
00077d d19c      	RCALL SUBOPT_0x31
00077e d0d6      	RCALL SUBOPT_0x13
00077f d17b      	RCALL SUBOPT_0x2C
                +
000780 85e9     +LDD R30 , Y + 9
000781 85fa     +LDD R31 , Y + 9 + 1
000782 856b     +LDD R22 , Y + 9 + 2
000783 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000784 940e 095c 	CALL __CFD1U
000786 2f0e      	MOV  R16,R30
000787 d178      	RCALL SUBOPT_0x2D
000788 d0ed      	RCALL SUBOPT_0x18
000789 e0f0      	LDI  R31,0
00078a d18f      	RCALL SUBOPT_0x31
00078b 940e 0ae4 	CALL __CWD1
00078d 940e 0995 	CALL __CDF1
00078f d0eb      	RCALL SUBOPT_0x19
000790 d16a      	RCALL SUBOPT_0x2C
000791 cfe6      	RJMP _0x20C001E
                 _0x20C0020:
                 _0x20E0001:
000792 81ae      	LDD  R26,Y+6
000793 81bf      	LDD  R27,Y+6+1
000794 e0e0      	LDI  R30,LOW(0)
000795 93ec      	ST   X,R30
                 _0x20E0002:
000796 8119      	LDD  R17,Y+1
000797 8108      	LDD  R16,Y+0
000798 962d      	ADIW R28,13
000799 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _move_right:
000536           	.BYTE 0x4
                 _move_left:
00053a           	.BYTE 0x4
                 _value:
00053e           	.BYTE 0x4
                 _step:
000542           	.BYTE 0x4
                 _text:
000546           	.BYTE 0x10
                 _temperature:
000556           	.BYTE 0x4
                 _data_dust:
00055a           	.BYTE 0x2
                 __base_y_G101:
00055c           	.BYTE 0x4
                 __lcd_x:
000560           	.BYTE 0x1
                 __lcd_y:
000561           	.BYTE 0x1
                 __lcd_maxx:
000562           	.BYTE 0x1
                 __seed_G106:
000563           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x0:
00079a 920a      	ST   -Y,R0
00079b 921a      	ST   -Y,R1
00079c 92fa      	ST   -Y,R15
00079d 936a      	ST   -Y,R22
00079e 937a      	ST   -Y,R23
00079f 938a      	ST   -Y,R24
0007a0 939a      	ST   -Y,R25
0007a1 93aa      	ST   -Y,R26
0007a2 93ba      	ST   -Y,R27
0007a3 93ea      	ST   -Y,R30
0007a4 93fa      	ST   -Y,R31
0007a5 b7ef      	IN   R30,SREG
0007a6 93ea      	ST   -Y,R30
0007a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
0007a8 940e 0605 	CALL _lcd_clear
0007aa e0e0      	LDI  R30,LOW(0)
0007ab 93ea      	ST   -Y,R30
0007ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
0007ad 940e 0642 	CALL _lcd_putsf
0007af eea8      	LDI  R26,LOW(1000)
0007b0 e0b3      	LDI  R27,HIGH(1000)
0007b1 940e 091f 	CALL _delay_ms
0007b3 cff4      	RJMP SUBOPT_0x1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
0007b4 e0e0      	LDI  R30,LOW(0)
0007b5 93ea      	ST   -Y,R30
0007b6 e0a1      	LDI  R26,LOW(1)
0007b7 940c 05f4 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
0007b9 e0a1      	LDI  R26,LOW(1)
0007ba 940e 05f4 	CALL _lcd_gotoxy
                +
0007bc eda8     +LDI R26 , LOW ( 2 * _0x0 + ( 62 ) )
0007bd e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 62 ) )
                 	__POINTW2FN _0x0,62
0007be 940c 0642 	JMP  _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x5:
0007c0 e6a4      	LDI  R26,LOW(100)
0007c1 e0b0      	LDI  R27,0
0007c2 940c 091f 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x6:
0007c4 2766      	CLR  R22
0007c5 2777      	CLR  R23
0007c6 940e 0995 	CALL __CDF1
0007c8 01df      	MOVW R26,R30
0007c9 01cb      	MOVW R24,R22
                +
0007ca e0e0     +LDI R30 , LOW ( 0x45800000 )
0007cb e0f0     +LDI R31 , HIGH ( 0x45800000 )
0007cc e860     +LDI R22 , BYTE3 ( 0x45800000 )
0007cd e475     +LDI R23 , BYTE4 ( 0x45800000 )
                 	__GETD1N 0x45800000
0007ce 940e 0a6d 	CALL __DIVF21
                +
0007d0 e0a0     +LDI R26 , LOW ( 0x43FA0000 )
0007d1 e0b0     +LDI R27 , HIGH ( 0x43FA0000 )
0007d2 ef8a     +LDI R24 , BYTE3 ( 0x43FA0000 )
0007d3 e493     +LDI R25 , BYTE4 ( 0x43FA0000 )
                 	__GETD2N 0x43FA0000
0007d4 940e 0a1f 	CALL __MULF12
0007d6 01df      	MOVW R26,R30
0007d7 01cb      	MOVW R24,R22
                +
0007d8 e0e0     +LDI R30 , LOW ( 0x425C0000 )
0007d9 e0f0     +LDI R31 , HIGH ( 0x425C0000 )
0007da e56c     +LDI R22 , BYTE3 ( 0x425C0000 )
0007db e472     +LDI R23 , BYTE4 ( 0x425C0000 )
                 	__GETD1N 0x425C0000
0007dc 940e 0b70 	CALL __SWAPD12
0007de 940e 09c8 	CALL __SUBF12
0007e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
0007e1 edac      	LDI  R26,LOW(1500)
0007e2 e0b5      	LDI  R27,HIGH(1500)
0007e3 940c 091f 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8:
0007e5 940e 0633 	CALL _lcd_puts
0007e7 e0e1      	LDI  R30,LOW(1)
0007e8 e0f0      	LDI  R31,HIGH(1)
0007e9 013f      	MOVW R6,R30
0007ea cff6      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x9:
0007eb e0e0      	LDI  R30,LOW(0)
0007ec 93e0 0542 	STS  _step,R30
0007ee 93e0 0543 	STS  _step+1,R30
0007f0 93e0 0544 	STS  _step+2,R30
0007f2 93e0 0545 	STS  _step+3,R30
0007f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0xA:
0007f5 91e0 053e 	LDS  R30,_value
0007f7 91f0 053f 	LDS  R31,_value+1
0007f9 9160 0540 	LDS  R22,_value+2
0007fb 9170 0541 	LDS  R23,_value+3
                +
0007fd 50e1     +SUBI R30 , LOW ( 1 )
0007fe 40f0     +SBCI R31 , HIGH ( 1 )
0007ff 4060     +SBCI R22 , BYTE3 ( 1 )
000800 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
000801 91a0 0542 	LDS  R26,_step
000803 91b0 0543 	LDS  R27,_step+1
000805 9180 0544 	LDS  R24,_step+2
000807 9190 0545 	LDS  R25,_step+3
000809 940e 0b81 	CALL __CPD12
00080b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xB:
00080c 91e0 0542 	LDS  R30,_step
00080e 70e3      	ANDI R30,LOW(0x3)
00080f 2eae      	MOV  R10,R30
000810 e0f0      	LDI  R31,0
000811 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xC:
000812 e4a2      	LDI  R26,LOW(_step)
000813 e0b5      	LDI  R27,HIGH(_step)
000814 940e 0b4d 	CALL __GETD1P_INC
                +
000816 5fef     +SUBI R30 , LOW ( - 1 )
000817 4fff     +SBCI R31 , HIGH ( - 1 )
000818 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000819 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00081a 940e 0b52 	CALL __PUTDP1_DEC
00081c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD:
00081d 91ed      	LD   R30,X+
00081e 91fd      	LD   R31,X+
00081f 9631      	ADIW R30,1
000820 93fe      	ST   -X,R31
000821 93ee      	ST   -X,R30
000822 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
000823 93ba      	ST   -Y,R27
000824 93aa      	ST   -Y,R26
000825 9724      	SBIW R28,4
000826 e0e0      	LDI  R30,LOW(0)
000827 83e8      	ST   Y,R30
000828 83e9      	STD  Y+1,R30
000829 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0xF:
                +
00082a 81ac     +LDD R26 , Y + 4
00082b 81bd     +LDD R27 , Y + 4 + 1
00082c 818e     +LDD R24 , Y + 4 + 2
00082d 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
00082e e0e0     +LDI R30 , LOW ( 0x41200000 )
00082f e0f0     +LDI R31 , HIGH ( 0x41200000 )
000830 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000831 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000832 940e 0a1f 	CALL __MULF12
                +
000834 83ec     +STD Y + 4 , R30
000835 83fd     +STD Y + 4 + 1 , R31
000836 836e     +STD Y + 4 + 2 , R22
000837 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000838 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x10:
                +
000839 81ec     +LDD R30 , Y + 4
00083a 81fd     +LDD R31 , Y + 4 + 1
00083b 816e     +LDD R22 , Y + 4 + 2
00083c 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
00083d 85ac     +LDD R26 , Y + 12
00083e 85bd     +LDD R27 , Y + 12 + 1
00083f 858e     +LDD R24 , Y + 12 + 2
000840 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000841 940e 0ab2 	CALL __CMPF12
000843 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x11:
                +
000844 85ac     +LDD R26 , Y + 12
000845 85bd     +LDD R27 , Y + 12 + 1
000846 858e     +LDD R24 , Y + 12 + 2
000847 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000848 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x12:
                +
000849 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00084a ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00084b ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00084c e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00084d 940e 0a1f 	CALL __MULF12
                +
00084f 87ec     +STD Y + 12 , R30
000850 87fd     +STD Y + 12 + 1 , R31
000851 876e     +STD Y + 12 + 2 , R22
000852 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000853 5f3f      	SUBI R19,-LOW(1)
000854 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x13:
                +
000855 e0e0     +LDI R30 , LOW ( 0x41200000 )
000856 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000857 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000858 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000859 940e 0a1f 	CALL __MULF12
00085b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
                +
00085c 87ec     +STD Y + 12 , R30
00085d 87fd     +STD Y + 12 + 1 , R31
00085e 876e     +STD Y + 12 + 2 , R22
00085f 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000860 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x15:
                +
000861 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000862 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000863 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000864 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000865 940e 09cf 	CALL __ADDF12
000867 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x16:
                +
000868 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000869 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00086a ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00086b e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00086c 940e 0a1f 	CALL __MULF12
00086e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
00086f 85a8      	LDD  R26,Y+8
000870 85b9      	LDD  R27,Y+8+1
000871 9611      	ADIW R26,1
000872 87a8      	STD  Y+8,R26
000873 87b9      	STD  Y+8+1,R27
000874 9711      	SBIW R26,1
000875 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
000876 2fe0      	MOV  R30,R16
000877 5de0      	SUBI R30,-LOW(48)
000878 93ec      	ST   X,R30
000879 2fe0      	MOV  R30,R16
00087a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
00087b 940e 0b70 	CALL __SWAPD12
00087d 940e 09c8 	CALL __SUBF12
00087f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1A:
000880 85e8      	LDD  R30,Y+8
000881 85f9      	LDD  R31,Y+8+1
000882 9631      	ADIW R30,1
000883 87e8      	STD  Y+8,R30
000884 87f9      	STD  Y+8+1,R31
000885 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1B:
000886 932a      	ST   -Y,R18
000887 81af      	LDD  R26,Y+7
000888 85b8      	LDD  R27,Y+7+1
000889 85e9      	LDD  R30,Y+9
00088a 85fa      	LDD  R31,Y+9+1
00088b 9509      	ICALL
00088c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1C:
                +
00088d 01fe     +MOVW R30 , R28
00088e 5ae6     +SUBI R30 , LOW ( - 90 )
00088f 4fff     +SBCI R31 , HIGH ( - 90 )
000890 9001     +LD R0 , Z +
000891 81f0     +LD R31 , Z
000892 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000893 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1D:
000894 9734      	SBIW R30,4
                +
000895 01de     +MOVW R26 , R28
000896 5aa6     +SUBI R26 , LOW ( - 90 )
000897 4fbf     +SBCI R27 , HIGH ( - 90 )
000898 93ed     +ST X + , R30
000899 93fc     +ST X , R31
                 	__PUTW1SX 90
00089a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1E:
00089b 81af      	LDD  R26,Y+7
00089c 85b8      	LDD  R27,Y+7+1
00089d 85e9      	LDD  R30,Y+9
00089e 85fa      	LDD  R31,Y+9+1
00089f 9509      	ICALL
0008a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1F:
                +
0008a1 01de     +MOVW R26 , R28
0008a2 5aa6     +SUBI R26 , LOW ( - 90 )
0008a3 4fbf     +SBCI R27 , HIGH ( - 90 )
0008a4 900d     +LD R0 , X +
0008a5 91bc     +LD R27 , X
0008a6 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0008a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
                +
0008a8 87ea     +STD Y + 10 , R30
0008a9 87fb     +STD Y + 10 + 1 , R31
0008aa 876c     +STD Y + 10 + 2 , R22
0008ab 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0008ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x21:
0008ad dfdf      	RCALL SUBOPT_0x1C
0008ae cfe5      	RJMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
                +
0008af 85ea     +LDD R30 , Y + 10
0008b0 85fb     +LDD R31 , Y + 10 + 1
0008b1 856c     +LDD R22 , Y + 10 + 2
0008b2 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0008b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x23:
0008b4 87ee      	STD  Y+14,R30
0008b5 87ff      	STD  Y+14+1,R31
0008b6 85ae      	LDD  R26,Y+14
0008b7 85bf      	LDD  R27,Y+14+1
0008b8 940e 0698 	CALL _strlen
0008ba 2f1e      	MOV  R17,R30
0008bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x24:
0008bc dfe4      	RCALL SUBOPT_0x1F
0008bd 9614      	ADIW R26,4
0008be 940e 0b43 	CALL __GETW1P
0008c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25:
                +
0008c1 8be8     +STD Y + 16 , R30
0008c2 8bf9     +STD Y + 16 + 1 , R31
0008c3 8b6a     +STD Y + 16 + 2 , R22
0008c4 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
0008c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x26:
0008c6 7f0b      	ANDI R16,LOW(251)
0008c7 89ed      	LDD  R30,Y+21
0008c8 93ea      	ST   -Y,R30
                +
0008c9 01de     +MOVW R26 , R28
0008ca 5aa9     +SUBI R26 , LOW ( - 87 )
0008cb 4fbf     +SBCI R27 , HIGH ( - 87 )
0008cc 900d     +LD R0 , X +
0008cd 91bc     +LD R27 , X
0008ce 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
0008cf 01fe     +MOVW R30 , R28
0008d0 5ae7     +SUBI R30 , LOW ( - 89 )
0008d1 4fff     +SBCI R31 , HIGH ( - 89 )
0008d2 9001     +LD R0 , Z +
0008d3 81f0     +LD R31 , Z
0008d4 2de0     +MOV R30 , R0
                 	__GETW1SX 89
0008d5 9509      	ICALL
0008d6 3050      	CPI  R21,0
0008d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x27:
                +
0008d8 89e8     +LDD R30 , Y + 16
0008d9 89f9     +LDD R31 , Y + 16 + 1
0008da 896a     +LDD R22 , Y + 16 + 2
0008db 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
0008dc 85aa     +LDD R26 , Y + 10
0008dd 85bb     +LDD R27 , Y + 10 + 1
0008de 858c     +LDD R24 , Y + 10 + 2
0008df 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0008e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
0008e1 01de      	MOVW R26,R28
0008e2 961c      	ADIW R26,12
0008e3 940e 0ad2 	CALL __ADDW2R15
0008e5 940e 0b43 	CALL __GETW1P
0008e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
0008e8 940e 05e8 	CALL __lcd_write_data
0008ea e0a3      	LDI  R26,LOW(3)
0008eb e0b0      	LDI  R27,0
0008ec 940c 091f 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2A:
0008ee e3a0      	LDI  R26,LOW(48)
0008ef 940e 05d4 	CALL __lcd_write_nibble_G101
                +
0008f1 ef8a     +LDI R24 , LOW ( 250 )
0008f2 e090     +LDI R25 , HIGH ( 250 )
                +__DELAY_USW_LOOP :
0008f3 9701     +SBIW R24 , 1
0008f4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 250
0008f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
0008f6 81ee      	LDD  R30,Y+6
0008f7 81ff      	LDD  R31,Y+6+1
0008f8 93fa      	ST   -Y,R31
0008f9 93ea      	ST   -Y,R30
0008fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2C:
                +
0008fb 87e9     +STD Y + 9 , R30
0008fc 87fa     +STD Y + 9 + 1 , R31
0008fd 876b     +STD Y + 9 + 2 , R22
0008fe 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0008ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2D:
000900 81ae      	LDD  R26,Y+6
000901 81bf      	LDD  R27,Y+6+1
000902 9611      	ADIW R26,1
000903 83ae      	STD  Y+6,R26
000904 83bf      	STD  Y+6+1,R27
000905 9711      	SBIW R26,1
000906 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2E:
                +
000907 81aa     +LDD R26 , Y + 2
000908 81bb     +LDD R27 , Y + 2 + 1
000909 818c     +LDD R24 , Y + 2 + 2
00090a 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00090b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F:
                +
00090c 83ea     +STD Y + 2 , R30
00090d 83fb     +STD Y + 2 + 1 , R31
00090e 836c     +STD Y + 2 + 2 , R22
00090f 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000910 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x30:
                +
000911 81ea     +LDD R30 , Y + 2
000912 81fb     +LDD R31 , Y + 2 + 1
000913 816c     +LDD R22 , Y + 2 + 2
000914 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000915 85a9     +LDD R26 , Y + 9
000916 85ba     +LDD R27 , Y + 9 + 1
000917 858b     +LDD R24 , Y + 9 + 2
000918 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000919 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31:
                +
00091a 85a9     +LDD R26 , Y + 9
00091b 85ba     +LDD R27 , Y + 9 + 1
00091c 858b     +LDD R24 , Y + 9 + 2
00091d 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00091e 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00091f 9610      	adiw r26,0
000920 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000921 ec84     +LDI R24 , LOW ( 0x9C4 )
000922 e099     +LDI R25 , HIGH ( 0x9C4 )
                +__DELAY_USW_LOOP :
000923 9701     +SBIW R24 , 1
000924 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x9C4
000925 95a8      	wdr
000926 9711      	sbiw r26,1
000927 f7c9      	brne __delay_ms0
                 __delay_ms1:
000928 9508      	ret
                 
                 __ANEGF1:
000929 9730      	SBIW R30,0
00092a 4060      	SBCI R22,0
00092b 4070      	SBCI R23,0
00092c f009      	BREQ __ANEGF10
00092d 5870      	SUBI R23,0x80
                 __ANEGF10:
00092e 9508      	RET
                 
                 __ROUND_REPACK:
00092f 2355      	TST  R21
000930 f442      	BRPL __REPACK
000931 3850      	CPI  R21,0x80
000932 f411      	BRNE __ROUND_REPACK0
000933 ffe0      	SBRS R30,0
000934 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000935 9631      	ADIW R30,1
000936 1f69      	ADC  R22,R25
000937 1f79      	ADC  R23,R25
000938 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000939 e850      	LDI  R21,0x80
00093a 2757      	EOR  R21,R23
00093b f411      	BRNE __REPACK0
00093c 935f      	PUSH R21
00093d c0cf      	RJMP __ZERORES
                 __REPACK0:
00093e 3f5f      	CPI  R21,0xFF
00093f f031      	BREQ __REPACK1
000940 0f66      	LSL  R22
000941 0c00      	LSL  R0
000942 9557      	ROR  R21
000943 9567      	ROR  R22
000944 2f75      	MOV  R23,R21
000945 9508      	RET
                 __REPACK1:
000946 935f      	PUSH R21
000947 2000      	TST  R0
000948 f00a      	BRMI __REPACK2
000949 c0cf      	RJMP __MAXRES
                 __REPACK2:
00094a c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00094b e850      	LDI  R21,0x80
00094c 2e19      	MOV  R1,R25
00094d 2215      	AND  R1,R21
00094e 0f88      	LSL  R24
00094f 1f99      	ROL  R25
000950 2795      	EOR  R25,R21
000951 0f55      	LSL  R21
000952 9587      	ROR  R24
                 
                 __UNPACK1:
000953 e850      	LDI  R21,0x80
000954 2e07      	MOV  R0,R23
000955 2205      	AND  R0,R21
000956 0f66      	LSL  R22
000957 1f77      	ROL  R23
000958 2775      	EOR  R23,R21
000959 0f55      	LSL  R21
00095a 9567      	ROR  R22
00095b 9508      	RET
                 
                 __CFD1U:
00095c 9468      	SET
00095d c001      	RJMP __CFD1U0
                 __CFD1:
00095e 94e8      	CLT
                 __CFD1U0:
00095f 935f      	PUSH R21
000960 dff2      	RCALL __UNPACK1
000961 3870      	CPI  R23,0x80
000962 f018      	BRLO __CFD10
000963 3f7f      	CPI  R23,0xFF
000964 f408      	BRCC __CFD10
000965 c0a7      	RJMP __ZERORES
                 __CFD10:
000966 e156      	LDI  R21,22
000967 1b57      	SUB  R21,R23
000968 f4aa      	BRPL __CFD11
000969 9551      	NEG  R21
00096a 3058      	CPI  R21,8
00096b f40e      	BRTC __CFD19
00096c 3059      	CPI  R21,9
                 __CFD19:
00096d f030      	BRLO __CFD17
00096e efef      	SER  R30
00096f efff      	SER  R31
000970 ef6f      	SER  R22
000971 e77f      	LDI  R23,0x7F
000972 f977      	BLD  R23,7
000973 c01a      	RJMP __CFD15
                 __CFD17:
000974 2777      	CLR  R23
000975 2355      	TST  R21
000976 f0b9      	BREQ __CFD15
                 __CFD18:
000977 0fee      	LSL  R30
000978 1fff      	ROL  R31
000979 1f66      	ROL  R22
00097a 1f77      	ROL  R23
00097b 955a      	DEC  R21
00097c f7d1      	BRNE __CFD18
00097d c010      	RJMP __CFD15
                 __CFD11:
00097e 2777      	CLR  R23
                 __CFD12:
00097f 3058      	CPI  R21,8
000980 f028      	BRLO __CFD13
000981 2fef      	MOV  R30,R31
000982 2ff6      	MOV  R31,R22
000983 2f67      	MOV  R22,R23
000984 5058      	SUBI R21,8
000985 cff9      	RJMP __CFD12
                 __CFD13:
000986 2355      	TST  R21
000987 f031      	BREQ __CFD15
                 __CFD14:
000988 9576      	LSR  R23
000989 9567      	ROR  R22
00098a 95f7      	ROR  R31
00098b 95e7      	ROR  R30
00098c 955a      	DEC  R21
00098d f7d1      	BRNE __CFD14
                 __CFD15:
00098e 2000      	TST  R0
00098f f40a      	BRPL __CFD16
000990 d145      	RCALL __ANEGD1
                 __CFD16:
000991 915f      	POP  R21
000992 9508      	RET
                 
                 __CDF1U:
000993 9468      	SET
000994 c001      	RJMP __CDF1U0
                 __CDF1:
000995 94e8      	CLT
                 __CDF1U0:
000996 9730      	SBIW R30,0
000997 4060      	SBCI R22,0
000998 4070      	SBCI R23,0
000999 f0b1      	BREQ __CDF10
00099a 2400      	CLR  R0
00099b f026      	BRTS __CDF11
00099c 2377      	TST  R23
00099d f412      	BRPL __CDF11
00099e 9400      	COM  R0
00099f d136      	RCALL __ANEGD1
                 __CDF11:
0009a0 2e17      	MOV  R1,R23
0009a1 e17e      	LDI  R23,30
0009a2 2011      	TST  R1
                 __CDF12:
0009a3 f032      	BRMI __CDF13
0009a4 957a      	DEC  R23
0009a5 0fee      	LSL  R30
0009a6 1fff      	ROL  R31
0009a7 1f66      	ROL  R22
0009a8 1c11      	ROL  R1
0009a9 cff9      	RJMP __CDF12
                 __CDF13:
0009aa 2fef      	MOV  R30,R31
0009ab 2ff6      	MOV  R31,R22
0009ac 2d61      	MOV  R22,R1
0009ad 935f      	PUSH R21
0009ae df8a      	RCALL __REPACK
0009af 915f      	POP  R21
                 __CDF10:
0009b0 9508      	RET
                 
                 __SWAPACC:
0009b1 934f      	PUSH R20
0009b2 01af      	MOVW R20,R30
0009b3 01fd      	MOVW R30,R26
0009b4 01da      	MOVW R26,R20
0009b5 01ab      	MOVW R20,R22
0009b6 01bc      	MOVW R22,R24
0009b7 01ca      	MOVW R24,R20
0009b8 2d40      	MOV  R20,R0
0009b9 2c01      	MOV  R0,R1
0009ba 2e14      	MOV  R1,R20
0009bb 914f      	POP  R20
0009bc 9508      	RET
                 
                 __UADD12:
0009bd 0fea      	ADD  R30,R26
0009be 1ffb      	ADC  R31,R27
0009bf 1f68      	ADC  R22,R24
0009c0 9508      	RET
                 
                 __NEGMAN1:
0009c1 95e0      	COM  R30
0009c2 95f0      	COM  R31
0009c3 9560      	COM  R22
0009c4 5fef      	SUBI R30,-1
0009c5 4fff      	SBCI R31,-1
0009c6 4f6f      	SBCI R22,-1
0009c7 9508      	RET
                 
                 __SUBF12:
0009c8 935f      	PUSH R21
0009c9 df81      	RCALL __UNPACK
0009ca 3890      	CPI  R25,0x80
0009cb f171      	BREQ __ADDF129
0009cc e850      	LDI  R21,0x80
0009cd 2615      	EOR  R1,R21
                 
0009ce c004      	RJMP __ADDF120
                 
                 __ADDF12:
0009cf 935f      	PUSH R21
0009d0 df7a      	RCALL __UNPACK
0009d1 3890      	CPI  R25,0x80
0009d2 f139      	BREQ __ADDF129
                 
                 __ADDF120:
0009d3 3870      	CPI  R23,0x80
0009d4 f121      	BREQ __ADDF128
                 __ADDF121:
0009d5 2f57      	MOV  R21,R23
0009d6 1b59      	SUB  R21,R25
0009d7 f12b      	BRVS __ADDF1211
0009d8 f412      	BRPL __ADDF122
0009d9 dfd7      	RCALL __SWAPACC
0009da cffa      	RJMP __ADDF121
                 __ADDF122:
0009db 3158      	CPI  R21,24
0009dc f018      	BRLO __ADDF123
0009dd 27aa      	CLR  R26
0009de 27bb      	CLR  R27
0009df 2788      	CLR  R24
                 __ADDF123:
0009e0 3058      	CPI  R21,8
0009e1 f028      	BRLO __ADDF124
0009e2 2fab      	MOV  R26,R27
0009e3 2fb8      	MOV  R27,R24
0009e4 2788      	CLR  R24
0009e5 5058      	SUBI R21,8
0009e6 cff9      	RJMP __ADDF123
                 __ADDF124:
0009e7 2355      	TST  R21
0009e8 f029      	BREQ __ADDF126
                 __ADDF125:
0009e9 9586      	LSR  R24
0009ea 95b7      	ROR  R27
0009eb 95a7      	ROR  R26
0009ec 955a      	DEC  R21
0009ed f7d9      	BRNE __ADDF125
                 __ADDF126:
0009ee 2d50      	MOV  R21,R0
0009ef 2551      	EOR  R21,R1
0009f0 f072      	BRMI __ADDF127
0009f1 dfcb      	RCALL __UADD12
0009f2 f438      	BRCC __ADDF129
0009f3 9567      	ROR  R22
0009f4 95f7      	ROR  R31
0009f5 95e7      	ROR  R30
0009f6 9573      	INC  R23
0009f7 f413      	BRVC __ADDF129
0009f8 c020      	RJMP __MAXRES
                 __ADDF128:
0009f9 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0009fa df3e      	RCALL __REPACK
0009fb 915f      	POP  R21
0009fc 9508      	RET
                 __ADDF1211:
0009fd f7d8      	BRCC __ADDF128
0009fe cffb      	RJMP __ADDF129
                 __ADDF127:
0009ff 1bea      	SUB  R30,R26
000a00 0bfb      	SBC  R31,R27
000a01 0b68      	SBC  R22,R24
000a02 f051      	BREQ __ZERORES
000a03 f410      	BRCC __ADDF1210
000a04 9400      	COM  R0
000a05 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000a06 2366      	TST  R22
000a07 f392      	BRMI __ADDF129
000a08 0fee      	LSL  R30
000a09 1fff      	ROL  R31
000a0a 1f66      	ROL  R22
000a0b 957a      	DEC  R23
000a0c f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000a0d 27ee      	CLR  R30
000a0e 27ff      	CLR  R31
000a0f 2766      	CLR  R22
000a10 2777      	CLR  R23
000a11 915f      	POP  R21
000a12 9508      	RET
                 
                 __MINRES:
000a13 efef      	SER  R30
000a14 efff      	SER  R31
000a15 e76f      	LDI  R22,0x7F
000a16 ef7f      	SER  R23
000a17 915f      	POP  R21
000a18 9508      	RET
                 
                 __MAXRES:
000a19 efef      	SER  R30
000a1a efff      	SER  R31
000a1b e76f      	LDI  R22,0x7F
000a1c e77f      	LDI  R23,0x7F
000a1d 915f      	POP  R21
000a1e 9508      	RET
                 
                 __MULF12:
000a1f 935f      	PUSH R21
000a20 df2a      	RCALL __UNPACK
000a21 3870      	CPI  R23,0x80
000a22 f351      	BREQ __ZERORES
000a23 3890      	CPI  R25,0x80
000a24 f341      	BREQ __ZERORES
000a25 2401      	EOR  R0,R1
000a26 9408      	SEC
000a27 1f79      	ADC  R23,R25
000a28 f423      	BRVC __MULF124
000a29 f31c      	BRLT __ZERORES
                 __MULF125:
000a2a 2000      	TST  R0
000a2b f33a      	BRMI __MINRES
000a2c cfec      	RJMP __MAXRES
                 __MULF124:
000a2d 920f      	PUSH R0
000a2e 931f      	PUSH R17
000a2f 932f      	PUSH R18
000a30 933f      	PUSH R19
000a31 934f      	PUSH R20
000a32 2711      	CLR  R17
000a33 2722      	CLR  R18
000a34 2799      	CLR  R25
000a35 9f68      	MUL  R22,R24
000a36 01a0      	MOVW R20,R0
000a37 9f8f      	MUL  R24,R31
000a38 2d30      	MOV  R19,R0
000a39 0d41      	ADD  R20,R1
000a3a 1f59      	ADC  R21,R25
000a3b 9f6b      	MUL  R22,R27
000a3c 0d30      	ADD  R19,R0
000a3d 1d41      	ADC  R20,R1
000a3e 1f59      	ADC  R21,R25
000a3f 9f8e      	MUL  R24,R30
000a40 d027      	RCALL __MULF126
000a41 9fbf      	MUL  R27,R31
000a42 d025      	RCALL __MULF126
000a43 9f6a      	MUL  R22,R26
000a44 d023      	RCALL __MULF126
000a45 9fbe      	MUL  R27,R30
000a46 d01d      	RCALL __MULF127
000a47 9faf      	MUL  R26,R31
000a48 d01b      	RCALL __MULF127
000a49 9fae      	MUL  R26,R30
000a4a 0d11      	ADD  R17,R1
000a4b 1f29      	ADC  R18,R25
000a4c 1f39      	ADC  R19,R25
000a4d 1f49      	ADC  R20,R25
000a4e 1f59      	ADC  R21,R25
000a4f 2fe3      	MOV  R30,R19
000a50 2ff4      	MOV  R31,R20
000a51 2f65      	MOV  R22,R21
000a52 2f52      	MOV  R21,R18
000a53 914f      	POP  R20
000a54 913f      	POP  R19
000a55 912f      	POP  R18
000a56 911f      	POP  R17
000a57 900f      	POP  R0
000a58 2366      	TST  R22
000a59 f02a      	BRMI __MULF122
000a5a 0f55      	LSL  R21
000a5b 1fee      	ROL  R30
000a5c 1fff      	ROL  R31
000a5d 1f66      	ROL  R22
000a5e c002      	RJMP __MULF123
                 __MULF122:
000a5f 9573      	INC  R23
000a60 f24b      	BRVS __MULF125
                 __MULF123:
000a61 decd      	RCALL __ROUND_REPACK
000a62 915f      	POP  R21
000a63 9508      	RET
                 
                 __MULF127:
000a64 0d10      	ADD  R17,R0
000a65 1d21      	ADC  R18,R1
000a66 1f39      	ADC  R19,R25
000a67 c002      	RJMP __MULF128
                 __MULF126:
000a68 0d20      	ADD  R18,R0
000a69 1d31      	ADC  R19,R1
                 __MULF128:
000a6a 1f49      	ADC  R20,R25
000a6b 1f59      	ADC  R21,R25
000a6c 9508      	RET
                 
                 __DIVF21:
000a6d 935f      	PUSH R21
000a6e dedc      	RCALL __UNPACK
000a6f 3870      	CPI  R23,0x80
000a70 f421      	BRNE __DIVF210
000a71 2011      	TST  R1
                 __DIVF211:
000a72 f40a      	BRPL __DIVF219
000a73 cf9f      	RJMP __MINRES
                 __DIVF219:
000a74 cfa4      	RJMP __MAXRES
                 __DIVF210:
000a75 3890      	CPI  R25,0x80
000a76 f409      	BRNE __DIVF218
                 __DIVF217:
000a77 cf95      	RJMP __ZERORES
                 __DIVF218:
000a78 2401      	EOR  R0,R1
000a79 9408      	SEC
000a7a 0b97      	SBC  R25,R23
000a7b f41b      	BRVC __DIVF216
000a7c f3d4      	BRLT __DIVF217
000a7d 2000      	TST  R0
000a7e cff3      	RJMP __DIVF211
                 __DIVF216:
000a7f 2f79      	MOV  R23,R25
000a80 931f      	PUSH R17
000a81 932f      	PUSH R18
000a82 933f      	PUSH R19
000a83 934f      	PUSH R20
000a84 2411      	CLR  R1
000a85 2711      	CLR  R17
000a86 2722      	CLR  R18
000a87 2733      	CLR  R19
000a88 2744      	CLR  R20
000a89 2755      	CLR  R21
000a8a e290      	LDI  R25,32
                 __DIVF212:
000a8b 17ae      	CP   R26,R30
000a8c 07bf      	CPC  R27,R31
000a8d 0786      	CPC  R24,R22
000a8e 0741      	CPC  R20,R17
000a8f f030      	BRLO __DIVF213
000a90 1bae      	SUB  R26,R30
000a91 0bbf      	SBC  R27,R31
000a92 0b86      	SBC  R24,R22
000a93 0b41      	SBC  R20,R17
000a94 9408      	SEC
000a95 c001      	RJMP __DIVF214
                 __DIVF213:
000a96 9488      	CLC
                 __DIVF214:
000a97 1f55      	ROL  R21
000a98 1f22      	ROL  R18
000a99 1f33      	ROL  R19
000a9a 1c11      	ROL  R1
000a9b 1faa      	ROL  R26
000a9c 1fbb      	ROL  R27
000a9d 1f88      	ROL  R24
000a9e 1f44      	ROL  R20
000a9f 959a      	DEC  R25
000aa0 f751      	BRNE __DIVF212
000aa1 01f9      	MOVW R30,R18
000aa2 2d61      	MOV  R22,R1
000aa3 914f      	POP  R20
000aa4 913f      	POP  R19
000aa5 912f      	POP  R18
000aa6 911f      	POP  R17
000aa7 2366      	TST  R22
000aa8 f032      	BRMI __DIVF215
000aa9 0f55      	LSL  R21
000aaa 1fee      	ROL  R30
000aab 1fff      	ROL  R31
000aac 1f66      	ROL  R22
000aad 957a      	DEC  R23
000aae f243      	BRVS __DIVF217
                 __DIVF215:
000aaf de7f      	RCALL __ROUND_REPACK
000ab0 915f      	POP  R21
000ab1 9508      	RET
                 
                 __CMPF12:
000ab2 2399      	TST  R25
000ab3 f09a      	BRMI __CMPF120
000ab4 2377      	TST  R23
000ab5 f042      	BRMI __CMPF121
000ab6 1797      	CP   R25,R23
000ab7 f048      	BRLO __CMPF122
000ab8 f429      	BRNE __CMPF121
000ab9 17ae      	CP   R26,R30
000aba 07bf      	CPC  R27,R31
000abb 0786      	CPC  R24,R22
000abc f020      	BRLO __CMPF122
000abd f031      	BREQ __CMPF123
                 __CMPF121:
000abe 9498      	CLZ
000abf 9488      	CLC
000ac0 9508      	RET
                 __CMPF122:
000ac1 9498      	CLZ
000ac2 9408      	SEC
000ac3 9508      	RET
                 __CMPF123:
000ac4 9418      	SEZ
000ac5 9488      	CLC
000ac6 9508      	RET
                 __CMPF120:
000ac7 2377      	TST  R23
000ac8 f7c2      	BRPL __CMPF122
000ac9 1797      	CP   R25,R23
000aca f398      	BRLO __CMPF121
000acb f7a9      	BRNE __CMPF122
000acc 17ea      	CP   R30,R26
000acd 07fb      	CPC  R31,R27
000ace 0768      	CPC  R22,R24
000acf f388      	BRLO __CMPF122
000ad0 f399      	BREQ __CMPF123
000ad1 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000ad2 2400      	CLR  R0
000ad3 0daf      	ADD  R26,R15
000ad4 1db0      	ADC  R27,R0
000ad5 9508      	RET
                 
                 __ANEGD1:
000ad6 95f0      	COM  R31
000ad7 9560      	COM  R22
000ad8 9570      	COM  R23
000ad9 95e1      	NEG  R30
000ada 4fff      	SBCI R31,-1
000adb 4f6f      	SBCI R22,-1
000adc 4f7f      	SBCI R23,-1
000add 9508      	RET
                 
                 __CBD1:
000ade 2ffe      	MOV  R31,R30
000adf 0fff      	ADD  R31,R31
000ae0 0bff      	SBC  R31,R31
000ae1 2f6f      	MOV  R22,R31
000ae2 2f7f      	MOV  R23,R31
000ae3 9508      	RET
                 
                 __CWD1:
000ae4 2f6f      	MOV  R22,R31
000ae5 0f66      	ADD  R22,R22
000ae6 0b66      	SBC  R22,R22
000ae7 2f76      	MOV  R23,R22
000ae8 9508      	RET
                 
                 __LTW12U:
000ae9 17ae      	CP   R26,R30
000aea 07bf      	CPC  R27,R31
000aeb e0e1      	LDI  R30,1
000aec f008      	BRLO __LTW12UT
000aed 27ee      	CLR  R30
                 __LTW12UT:
000aee 9508      	RET
                 
                 __DIVB21U:
000aef 2400      	CLR  R0
000af0 e098      	LDI  R25,8
                 __DIVB21U1:
000af1 0faa      	LSL  R26
000af2 1c00      	ROL  R0
000af3 1a0e      	SUB  R0,R30
000af4 f410      	BRCC __DIVB21U2
000af5 0e0e      	ADD  R0,R30
000af6 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000af7 60a1      	SBR  R26,1
                 __DIVB21U3:
000af8 959a      	DEC  R25
000af9 f7b9      	BRNE __DIVB21U1
000afa 2fea      	MOV  R30,R26
000afb 2da0      	MOV  R26,R0
000afc 9508      	RET
                 
                 __DIVB21:
000afd d039      	RCALL __CHKSIGNB
000afe dff0      	RCALL __DIVB21U
000aff f40e      	BRTC __DIVB211
000b00 95e1      	NEG  R30
                 __DIVB211:
000b01 9508      	RET
                 
                 __DIVD21U:
000b02 933f      	PUSH R19
000b03 934f      	PUSH R20
000b04 935f      	PUSH R21
000b05 2400      	CLR  R0
000b06 2411      	CLR  R1
000b07 2744      	CLR  R20
000b08 2755      	CLR  R21
000b09 e230      	LDI  R19,32
                 __DIVD21U1:
000b0a 0faa      	LSL  R26
000b0b 1fbb      	ROL  R27
000b0c 1f88      	ROL  R24
000b0d 1f99      	ROL  R25
000b0e 1c00      	ROL  R0
000b0f 1c11      	ROL  R1
000b10 1f44      	ROL  R20
000b11 1f55      	ROL  R21
000b12 1a0e      	SUB  R0,R30
000b13 0a1f      	SBC  R1,R31
000b14 0b46      	SBC  R20,R22
000b15 0b57      	SBC  R21,R23
000b16 f428      	BRCC __DIVD21U2
000b17 0e0e      	ADD  R0,R30
000b18 1e1f      	ADC  R1,R31
000b19 1f46      	ADC  R20,R22
000b1a 1f57      	ADC  R21,R23
000b1b c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000b1c 60a1      	SBR  R26,1
                 __DIVD21U3:
000b1d 953a      	DEC  R19
000b1e f759      	BRNE __DIVD21U1
000b1f 01fd      	MOVW R30,R26
000b20 01bc      	MOVW R22,R24
000b21 01d0      	MOVW R26,R0
000b22 01ca      	MOVW R24,R20
000b23 915f      	POP  R21
000b24 914f      	POP  R20
000b25 913f      	POP  R19
000b26 9508      	RET
                 
                 __MODB21:
000b27 94e8      	CLT
000b28 ffa7      	SBRS R26,7
000b29 c002      	RJMP __MODB211
000b2a 95a1      	NEG  R26
000b2b 9468      	SET
                 __MODB211:
000b2c fde7      	SBRC R30,7
000b2d 95e1      	NEG  R30
000b2e dfc0      	RCALL __DIVB21U
000b2f 2fea      	MOV  R30,R26
000b30 f40e      	BRTC __MODB212
000b31 95e1      	NEG  R30
                 __MODB212:
000b32 9508      	RET
                 
                 __MODD21U:
000b33 dfce      	RCALL __DIVD21U
000b34 01fd      	MOVW R30,R26
000b35 01bc      	MOVW R22,R24
000b36 9508      	RET
                 
                 __CHKSIGNB:
000b37 94e8      	CLT
000b38 ffe7      	SBRS R30,7
000b39 c002      	RJMP __CHKSB1
000b3a 95e1      	NEG  R30
000b3b 9468      	SET
                 __CHKSB1:
000b3c ffa7      	SBRS R26,7
000b3d c004      	RJMP __CHKSB2
000b3e 95a1      	NEG  R26
000b3f f800      	BLD  R0,0
000b40 9403      	INC  R0
000b41 fa00      	BST  R0,0
                 __CHKSB2:
000b42 9508      	RET
                 
                 __GETW1P:
000b43 91ed      	LD   R30,X+
000b44 91fc      	LD   R31,X
000b45 9711      	SBIW R26,1
000b46 9508      	RET
                 
                 __GETD1P:
000b47 91ed      	LD   R30,X+
000b48 91fd      	LD   R31,X+
000b49 916d      	LD   R22,X+
000b4a 917c      	LD   R23,X
000b4b 9713      	SBIW R26,3
000b4c 9508      	RET
                 
                 __GETD1P_INC:
000b4d 91ed      	LD   R30,X+
000b4e 91fd      	LD   R31,X+
000b4f 916d      	LD   R22,X+
000b50 917d      	LD   R23,X+
000b51 9508      	RET
                 
                 __PUTDP1_DEC:
000b52 937e      	ST   -X,R23
000b53 936e      	ST   -X,R22
000b54 93fe      	ST   -X,R31
000b55 93ee      	ST   -X,R30
000b56 9508      	RET
                 
                 __GETD1S0:
000b57 81e8      	LD   R30,Y
000b58 81f9      	LDD  R31,Y+1
000b59 816a      	LDD  R22,Y+2
000b5a 817b      	LDD  R23,Y+3
000b5b 9508      	RET
                 
                 __GETD2S0:
000b5c 81a8      	LD   R26,Y
000b5d 81b9      	LDD  R27,Y+1
000b5e 818a      	LDD  R24,Y+2
000b5f 819b      	LDD  R25,Y+3
000b60 9508      	RET
                 
                 __PUTD1S0:
000b61 83e8      	ST   Y,R30
000b62 83f9      	STD  Y+1,R31
000b63 836a      	STD  Y+2,R22
000b64 837b      	STD  Y+3,R23
000b65 9508      	RET
                 
                 __PUTPARD1:
000b66 937a      	ST   -Y,R23
000b67 936a      	ST   -Y,R22
000b68 93fa      	ST   -Y,R31
000b69 93ea      	ST   -Y,R30
000b6a 9508      	RET
                 
                 __PUTPARD2:
000b6b 939a      	ST   -Y,R25
000b6c 938a      	ST   -Y,R24
000b6d 93ba      	ST   -Y,R27
000b6e 93aa      	ST   -Y,R26
000b6f 9508      	RET
                 
                 __SWAPD12:
000b70 2e18      	MOV  R1,R24
000b71 2f86      	MOV  R24,R22
000b72 2d61      	MOV  R22,R1
000b73 2e19      	MOV  R1,R25
000b74 2f97      	MOV  R25,R23
000b75 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000b76 2e1b      	MOV  R1,R27
000b77 2fbf      	MOV  R27,R31
000b78 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000b79 2e1a      	MOV  R1,R26
000b7a 2fae      	MOV  R26,R30
000b7b 2de1      	MOV  R30,R1
000b7c 9508      	RET
                 
                 __CPD10:
000b7d 9730      	SBIW R30,0
000b7e 4060      	SBCI R22,0
000b7f 4070      	SBCI R23,0
000b80 9508      	RET
                 
                 __CPD12:
000b81 17ea      	CP   R30,R26
000b82 07fb      	CPC  R31,R27
000b83 0768      	CPC  R22,R24
000b84 0779      	CPC  R23,R25
000b85 9508      	RET
                 
                 __SAVELOCR6:
000b86 935a      	ST   -Y,R21
                 __SAVELOCR5:
000b87 934a      	ST   -Y,R20
                 __SAVELOCR4:
000b88 933a      	ST   -Y,R19
                 __SAVELOCR3:
000b89 932a      	ST   -Y,R18
                 __SAVELOCR2:
000b8a 931a      	ST   -Y,R17
000b8b 930a      	ST   -Y,R16
000b8c 9508      	RET
                 
                 __LOADLOCR6:
000b8d 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000b8e 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000b8f 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000b90 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000b91 8119      	LDD  R17,Y+1
000b92 8108      	LD   R16,Y
000b93 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  62 r1 :  36 r2 :   4 r3 :   0 r4 :   0 r5 :   0 r6 :   3 r7 :   2 
r8 :   4 r9 :   1 r10:   1 r11:   3 r12:   2 r13:   0 r14:   0 r15:   6 
r16:  57 r17:  68 r18:  50 r19:  38 r20:  50 r21:  90 r22: 123 r23: 107 
r24:  80 r25:  66 r26: 252 r27: 121 r28:  30 r29:   1 r30: 501 r31: 168 
x  :  48 y  : 408 z  :  29 
Registers used: 30 out of 35 (85.7%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  22 add   :  15 
adiw  :  33 and   :   5 andi  :  12 asr   :   0 bclr  :   0 bld   :   5 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  48 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  33 
brlt  :   3 brmi  :  11 brne  :  65 brpl  :   9 brsh  :   6 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 233 
cbi   :  11 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  59 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :   8 
cp    :  20 cpc   :  25 cpi   :  86 cpse  :   0 dec   :  15 des   :   0 
elpm  :   0 eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 
ijmp  :   0 in    :   5 inc   :   4 jmp   :  41 ld    :  73 ldd   : 193 
ldi   : 281 lds   :  17 lpm   :  14 lsl   :  16 lsr   :   3 mov   :  87 
movw  :  59 mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 
or    :   1 ori   :   9 out   :  37 pop   :  22 push  :  22 rcall :  81 
ret   : 100 reti  :   2 rjmp  : 159 rol   :  32 ror   :  15 sbc   :  11 
sbci  :  30 sbi   :  12 sbic  :   0 sbis  :   1 sbiw  :  30 sbr   :   4 
sbrc  :   6 sbrs  :  21 sec   :   5 seh   :   0 sei   :   1 sen   :   0 
ser   :   9 ses   :   0 set   :   5 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 118 std   :  89 sts   :  27 sub   :   6 subi  :  56 
swap  :   2 tst   :  24 wdr   :   1 
Instructions used: 82 out of 117 (70.1%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001728   5682    246   5928  131072   4.5%
[.dseg] 0x000100 0x000567      0    103    103    4096   2.5%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 13 warnings
