
AVRASM ver. 2.1.30  D:\gesha\OneDrive - UNIVERSITAS INDONESIA\Kuliah\Semester 5\Sistem Tertanam\03_CVAVR\MOD4_Simulasi_1_Gesha Mahendra Cunyadha\ADC\Debug\List\ADC.asm Tue Oct 26 12:23:06 2021

D:\gesha\OneDrive - UNIVERSITAS INDONESIA\Kuliah\Semester 5\Sistem Tertanam\03_CVAVR\MOD4_Simulasi_1_Gesha Mahendra Cunyadha\ADC\Debug\List\ADC.asm(1090): warning: Register r4 already defined by the .DEF directive
D:\gesha\OneDrive - UNIVERSITAS INDONESIA\Kuliah\Semester 5\Sistem Tertanam\03_CVAVR\MOD4_Simulasi_1_Gesha Mahendra Cunyadha\ADC\Debug\List\ADC.asm(1091): warning: Register r5 already defined by the .DEF directive
D:\gesha\OneDrive - UNIVERSITAS INDONESIA\Kuliah\Semester 5\Sistem Tertanam\03_CVAVR\MOD4_Simulasi_1_Gesha Mahendra Cunyadha\ADC\Debug\List\ADC.asm(1092): warning: Register r11 already defined by the .DEF directive
D:\gesha\OneDrive - UNIVERSITAS INDONESIA\Kuliah\Semester 5\Sistem Tertanam\03_CVAVR\MOD4_Simulasi_1_Gesha Mahendra Cunyadha\ADC\Debug\List\ADC.asm(1093): warning: Register r10 already defined by the .DEF directive
D:\gesha\OneDrive - UNIVERSITAS INDONESIA\Kuliah\Semester 5\Sistem Tertanam\03_CVAVR\MOD4_Simulasi_1_Gesha Mahendra Cunyadha\ADC\Debug\List\ADC.asm(1094): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 10.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : long, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _led=R4
                 	.DEF _led_msb=R5
                 	.DEF __lcd_x=R11
                 	.DEF __lcd_y=R10
                 	.DEF __lcd_maxx=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 006e 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000046 0000      	.DB  0x0,0x0
                 
                 _0x0:
000047 3125
000048 322e
000049 2066
00004a 2056      	.DB  0x25,0x31,0x2E,0x32,0x66,0x20,0x56,0x20
00004b 2d2d
00004c 2520
00004d 2e31
00004e 6632      	.DB  0x2D,0x2D,0x20,0x25,0x31,0x2E,0x32,0x66
00004f 5620
000050 5300
000051 6c65
000052 7369      	.DB  0x20,0x56,0x0,0x53,0x65,0x6C,0x69,0x73
000053 6869
000054 3d20
000055 2520
000056 2e31      	.DB  0x69,0x68,0x20,0x3D,0x20,0x25,0x31,0x2E
000057 6632
000058 5620
D:\gesha\OneDrive - UNIVERSITAS INDONESIA\Kuliah\Semester 5\Sistem Tertanam\03_CVAVR\MOD4_Simulasi_1_Gesha Mahendra Cunyadha\ADC\Debug\List\ADC.asm(1148): warning: .cseg .db misalignment - padding zero byte
000059 0000      	.DB  0x32,0x66,0x20,0x56,0x0
                 _0x2000000:
00005a 4e2d
00005b 4e41
D:\gesha\OneDrive - UNIVERSITAS INDONESIA\Kuliah\Semester 5\Sistem Tertanam\03_CVAVR\MOD4_Simulasi_1_Gesha Mahendra Cunyadha\ADC\Debug\List\ADC.asm(1150): warning: .cseg .db misalignment - padding zero byte
00005c 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2040060:
D:\gesha\OneDrive - UNIVERSITAS INDONESIA\Kuliah\Semester 5\Sistem Tertanam\03_CVAVR\MOD4_Simulasi_1_Gesha Mahendra Cunyadha\ADC\Debug\List\ADC.asm(1152): warning: .cseg .db misalignment - padding zero byte
00005d 0001      	.DB  0x1
                 _0x2040000:
00005e 4e2d
00005f 4e41
000060 4900
000061 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\gesha\OneDrive - UNIVERSITAS INDONESIA\Kuliah\Semester 5\Sistem Tertanam\03_CVAVR\MOD4_Simulasi_1_Gesha Mahendra Cunyadha\ADC\Debug\List\ADC.asm(1155): warning: .cseg .db misalignment - padding zero byte
000062 0000      	.DB  0x0
                 _0x2060003:
000063 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000064 0002      	.DW  0x02
000065 0004      	.DW  0x04
000066 008c      	.DW  __REG_VARS*2
                 
000067 0001      	.DW  0x01
000068 0524      	.DW  __seed_G102
000069 00ba      	.DW  _0x2040060*2
                 
00006a 0002      	.DW  0x02
00006b 0528      	.DW  __base_y_G103
00006c 00c6      	.DW  _0x2060003*2
                 
                 _0xFFFFFFFF:
00006d 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00006e 94f8      	CLI
00006f 27ee      	CLR  R30
000070 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000071 e0f1      	LDI  R31,1
000072 bff5      	OUT  MCUCR,R31
000073 bfe5      	OUT  MCUCR,R30
000074 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000076 e08d      	LDI  R24,(14-2)+1
000077 e0a2      	LDI  R26,2
000078 27bb      	CLR  R27
                 __CLEAR_REG:
000079 93ed      	ST   X+,R30
00007a 958a      	DEC  R24
00007b f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00007c e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00007d e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00007e e0a0      	LDI  R26,LOW(__SRAM_START)
00007f e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000080 93ed      	ST   X+,R30
000081 9701      	SBIW R24,1
000082 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000083 ece8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000084 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000085 9185      	LPM  R24,Z+
000086 9195      	LPM  R25,Z+
000087 9700      	SBIW R24,0
000088 f061      	BREQ __GLOBAL_INI_END
000089 91a5      	LPM  R26,Z+
00008a 91b5      	LPM  R27,Z+
00008b 9005      	LPM  R0,Z+
00008c 9015      	LPM  R1,Z+
00008d 01bf      	MOVW R22,R30
00008e 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00008f 9005      	LPM  R0,Z+
000090 920d      	ST   X+,R0
000091 9701      	SBIW R24,1
000092 f7e1      	BRNE __GLOBAL_INI_LOOP
000093 01fb      	MOVW R30,R22
000094 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000095 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000096 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000097 bfed      	OUT  SPL,R30
000098 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000099 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00009a e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00009b e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00009c 940c 00ae 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*******************************************************
                 ;This program was created by the
                 ;CodeWizardAVR V3.12 Advanced
                 ;Automatic Program Generator
                 ;� Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 ;
                 ;Project :
                 ;Version :
                 ;Date    : 10/24/2021
                 ;Author  :
                 ;Company :
                 ;Comments:
                 ;
                 ;
                 ;Chip type               : ATmega128
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 10.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 1024
                 ;*******************************************************/
                 ;
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;#include <stdlib.h>
                 ;
                 ;// Alphanumeric LCD functions
                 ;#include <alcd.h>
                 ;
                 ;// Declare your global variables here
                 ;float data_adc0, data_adc1;
                 ;float tegangan0, tegangan1;
                 ;float selisih;
                 ;char LCDBuffer[16];
                 ;int led = 0b00000000;
                 ;
                 ;
                 ;// Voltage Reference: AVCC pin
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
                 ;
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 002E {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 002F ADMUX=adc_input | ADC_VREF_TYPE;
00009e 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
00009f 81e8      	LD   R30,Y
0000a0 64e0      	ORI  R30,0x40
0000a1 b9e7      	OUT  0x7,R30
                 ; 0000 0030 // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 0031 delay_ms(1);
0000a2 e0a1      	LDI  R26,LOW(1)
0000a3 e0b0      	LDI  R27,0
0000a4 940e 07f9 	CALL _delay_ms
                 ; 0000 0032 // Start the AD conversion
                 ; 0000 0033 ADCSRA|=(1<<ADSC);
0000a6 9a36      	SBI  0x6,6
                 ; 0000 0034 // Wait for the AD conversion to complete
                 ; 0000 0035 while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
0000a7 9b34      	SBIS 0x6,4
0000a8 cffe      	RJMP _0x3
                 ; 0000 0036 ADCSRA|=(1<<ADIF);
0000a9 9a34      	SBI  0x6,4
                 ; 0000 0037 return ADCW;
0000aa b1e4      	IN   R30,0x4
0000ab b1f5      	IN   R31,0x4+1
0000ac 9621      	ADIW R28,1
0000ad 9508      	RET
                 ; 0000 0038 }
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 003B {
                 _main:
                 ; .FSTART _main
                 ; 0000 003C // Declare your local variables here
                 ; 0000 003D 
                 ; 0000 003E // Input/Output Ports initialization
                 ; 0000 003F // Port A initialization
                 ; 0000 0040 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0041 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
0000ae e0e0      	LDI  R30,LOW(0)
0000af bbea      	OUT  0x1A,R30
                 ; 0000 0042 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0043 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
0000b0 bbeb      	OUT  0x1B,R30
                 ; 0000 0044 
                 ; 0000 0045 // Port B initialization
                 ; 0000 0046 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 0047 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
0000b1 efef      	LDI  R30,LOW(255)
0000b2 bbe7      	OUT  0x17,R30
                 ; 0000 0048 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 0049 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
0000b3 e0e0      	LDI  R30,LOW(0)
0000b4 bbe8      	OUT  0x18,R30
                 ; 0000 004A 
                 ; 0000 004B // Port C initialization
                 ; 0000 004C // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 004D DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
0000b5 efef      	LDI  R30,LOW(255)
0000b6 bbe4      	OUT  0x14,R30
                 ; 0000 004E // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 004F PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
0000b7 e0e0      	LDI  R30,LOW(0)
0000b8 bbe5      	OUT  0x15,R30
                 ; 0000 0050 
                 ; 0000 0051 // Port D initialization
                 ; 0000 0052 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0053 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
0000b9 bbe1      	OUT  0x11,R30
                 ; 0000 0054 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0055 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
0000ba bbe2      	OUT  0x12,R30
                 ; 0000 0056 
                 ; 0000 0057 // Port E initialization
                 ; 0000 0058 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0059 DDRE=(0<<DDE7) | (0<<DDE6) | (0<<DDE5) | (0<<DDE4) | (0<<DDE3) | (0<<DDE2) | (0<<DDE1) | (0<<DDE0);
0000bb b9e2      	OUT  0x2,R30
                 ; 0000 005A // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 005B PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
0000bc b9e3      	OUT  0x3,R30
                 ; 0000 005C 
                 ; 0000 005D // Port F initialization
                 ; 0000 005E // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 005F DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF3) | (0<<DDF2) | (0<<DDF1) | (0<<DDF0);
0000bd 93e0 0061 	STS  97,R30
                 ; 0000 0060 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0061 PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
0000bf 93e0 0062 	STS  98,R30
                 ; 0000 0062 
                 ; 0000 0063 // Port G initialization
                 ; 0000 0064 // Function: Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0065 DDRG=(0<<DDG4) | (0<<DDG3) | (0<<DDG2) | (0<<DDG1) | (0<<DDG0);
0000c1 93e0 0064 	STS  100,R30
                 ; 0000 0066 // State: Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0067 PORTG=(0<<PORTG4) | (0<<PORTG3) | (0<<PORTG2) | (0<<PORTG1) | (0<<PORTG0);
0000c3 93e0 0065 	STS  101,R30
                 ; 0000 0068 
                 ; 0000 0069 // Analog Comparator initialization
                 ; 0000 006A // Analog Comparator: Off
                 ; 0000 006B // The Analog Comparator's positive input is
                 ; 0000 006C // connected to the AIN0 pin
                 ; 0000 006D // The Analog Comparator's negative input is
                 ; 0000 006E // connected to the AIN1 pin
                 ; 0000 006F ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0000c5 e8e0      	LDI  R30,LOW(128)
0000c6 b9e8      	OUT  0x8,R30
                 ; 0000 0070 
                 ; 0000 0071 // ADC initialization
                 ; 0000 0072 // ADC Clock frequency: 625.000 kHz
                 ; 0000 0073 // ADC Voltage Reference: AVCC pin
                 ; 0000 0074 ADMUX=ADC_VREF_TYPE;
0000c7 e4e0      	LDI  R30,LOW(64)
0000c8 b9e7      	OUT  0x7,R30
                 ; 0000 0075 ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0000c9 e8e4      	LDI  R30,LOW(132)
0000ca b9e6      	OUT  0x6,R30
                 ; 0000 0076 SFIOR=(0<<ACME);
0000cb e0e0      	LDI  R30,LOW(0)
0000cc bde0      	OUT  0x20,R30
                 ; 0000 0077 
                 ; 0000 0078 // Alphanumeric LCD initialization
                 ; 0000 0079 // Connections are specified in the
                 ; 0000 007A // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 007B // RS - PORTC Bit 0
                 ; 0000 007C // RD - PORTC Bit 2
                 ; 0000 007D // EN - PORTC Bit 1
                 ; 0000 007E // D4 - PORTC Bit 4
                 ; 0000 007F // D5 - PORTC Bit 5
                 ; 0000 0080 // D6 - PORTC Bit 6
                 ; 0000 0081 // D7 - PORTC Bit 7
                 ; 0000 0082 // Characters/line: 16
                 ; 0000 0083 lcd_init(16);
0000cd e1a0      	LDI  R26,LOW(16)
0000ce 940e 066b 	CALL _lcd_init
                 ; 0000 0084 
                 ; 0000 0085 while (1)
                 _0x6:
                 ; 0000 0086       {
                 ; 0000 0087       // Place your code here
                 ; 0000 0088       lcd_clear();
0000d0 940e 0639 	CALL _lcd_clear
                 ; 0000 0089       data_adc0 = read_adc(0);
0000d2 e0a0      	LDI  R26,LOW(0)
0000d3 dfca      	RCALL _read_adc
0000d4 e0a0      	LDI  R26,LOW(_data_adc0)
0000d5 e0b5      	LDI  R27,HIGH(_data_adc0)
0000d6 940e 06bf 	CALL SUBOPT_0x0
                 ; 0000 008A       tegangan0 = data_adc0*4/1023;
0000d8 91a0 0500 	LDS  R26,_data_adc0
0000da 91b0 0501 	LDS  R27,_data_adc0+1
0000dc 9180 0502 	LDS  R24,_data_adc0+2
0000de 9190 0503 	LDS  R25,_data_adc0+3
0000e0 940e 06c6 	CALL SUBOPT_0x1
0000e2 93e0 0508 	STS  _tegangan0,R30
0000e4 93f0 0509 	STS  _tegangan0+1,R31
0000e6 9360 050a 	STS  _tegangan0+2,R22
0000e8 9370 050b 	STS  _tegangan0+3,R23
                 ; 0000 008B       data_adc1 = read_adc(1);
0000ea e0a1      	LDI  R26,LOW(1)
0000eb dfb2      	RCALL _read_adc
0000ec e0a4      	LDI  R26,LOW(_data_adc1)
0000ed e0b5      	LDI  R27,HIGH(_data_adc1)
0000ee 940e 06bf 	CALL SUBOPT_0x0
                 ; 0000 008C       tegangan1 = data_adc1*4/1023;
0000f0 91a0 0504 	LDS  R26,_data_adc1
0000f2 91b0 0505 	LDS  R27,_data_adc1+1
0000f4 9180 0506 	LDS  R24,_data_adc1+2
0000f6 9190 0507 	LDS  R25,_data_adc1+3
0000f8 940e 06c6 	CALL SUBOPT_0x1
0000fa 93e0 050c 	STS  _tegangan1,R30
0000fc 93f0 050d 	STS  _tegangan1+1,R31
0000fe 9360 050e 	STS  _tegangan1+2,R22
000100 9370 050f 	STS  _tegangan1+3,R23
                 ; 0000 008D 
                 ; 0000 008E       lcd_gotoxy(0,0);
000102 e0e0      	LDI  R30,LOW(0)
000103 93ea      	ST   -Y,R30
000104 e0a0      	LDI  R26,LOW(0)
000105 940e 06d5 	CALL SUBOPT_0x2
                 ; 0000 008F       sprintf(LCDBuffer,"%1.2f V -- %1.2f V", tegangan0, tegangan1);
                +
000107 e8ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000108 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000109 93fa      	ST   -Y,R31
00010a 93ea      	ST   -Y,R30
00010b 940e 06dc 	CALL SUBOPT_0x3
00010d 940e 0a35 	CALL __PUTPARD1
00010f 91e0 050c 	LDS  R30,_tegangan1
000111 91f0 050d 	LDS  R31,_tegangan1+1
000113 9160 050e 	LDS  R22,_tegangan1+2
000115 9170 050f 	LDS  R23,_tegangan1+3
000117 940e 0a35 	CALL __PUTPARD1
000119 e088      	LDI  R24,8
00011a 940e 04c2 	CALL _sprintf
00011c 962c      	ADIW R28,12
                 ; 0000 0090       lcd_puts(LCDBuffer);
00011d e1a4      	LDI  R26,LOW(_LCDBuffer)
00011e e0b5      	LDI  R27,HIGH(_LCDBuffer)
00011f 940e 065a 	CALL _lcd_puts
                 ; 0000 0091 
                 ; 0000 0092       selisih = fabs(tegangan0-tegangan1);
000121 91a0 050c 	LDS  R26,_tegangan1
000123 91b0 050d 	LDS  R27,_tegangan1+1
000125 9180 050e 	LDS  R24,_tegangan1+2
000127 9190 050f 	LDS  R25,_tegangan1+3
000129 940e 06dc 	CALL SUBOPT_0x3
00012b 940e 08a2 	CALL __SUBF12
00012d 01df      	MOVW R26,R30
00012e 01cb      	MOVW R24,R22
00012f 940e 053e 	CALL _fabs
000131 93e0 0510 	STS  _selisih,R30
000133 93f0 0511 	STS  _selisih+1,R31
000135 9360 0512 	STS  _selisih+2,R22
000137 9370 0513 	STS  _selisih+3,R23
                 ; 0000 0093 
                 ; 0000 0094       lcd_gotoxy(0,1);
000139 e0e0      	LDI  R30,LOW(0)
00013a 93ea      	ST   -Y,R30
00013b e0a1      	LDI  R26,LOW(1)
00013c 940e 06d5 	CALL SUBOPT_0x2
                 ; 0000 0095       sprintf(LCDBuffer,"Selisih = %1.2f V", selisih);
                +
00013e eae1     +LDI R30 , LOW ( 2 * _0x0 + ( 19 ) )
00013f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW1FN _0x0,19
000140 93fa      	ST   -Y,R31
000141 93ea      	ST   -Y,R30
000142 940e 06e5 	CALL SUBOPT_0x4
000144 940e 0a35 	CALL __PUTPARD1
000146 e084      	LDI  R24,4
000147 940e 04c2 	CALL _sprintf
000149 9628      	ADIW R28,8
                 ; 0000 0096       lcd_puts(LCDBuffer);
00014a e1a4      	LDI  R26,LOW(_LCDBuffer)
00014b e0b5      	LDI  R27,HIGH(_LCDBuffer)
00014c 940e 065a 	CALL _lcd_puts
                 ; 0000 0097       delay_ms(100);
00014e e6a4      	LDI  R26,LOW(100)
00014f e0b0      	LDI  R27,0
000150 940e 07f9 	CALL _delay_ms
                 ; 0000 0098 
                 ; 0000 0099       PORTB = led;
000152 ba48      	OUT  0x18,R4
                 ; 0000 009A       if (selisih == 0){
000153 940e 06e5 	CALL SUBOPT_0x4
000155 940e 0a4c 	CALL __CPD10
000157 f419      	BRNE _0x9
                 ; 0000 009B           led = 0b00000000;
000158 2444      	CLR  R4
000159 2455      	CLR  R5
                 ; 0000 009C         } else if (selisih < 1){
00015a c03b      	RJMP _0xA
                 _0x9:
00015b 940e 06ee 	CALL SUBOPT_0x5
                +
00015d e0e0     +LDI R30 , LOW ( 0x3F800000 )
00015e e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00015f e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000160 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000161 940e 098c 	CALL __CMPF12
000163 f418      	BRSH _0xB
                 ; 0000 009D           led = 0b11000000;
000164 ece0      	LDI  R30,LOW(192)
000165 e0f0      	LDI  R31,HIGH(192)
000166 c02e      	RJMP _0x16
                 ; 0000 009E         } else if (selisih < 2){
                 _0xB:
000167 940e 06ee 	CALL SUBOPT_0x5
                +
000169 e0e0     +LDI R30 , LOW ( 0x40000000 )
00016a e0f0     +LDI R31 , HIGH ( 0x40000000 )
00016b e060     +LDI R22 , BYTE3 ( 0x40000000 )
00016c e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
00016d 940e 098c 	CALL __CMPF12
00016f f418      	BRSH _0xD
                 ; 0000 009F           led = 0b11110000;
000170 efe0      	LDI  R30,LOW(240)
000171 e0f0      	LDI  R31,HIGH(240)
000172 c022      	RJMP _0x16
                 ; 0000 00A0         } else if (selisih < 3){
                 _0xD:
000173 940e 06ee 	CALL SUBOPT_0x5
                +
000175 e0e0     +LDI R30 , LOW ( 0x40400000 )
000176 e0f0     +LDI R31 , HIGH ( 0x40400000 )
000177 e460     +LDI R22 , BYTE3 ( 0x40400000 )
000178 e470     +LDI R23 , BYTE4 ( 0x40400000 )
                 	__GETD1N 0x40400000
000179 940e 098c 	CALL __CMPF12
00017b f418      	BRSH _0xF
                 ; 0000 00A1           led = 0b11111100;
00017c efec      	LDI  R30,LOW(252)
00017d e0f0      	LDI  R31,HIGH(252)
00017e c016      	RJMP _0x16
                 ; 0000 00A2         } else if (selisih < 4){
                 _0xF:
00017f 940e 06ee 	CALL SUBOPT_0x5
                +
000181 e0e0     +LDI R30 , LOW ( 0x40800000 )
000182 e0f0     +LDI R31 , HIGH ( 0x40800000 )
000183 e860     +LDI R22 , BYTE3 ( 0x40800000 )
000184 e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
000185 940e 098c 	CALL __CMPF12
000187 f418      	BRSH _0x11
                 ; 0000 00A3           led = 0b11111111;
000188 efef      	LDI  R30,LOW(255)
000189 e0f0      	LDI  R31,HIGH(255)
00018a c00a      	RJMP _0x16
                 ; 0000 00A4         } else {
                 _0x11:
                 ; 0000 00A5           if (led == 0B10101010)
00018b eaea      	LDI  R30,LOW(170)
00018c e0f0      	LDI  R31,HIGH(170)
00018d 15e4      	CP   R30,R4
00018e 05f5      	CPC  R31,R5
00018f f419      	BRNE _0x13
                 ; 0000 00A6         { led = 0B01010101;
000190 e5e5      	LDI  R30,LOW(85)
000191 e0f0      	LDI  R31,HIGH(85)
000192 c002      	RJMP _0x16
                 ; 0000 00A7         } else {
                 _0x13:
                 ; 0000 00A8           led = 0B10101010;
000193 eaea      	LDI  R30,LOW(170)
000194 e0f0      	LDI  R31,HIGH(170)
                 _0x16:
000195 012f      	MOVW R4,R30
                 ; 0000 00A9           };
                 ; 0000 00AA         };
                 _0xA:
                 ; 0000 00AB       delay_ms(500);
000196 efa4      	LDI  R26,LOW(500)
000197 e0b1      	LDI  R27,HIGH(500)
000198 940e 07f9 	CALL _delay_ms
                 ; 0000 00AC       }
00019a cf35      	RJMP _0x6
                 ; 0000 00AD }
                 _0x15:
00019b cfff      	RJMP _0x15
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
00019c 93ba      	ST   -Y,R27
00019d 93aa      	ST   -Y,R26
00019e 931a      	ST   -Y,R17
00019f 930a      	ST   -Y,R16
0001a0 81aa      	LDD  R26,Y+2
0001a1 81bb      	LDD  R27,Y+2+1
0001a2 9612      	ADIW R26,2
0001a3 940e 0a17 	CALL __GETW1P
0001a5 9730      	SBIW R30,0
0001a6 f129      	BREQ _0x2000010
0001a7 81aa      	LDD  R26,Y+2
0001a8 81bb      	LDD  R27,Y+2+1
0001a9 9614      	ADIW R26,4
0001aa 940e 0a17 	CALL __GETW1P
0001ac 018f      	MOVW R16,R30
0001ad 9730      	SBIW R30,0
0001ae f061      	BREQ _0x2000012
                +
0001af 3002     +CPI R16 , LOW ( 2 )
0001b0 e0e0     +LDI R30 , HIGH ( 2 )
0001b1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001b2 f080      	BRLO _0x2000013
0001b3 01f8      	MOVW R30,R16
0001b4 9731      	SBIW R30,1
0001b5 018f      	MOVW R16,R30
                +
0001b6 81aa     +LDD R26 , Y + 2
0001b7 81bb     +LDD R27 , Y + 2 + 1
0001b8 9614     +ADIW R26 , 4
0001b9 93ed     +ST X + , R30
0001ba 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
0001bb 81aa      	LDD  R26,Y+2
0001bc 81bb      	LDD  R27,Y+2+1
0001bd 9612      	ADIW R26,2
0001be 940e 06f7 	CALL SUBOPT_0x6
0001c0 9731      	SBIW R30,1
0001c1 81ac      	LDD  R26,Y+4
0001c2 83a0      	STD  Z+0,R26
                 _0x2000013:
0001c3 81aa      	LDD  R26,Y+2
0001c4 81bb      	LDD  R27,Y+2+1
0001c5 940e 0a17 	CALL __GETW1P
0001c7 23ff      	TST  R31
0001c8 f012      	BRMI _0x2000014
0001c9 940e 06f7 	CALL SUBOPT_0x6
                 _0x2000014:
0001cb c006      	RJMP _0x2000015
                 _0x2000010:
0001cc 81aa      	LDD  R26,Y+2
0001cd 81bb      	LDD  R27,Y+2+1
0001ce efef      	LDI  R30,LOW(65535)
0001cf efff      	LDI  R31,HIGH(65535)
0001d0 93ed      	ST   X+,R30
0001d1 93fc      	ST   X,R31
                 _0x2000015:
0001d2 8119      	LDD  R17,Y+1
0001d3 8108      	LDD  R16,Y+0
0001d4 9625      	ADIW R28,5
0001d5 9508      	RET
                 ; .FEND
                 __ftoe_G100:
                 ; .FSTART __ftoe_G100
0001d6 940e 06fd 	CALL SUBOPT_0x7
0001d8 e8e0      	LDI  R30,LOW(128)
0001d9 83ea      	STD  Y+2,R30
0001da e3ef      	LDI  R30,LOW(63)
0001db 83eb      	STD  Y+3,R30
0001dc 940e 0a52 	CALL __SAVELOCR4
0001de 85ee      	LDD  R30,Y+14
0001df 85ff      	LDD  R31,Y+14+1
0001e0 3fef      	CPI  R30,LOW(0xFFFF)
0001e1 efaf      	LDI  R26,HIGH(0xFFFF)
0001e2 07fa      	CPC  R31,R26
0001e3 f449      	BRNE _0x2000019
0001e4 85e8      	LDD  R30,Y+8
0001e5 85f9      	LDD  R31,Y+8+1
0001e6 93fa      	ST   -Y,R31
0001e7 93ea      	ST   -Y,R30
                +
0001e8 eba4     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
0001e9 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
0001ea 940e 0699 	CALL _strcpyf
0001ec c0b7      	RJMP _0x20C0006
                 _0x2000019:
0001ed 3fef      	CPI  R30,LOW(0x7FFF)
0001ee e7af      	LDI  R26,HIGH(0x7FFF)
0001ef 07fa      	CPC  R31,R26
0001f0 f449      	BRNE _0x2000018
0001f1 85e8      	LDD  R30,Y+8
0001f2 85f9      	LDD  R31,Y+8+1
0001f3 93fa      	ST   -Y,R31
0001f4 93ea      	ST   -Y,R30
                +
0001f5 eba5     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
0001f6 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
0001f7 940e 0699 	CALL _strcpyf
0001f9 c0aa      	RJMP _0x20C0006
                 _0x2000018:
0001fa 85ab      	LDD  R26,Y+11
0001fb 30a7      	CPI  R26,LOW(0x7)
0001fc f010      	BRLO _0x200001B
0001fd e0e6      	LDI  R30,LOW(6)
0001fe 87eb      	STD  Y+11,R30
                 _0x200001B:
0001ff 851b      	LDD  R17,Y+11
                 _0x200001C:
000200 2fe1      	MOV  R30,R17
000201 5011      	SUBI R17,1
000202 30e0      	CPI  R30,0
000203 f019      	BREQ _0x200001E
000204 940e 0704 	CALL SUBOPT_0x8
000206 cff9      	RJMP _0x200001C
                 _0x200001E:
                +
000207 85ec     +LDD R30 , Y + 12
000208 85fd     +LDD R31 , Y + 12 + 1
000209 856e     +LDD R22 , Y + 12 + 2
00020a 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00020b 940e 0a4c 	CALL __CPD10
00020d f421      	BRNE _0x200001F
00020e e030      	LDI  R19,LOW(0)
00020f 940e 0704 	CALL SUBOPT_0x8
000211 c02d      	RJMP _0x2000020
                 _0x200001F:
000212 853b      	LDD  R19,Y+11
000213 940e 0713 	CALL SUBOPT_0x9
000215 f009      	BREQ PC+2
000216 f408      	BRCC PC+2
000217 c00b      	RJMP _0x2000021
000218 940e 0704 	CALL SUBOPT_0x8
                 _0x2000022:
00021a 940e 0713 	CALL SUBOPT_0x9
00021c f028      	BRLO _0x2000024
00021d 940e 071e 	CALL SUBOPT_0xA
00021f 940e 0723 	CALL SUBOPT_0xB
000221 cff8      	RJMP _0x2000022
                 _0x2000024:
000222 c00d      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
000223 940e 0713 	CALL SUBOPT_0x9
000225 f440      	BRSH _0x2000028
000226 940e 071e 	CALL SUBOPT_0xA
000228 940e 072f 	CALL SUBOPT_0xC
00022a 940e 0736 	CALL SUBOPT_0xD
00022c 5031      	SUBI R19,LOW(1)
00022d cff5      	RJMP _0x2000026
                 _0x2000028:
00022e 940e 0704 	CALL SUBOPT_0x8
                 _0x2000025:
                +
000230 85ec     +LDD R30 , Y + 12
000231 85fd     +LDD R31 , Y + 12 + 1
000232 856e     +LDD R22 , Y + 12 + 2
000233 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000234 940e 073b 	CALL SUBOPT_0xE
000236 940e 0736 	CALL SUBOPT_0xD
000238 940e 0713 	CALL SUBOPT_0x9
00023a f020      	BRLO _0x2000029
00023b 940e 071e 	CALL SUBOPT_0xA
00023d 940e 0723 	CALL SUBOPT_0xB
                 _0x2000029:
                 _0x2000020:
00023f e010      	LDI  R17,LOW(0)
                 _0x200002A:
000240 85eb      	LDD  R30,Y+11
000241 17e1      	CP   R30,R17
000242 f1a8      	BRLO _0x200002C
                +
000243 81ac     +LDD R26 , Y + 4
000244 81bd     +LDD R27 , Y + 4 + 1
000245 818e     +LDD R24 , Y + 4 + 2
000246 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000247 940e 0742 	CALL SUBOPT_0xF
000249 940e 073b 	CALL SUBOPT_0xE
00024b 01df      	MOVW R26,R30
00024c 01cb      	MOVW R24,R22
00024d 940e 0527 	CALL _floor
                +
00024f 83ec     +STD Y + 4 , R30
000250 83fd     +STD Y + 4 + 1 , R31
000251 836e     +STD Y + 4 + 2 , R22
000252 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000253 940e 071e 	CALL SUBOPT_0xA
000255 940e 0947 	CALL __DIVF21
000257 940e 0836 	CALL __CFD1U
000259 2f0e      	MOV  R16,R30
00025a 940e 0749 	CALL SUBOPT_0x10
00025c 940e 0750 	CALL SUBOPT_0x11
00025e 27ff      	CLR  R31
00025f 2766      	CLR  R22
000260 2777      	CLR  R23
000261 940e 086f 	CALL __CDF1
                +
000263 81ac     +LDD R26 , Y + 4
000264 81bd     +LDD R27 , Y + 4 + 1
000265 818e     +LDD R24 , Y + 4 + 2
000266 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000267 940e 08f9 	CALL __MULF12
000269 940e 071e 	CALL SUBOPT_0xA
00026b 940e 0755 	CALL SUBOPT_0x12
00026d 940e 0736 	CALL SUBOPT_0xD
00026f 2fe1      	MOV  R30,R17
000270 5f1f      	SUBI R17,-1
000271 30e0      	CPI  R30,0
000272 f669      	BRNE _0x200002A
000273 940e 0749 	CALL SUBOPT_0x10
000275 e2ee      	LDI  R30,LOW(46)
000276 93ec      	ST   X,R30
000277 cfc8      	RJMP _0x200002A
                 _0x200002C:
000278 940e 075a 	CALL SUBOPT_0x13
00027a 9731      	SBIW R30,1
00027b 85aa      	LDD  R26,Y+10
00027c 83a0      	STD  Z+0,R26
00027d 3030      	CPI  R19,0
00027e f42c      	BRGE _0x200002E
00027f 9531      	NEG  R19
000280 85a8      	LDD  R26,Y+8
000281 85b9      	LDD  R27,Y+8+1
000282 e2ed      	LDI  R30,LOW(45)
000283 c003      	RJMP _0x2000116
                 _0x200002E:
000284 85a8      	LDD  R26,Y+8
000285 85b9      	LDD  R27,Y+8+1
000286 e2eb      	LDI  R30,LOW(43)
                 _0x2000116:
000287 93ec      	ST   X,R30
000288 940e 075a 	CALL SUBOPT_0x13
00028a 940e 075a 	CALL SUBOPT_0x13
00028c 9731      	SBIW R30,1
00028d 01bf      	MOVW R22,R30
00028e 2fa3      	MOV  R26,R19
00028f e0ea      	LDI  R30,LOW(10)
000290 940e 09d1 	CALL __DIVB21
000292 5de0      	SUBI R30,-LOW(48)
000293 01db      	MOVW R26,R22
000294 93ec      	ST   X,R30
000295 940e 075a 	CALL SUBOPT_0x13
000297 9731      	SBIW R30,1
000298 01bf      	MOVW R22,R30
000299 2fa3      	MOV  R26,R19
00029a e0ea      	LDI  R30,LOW(10)
00029b 940e 09fb 	CALL __MODB21
00029d 5de0      	SUBI R30,-LOW(48)
00029e 01db      	MOVW R26,R22
00029f 93ec      	ST   X,R30
0002a0 85a8      	LDD  R26,Y+8
0002a1 85b9      	LDD  R27,Y+8+1
0002a2 e0e0      	LDI  R30,LOW(0)
0002a3 93ec      	ST   X,R30
                 _0x20C0006:
0002a4 940e 0a59 	CALL __LOADLOCR4
0002a6 9660      	ADIW R28,16
0002a7 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0002a8 93ba      	ST   -Y,R27
0002a9 93aa      	ST   -Y,R26
0002aa 97ef      	SBIW R28,63
0002ab 9761      	SBIW R28,17
0002ac 940e 0a50 	CALL __SAVELOCR6
0002ae e010      	LDI  R17,0
                +
0002af 01fe     +MOVW R30 , R28
0002b0 5ae8     +SUBI R30 , LOW ( - 88 )
0002b1 4fff     +SBCI R31 , HIGH ( - 88 )
0002b2 9001     +LD R0 , Z +
0002b3 81f0     +LD R31 , Z
0002b4 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0002b5 87e8      	STD  Y+8,R30
0002b6 87f9      	STD  Y+8+1,R31
                +
0002b7 01fe     +MOVW R30 , R28
0002b8 5aea     +SUBI R30 , LOW ( - 86 )
0002b9 4fff     +SBCI R31 , HIGH ( - 86 )
0002ba 9001     +LD R0 , Z +
0002bb 81f0     +LD R31 , Z
0002bc 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0002bd 83ee      	STD  Y+6,R30
0002be 83ff      	STD  Y+6+1,R31
0002bf 81ae      	LDD  R26,Y+6
0002c0 81bf      	LDD  R27,Y+6+1
0002c1 e0e0      	LDI  R30,LOW(0)
0002c2 e0f0      	LDI  R31,HIGH(0)
0002c3 93ed      	ST   X+,R30
0002c4 93fc      	ST   X,R31
                 _0x2000030:
0002c5 01de      	MOVW R26,R28
0002c6 5aa4      	SUBI R26,LOW(-(92))
0002c7 4fbf      	SBCI R27,HIGH(-(92))
0002c8 940e 06f7 	CALL SUBOPT_0x6
0002ca 9731      	SBIW R30,1
0002cb 91e4      	LPM  R30,Z
0002cc 2f2e      	MOV  R18,R30
0002cd 30e0      	CPI  R30,0
0002ce f409      	BRNE PC+2
0002cf c1e9      	RJMP _0x2000032
0002d0 2fe1      	MOV  R30,R17
0002d1 30e0      	CPI  R30,0
0002d2 f439      	BRNE _0x2000036
0002d3 3225      	CPI  R18,37
0002d4 f411      	BRNE _0x2000037
0002d5 e011      	LDI  R17,LOW(1)
0002d6 c002      	RJMP _0x2000038
                 _0x2000037:
0002d7 940e 0760 	CALL SUBOPT_0x14
                 _0x2000038:
0002d9 c1de      	RJMP _0x2000035
                 _0x2000036:
0002da 30e1      	CPI  R30,LOW(0x1)
0002db f4c1      	BRNE _0x2000039
0002dc 3225      	CPI  R18,37
0002dd f419      	BRNE _0x200003A
0002de 940e 0760 	CALL SUBOPT_0x14
0002e0 c1d6      	RJMP _0x2000117
                 _0x200003A:
0002e1 e012      	LDI  R17,LOW(2)
0002e2 e0e0      	LDI  R30,LOW(0)
0002e3 8bed      	STD  Y+21,R30
0002e4 e000      	LDI  R16,LOW(0)
0002e5 322d      	CPI  R18,45
0002e6 f411      	BRNE _0x200003B
0002e7 e001      	LDI  R16,LOW(1)
0002e8 c1cf      	RJMP _0x2000035
                 _0x200003B:
0002e9 322b      	CPI  R18,43
0002ea f419      	BRNE _0x200003C
0002eb e2eb      	LDI  R30,LOW(43)
0002ec 8bed      	STD  Y+21,R30
0002ed c1ca      	RJMP _0x2000035
                 _0x200003C:
0002ee 3220      	CPI  R18,32
0002ef f419      	BRNE _0x200003D
0002f0 e2e0      	LDI  R30,LOW(32)
0002f1 8bed      	STD  Y+21,R30
0002f2 c1c5      	RJMP _0x2000035
                 _0x200003D:
0002f3 c002      	RJMP _0x200003E
                 _0x2000039:
0002f4 30e2      	CPI  R30,LOW(0x2)
0002f5 f439      	BRNE _0x200003F
                 _0x200003E:
0002f6 e050      	LDI  R21,LOW(0)
0002f7 e013      	LDI  R17,LOW(3)
0002f8 3320      	CPI  R18,48
0002f9 f411      	BRNE _0x2000040
0002fa 6800      	ORI  R16,LOW(128)
0002fb c1bc      	RJMP _0x2000035
                 _0x2000040:
0002fc c002      	RJMP _0x2000041
                 _0x200003F:
0002fd 30e3      	CPI  R30,LOW(0x3)
0002fe f491      	BRNE _0x2000042
                 _0x2000041:
0002ff 3320      	CPI  R18,48
000300 f010      	BRLO _0x2000044
000301 332a      	CPI  R18,58
000302 f008      	BRLO _0x2000045
                 _0x2000044:
000303 c007      	RJMP _0x2000043
                 _0x2000045:
000304 e0aa      	LDI  R26,LOW(10)
000305 9f5a      	MUL  R21,R26
000306 2d50      	MOV  R21,R0
000307 2fe2      	MOV  R30,R18
000308 53e0      	SUBI R30,LOW(48)
000309 0f5e      	ADD  R21,R30
00030a c1ad      	RJMP _0x2000035
                 _0x2000043:
00030b e040      	LDI  R20,LOW(0)
00030c 322e      	CPI  R18,46
00030d f411      	BRNE _0x2000046
00030e e014      	LDI  R17,LOW(4)
00030f c1a8      	RJMP _0x2000035
                 _0x2000046:
000310 c00f      	RJMP _0x2000047
                 _0x2000042:
000311 30e4      	CPI  R30,LOW(0x4)
000312 f499      	BRNE _0x2000049
000313 3320      	CPI  R18,48
000314 f010      	BRLO _0x200004B
000315 332a      	CPI  R18,58
000316 f008      	BRLO _0x200004C
                 _0x200004B:
000317 c008      	RJMP _0x200004A
                 _0x200004C:
000318 6200      	ORI  R16,LOW(32)
000319 e0aa      	LDI  R26,LOW(10)
00031a 9f4a      	MUL  R20,R26
00031b 2d40      	MOV  R20,R0
00031c 2fe2      	MOV  R30,R18
00031d 53e0      	SUBI R30,LOW(48)
00031e 0f4e      	ADD  R20,R30
00031f c198      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000320 362c      	CPI  R18,108
000321 f419      	BRNE _0x200004D
000322 6002      	ORI  R16,LOW(2)
000323 e015      	LDI  R17,LOW(5)
000324 c193      	RJMP _0x2000035
                 _0x200004D:
000325 c003      	RJMP _0x200004E
                 _0x2000049:
000326 30e5      	CPI  R30,LOW(0x5)
000327 f009      	BREQ PC+2
000328 c18f      	RJMP _0x2000035
                 _0x200004E:
000329 2fe2      	MOV  R30,R18
00032a 36e3      	CPI  R30,LOW(0x63)
00032b f459      	BRNE _0x2000053
00032c 940e 0767 	CALL SUBOPT_0x15
00032e 940e 076e 	CALL SUBOPT_0x16
000330 940e 0767 	CALL SUBOPT_0x15
000332 81a4      	LDD  R26,Z+4
000333 93aa      	ST   -Y,R26
000334 940e 0775 	CALL SUBOPT_0x17
000336 c180      	RJMP _0x2000054
                 _0x2000053:
000337 34e5      	CPI  R30,LOW(0x45)
000338 f011      	BREQ _0x2000057
000339 36e5      	CPI  R30,LOW(0x65)
00033a f409      	BRNE _0x2000058
                 _0x2000057:
00033b c003      	RJMP _0x2000059
                 _0x2000058:
00033c 36e6      	CPI  R30,LOW(0x66)
00033d f009      	BREQ PC+2
00033e c048      	RJMP _0x200005A
                 _0x2000059:
00033f 01fe      	MOVW R30,R28
000340 9676      	ADIW R30,22
000341 87ee      	STD  Y+14,R30
000342 87ff      	STD  Y+14+1,R31
000343 940e 077b 	CALL SUBOPT_0x18
000345 940e 0a1b 	CALL __GETD1P
000347 940e 0782 	CALL SUBOPT_0x19
000349 940e 0787 	CALL SUBOPT_0x1A
00034b 85ad      	LDD  R26,Y+13
00034c 23aa      	TST  R26
00034d f032      	BRMI _0x200005B
00034e 89ad      	LDD  R26,Y+21
00034f 32ab      	CPI  R26,LOW(0x2B)
000350 f059      	BREQ _0x200005D
000351 32a0      	CPI  R26,LOW(0x20)
000352 f081      	BREQ _0x200005F
000353 c017      	RJMP _0x2000060
                 _0x200005B:
000354 940e 0789 	CALL SUBOPT_0x1B
000356 940e 0803 	CALL __ANEGF1
000358 940e 0782 	CALL SUBOPT_0x19
00035a e2ed      	LDI  R30,LOW(45)
00035b 8bed      	STD  Y+21,R30
                 _0x200005D:
00035c ff07      	SBRS R16,7
00035d c005      	RJMP _0x2000061
00035e 89ed      	LDD  R30,Y+21
00035f 93ea      	ST   -Y,R30
000360 940e 0775 	CALL SUBOPT_0x17
000362 c008      	RJMP _0x2000062
                 _0x2000061:
                 _0x200005F:
000363 85ee      	LDD  R30,Y+14
000364 85ff      	LDD  R31,Y+14+1
000365 9631      	ADIW R30,1
000366 87ee      	STD  Y+14,R30
000367 87ff      	STD  Y+14+1,R31
000368 9731      	SBIW R30,1
000369 89ad      	LDD  R26,Y+21
00036a 83a0      	STD  Z+0,R26
                 _0x2000062:
                 _0x2000060:
00036b ff05      	SBRS R16,5
00036c e046      	LDI  R20,LOW(6)
00036d 3626      	CPI  R18,102
00036e f451      	BRNE _0x2000064
00036f 940e 0789 	CALL SUBOPT_0x1B
000371 940e 0a35 	CALL __PUTPARD1
000373 934a      	ST   -Y,R20
000374 89ab      	LDD  R26,Y+19
000375 89bc      	LDD  R27,Y+19+1
000376 940e 0546 	CALL _ftoa
000378 c009      	RJMP _0x2000065
                 _0x2000064:
000379 940e 0789 	CALL SUBOPT_0x1B
00037b 940e 0a35 	CALL __PUTPARD1
00037d 934a      	ST   -Y,R20
00037e 932a      	ST   -Y,R18
00037f 89ac      	LDD  R26,Y+20
000380 89bd      	LDD  R27,Y+20+1
000381 de54      	RCALL __ftoe_G100
                 _0x2000065:
000382 01fe      	MOVW R30,R28
000383 9676      	ADIW R30,22
000384 940e 078e 	CALL SUBOPT_0x1C
000386 c01e      	RJMP _0x2000066
                 _0x200005A:
000387 37e3      	CPI  R30,LOW(0x73)
000388 f439      	BRNE _0x2000068
000389 940e 0787 	CALL SUBOPT_0x1A
00038b 940e 0796 	CALL SUBOPT_0x1D
00038d 940e 078e 	CALL SUBOPT_0x1C
00038f c00e      	RJMP _0x2000069
                 _0x2000068:
000390 37e0      	CPI  R30,LOW(0x70)
000391 f4c1      	BRNE _0x200006B
000392 940e 0787 	CALL SUBOPT_0x1A
000394 940e 0796 	CALL SUBOPT_0x1D
000396 87ee      	STD  Y+14,R30
000397 87ff      	STD  Y+14+1,R31
000398 85ae      	LDD  R26,Y+14
000399 85bf      	LDD  R27,Y+14+1
00039a 940e 06b2 	CALL _strlenf
00039c 2f1e      	MOV  R17,R30
00039d 6008      	ORI  R16,LOW(8)
                 _0x2000069:
00039e 770f      	ANDI R16,LOW(127)
00039f 3040      	CPI  R20,0
0003a0 f011      	BREQ _0x200006D
0003a1 1741      	CP   R20,R17
0003a2 f008      	BRLO _0x200006E
                 _0x200006D:
0003a3 c001      	RJMP _0x200006C
                 _0x200006E:
0003a4 2f14      	MOV  R17,R20
                 _0x200006C:
                 _0x2000066:
0003a5 e040      	LDI  R20,LOW(0)
0003a6 e0e0      	LDI  R30,LOW(0)
0003a7 8bec      	STD  Y+20,R30
0003a8 e030      	LDI  R19,LOW(0)
0003a9 c06d      	RJMP _0x200006F
                 _0x200006B:
0003aa 36e4      	CPI  R30,LOW(0x64)
0003ab f011      	BREQ _0x2000072
0003ac 36e9      	CPI  R30,LOW(0x69)
0003ad f411      	BRNE _0x2000073
                 _0x2000072:
0003ae 6004      	ORI  R16,LOW(4)
0003af c002      	RJMP _0x2000074
                 _0x2000073:
0003b0 37e5      	CPI  R30,LOW(0x75)
0003b1 f4a1      	BRNE _0x2000075
                 _0x2000074:
0003b2 e0ea      	LDI  R30,LOW(10)
0003b3 8bec      	STD  Y+20,R30
0003b4 ff01      	SBRS R16,1
0003b5 c008      	RJMP _0x2000076
                +
0003b6 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0003b7 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0003b8 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0003b9 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0003ba 940e 079b 	CALL SUBOPT_0x1E
0003bc e01a      	LDI  R17,LOW(10)
0003bd c022      	RJMP _0x2000077
                 _0x2000076:
                +
0003be e1e0     +LDI R30 , LOW ( 0x2710 )
0003bf e2f7     +LDI R31 , HIGH ( 0x2710 )
0003c0 e060     +LDI R22 , BYTE3 ( 0x2710 )
0003c1 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0003c2 940e 079b 	CALL SUBOPT_0x1E
0003c4 e015      	LDI  R17,LOW(5)
0003c5 c01a      	RJMP _0x2000077
                 _0x2000075:
0003c6 35e8      	CPI  R30,LOW(0x58)
0003c7 f411      	BRNE _0x2000079
0003c8 6008      	ORI  R16,LOW(8)
0003c9 c003      	RJMP _0x200007A
                 _0x2000079:
0003ca 37e8      	CPI  R30,LOW(0x78)
0003cb f009      	BREQ PC+2
0003cc c0ea      	RJMP _0x20000B8
                 _0x200007A:
0003cd e1e0      	LDI  R30,LOW(16)
0003ce 8bec      	STD  Y+20,R30
0003cf ff01      	SBRS R16,1
0003d0 c008      	RJMP _0x200007C
                +
0003d1 e0e0     +LDI R30 , LOW ( 0x10000000 )
0003d2 e0f0     +LDI R31 , HIGH ( 0x10000000 )
0003d3 e060     +LDI R22 , BYTE3 ( 0x10000000 )
0003d4 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0003d5 940e 079b 	CALL SUBOPT_0x1E
0003d7 e018      	LDI  R17,LOW(8)
0003d8 c007      	RJMP _0x2000077
                 _0x200007C:
                +
0003d9 e0e0     +LDI R30 , LOW ( 0x1000 )
0003da e1f0     +LDI R31 , HIGH ( 0x1000 )
0003db e060     +LDI R22 , BYTE3 ( 0x1000 )
0003dc e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0003dd 940e 079b 	CALL SUBOPT_0x1E
0003df e014      	LDI  R17,LOW(4)
                 _0x2000077:
0003e0 3040      	CPI  R20,0
0003e1 f011      	BREQ _0x200007D
0003e2 770f      	ANDI R16,LOW(127)
0003e3 c001      	RJMP _0x200007E
                 _0x200007D:
0003e4 e041      	LDI  R20,LOW(1)
                 _0x200007E:
0003e5 ff01      	SBRS R16,1
0003e6 c008      	RJMP _0x200007F
0003e7 940e 0787 	CALL SUBOPT_0x1A
0003e9 940e 077b 	CALL SUBOPT_0x18
0003eb 9614      	ADIW R26,4
0003ec 940e 0a1b 	CALL __GETD1P
0003ee c00f      	RJMP _0x2000118
                 _0x200007F:
0003ef ff02      	SBRS R16,2
0003f0 c007      	RJMP _0x2000081
0003f1 940e 0787 	CALL SUBOPT_0x1A
0003f3 940e 0796 	CALL SUBOPT_0x1D
0003f5 940e 09be 	CALL __CWD1
0003f7 c006      	RJMP _0x2000118
                 _0x2000081:
0003f8 940e 0787 	CALL SUBOPT_0x1A
0003fa 940e 0796 	CALL SUBOPT_0x1D
0003fc 2766      	CLR  R22
0003fd 2777      	CLR  R23
                 _0x2000118:
                +
0003fe 87ea     +STD Y + 10 , R30
0003ff 87fb     +STD Y + 10 + 1 , R31
000400 876c     +STD Y + 10 + 2 , R22
000401 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000402 ff02      	SBRS R16,2
000403 c012      	RJMP _0x2000083
000404 85ad      	LDD  R26,Y+13
000405 23aa      	TST  R26
000406 f442      	BRPL _0x2000084
000407 940e 0789 	CALL SUBOPT_0x1B
000409 940e 09b0 	CALL __ANEGD1
00040b 940e 0782 	CALL SUBOPT_0x19
00040d e2ed      	LDI  R30,LOW(45)
00040e 8bed      	STD  Y+21,R30
                 _0x2000084:
00040f 89ed      	LDD  R30,Y+21
000410 30e0      	CPI  R30,0
000411 f019      	BREQ _0x2000085
000412 5f1f      	SUBI R17,-LOW(1)
000413 5f4f      	SUBI R20,-LOW(1)
000414 c001      	RJMP _0x2000086
                 _0x2000085:
000415 7f0b      	ANDI R16,LOW(251)
                 _0x2000086:
                 _0x2000083:
000416 2f34      	MOV  R19,R20
                 _0x200006F:
000417 fd00      	SBRC R16,0
000418 c014      	RJMP _0x2000087
                 _0x2000088:
000419 1715      	CP   R17,R21
00041a f410      	BRSH _0x200008B
00041b 1735      	CP   R19,R21
00041c f008      	BRLO _0x200008C
                 _0x200008B:
00041d c00f      	RJMP _0x200008A
                 _0x200008C:
00041e ff07      	SBRS R16,7
00041f c008      	RJMP _0x200008D
000420 ff02      	SBRS R16,2
000421 c004      	RJMP _0x200008E
000422 7f0b      	ANDI R16,LOW(251)
000423 892d      	LDD  R18,Y+21
000424 5011      	SUBI R17,LOW(1)
000425 c001      	RJMP _0x200008F
                 _0x200008E:
000426 e320      	LDI  R18,LOW(48)
                 _0x200008F:
000427 c001      	RJMP _0x2000090
                 _0x200008D:
000428 e220      	LDI  R18,LOW(32)
                 _0x2000090:
000429 940e 0760 	CALL SUBOPT_0x14
00042b 5051      	SUBI R21,LOW(1)
00042c cfec      	RJMP _0x2000088
                 _0x200008A:
                 _0x2000087:
                 _0x2000091:
00042d 1714      	CP   R17,R20
00042e f490      	BRSH _0x2000093
00042f 6100      	ORI  R16,LOW(16)
000430 ff02      	SBRS R16,2
000431 c006      	RJMP _0x2000094
000432 940e 07a0 	CALL SUBOPT_0x1F
000434 f009      	BREQ _0x2000095
000435 5051      	SUBI R21,LOW(1)
                 _0x2000095:
000436 5011      	SUBI R17,LOW(1)
000437 5041      	SUBI R20,LOW(1)
                 _0x2000094:
000438 e3e0      	LDI  R30,LOW(48)
000439 93ea      	ST   -Y,R30
00043a 940e 0775 	CALL SUBOPT_0x17
00043c 3050      	CPI  R21,0
00043d f009      	BREQ _0x2000096
00043e 5051      	SUBI R21,LOW(1)
                 _0x2000096:
00043f 5041      	SUBI R20,LOW(1)
000440 cfec      	RJMP _0x2000091
                 _0x2000093:
000441 2f31      	MOV  R19,R17
000442 89ec      	LDD  R30,Y+20
000443 30e0      	CPI  R30,0
000444 f4b9      	BRNE _0x2000097
                 _0x2000098:
000445 3030      	CPI  R19,0
000446 f0a1      	BREQ _0x200009A
000447 ff03      	SBRS R16,3
000448 c006      	RJMP _0x200009B
000449 85ee      	LDD  R30,Y+14
00044a 85ff      	LDD  R31,Y+14+1
00044b 9125      	LPM  R18,Z+
00044c 87ee      	STD  Y+14,R30
00044d 87ff      	STD  Y+14+1,R31
00044e c005      	RJMP _0x200009C
                 _0x200009B:
00044f 85ae      	LDD  R26,Y+14
000450 85bf      	LDD  R27,Y+14+1
000451 912d      	LD   R18,X+
000452 87ae      	STD  Y+14,R26
000453 87bf      	STD  Y+14+1,R27
                 _0x200009C:
000454 940e 0760 	CALL SUBOPT_0x14
000456 3050      	CPI  R21,0
000457 f009      	BREQ _0x200009D
000458 5051      	SUBI R21,LOW(1)
                 _0x200009D:
000459 5031      	SUBI R19,LOW(1)
00045a cfea      	RJMP _0x2000098
                 _0x200009A:
00045b c051      	RJMP _0x200009E
                 _0x2000097:
                 _0x20000A0:
00045c 940e 07b2 	CALL SUBOPT_0x20
00045e 940e 09d6 	CALL __DIVD21U
000460 2f2e      	MOV  R18,R30
000461 302a      	CPI  R18,10
000462 f030      	BRLO _0x20000A2
000463 ff03      	SBRS R16,3
000464 c002      	RJMP _0x20000A3
000465 5c29      	SUBI R18,-LOW(55)
000466 c001      	RJMP _0x20000A4
                 _0x20000A3:
000467 5a29      	SUBI R18,-LOW(87)
                 _0x20000A4:
000468 c001      	RJMP _0x20000A5
                 _0x20000A2:
000469 5d20      	SUBI R18,-LOW(48)
                 _0x20000A5:
00046a fd04      	SBRC R16,4
00046b c021      	RJMP _0x20000A7
00046c 3321      	CPI  R18,49
00046d f460      	BRSH _0x20000A9
                +
00046e 89a8     +LDD R26 , Y + 16
00046f 89b9     +LDD R27 , Y + 16 + 1
000470 898a     +LDD R24 , Y + 16 + 2
000471 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000472 30a1     +CPI R26 , LOW ( 0x1 )
000473 e0e0     +LDI R30 , HIGH ( 0x1 )
000474 07be     +CPC R27 , R30
000475 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000476 078e     +CPC R24 , R30
000477 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000478 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000479 f409      	BRNE _0x20000A8
                 _0x20000A9:
00047a c00b      	RJMP _0x20000AB
                 _0x20000A8:
00047b 1743      	CP   R20,R19
00047c f440      	BRSH _0x2000119
00047d 1753      	CP   R21,R19
00047e f010      	BRLO _0x20000AE
00047f ff00      	SBRS R16,0
000480 c001      	RJMP _0x20000AF
                 _0x20000AE:
000481 c010      	RJMP _0x20000AD
                 _0x20000AF:
000482 e220      	LDI  R18,LOW(32)
000483 ff07      	SBRS R16,7
000484 c008      	RJMP _0x20000B0
                 _0x2000119:
000485 e320      	LDI  R18,LOW(48)
                 _0x20000AB:
000486 6100      	ORI  R16,LOW(16)
000487 ff02      	SBRS R16,2
000488 c004      	RJMP _0x20000B1
000489 940e 07a0 	CALL SUBOPT_0x1F
00048b f009      	BREQ _0x20000B2
00048c 5051      	SUBI R21,LOW(1)
                 _0x20000B2:
                 _0x20000B1:
                 _0x20000B0:
                 _0x20000A7:
00048d 940e 0760 	CALL SUBOPT_0x14
00048f 3050      	CPI  R21,0
000490 f009      	BREQ _0x20000B3
000491 5051      	SUBI R21,LOW(1)
                 _0x20000B3:
                 _0x20000AD:
000492 5031      	SUBI R19,LOW(1)
000493 940e 07b2 	CALL SUBOPT_0x20
000495 940e 0a07 	CALL __MODD21U
000497 940e 0782 	CALL SUBOPT_0x19
000499 89ec      	LDD  R30,Y+20
                +
00049a 89a8     +LDD R26 , Y + 16
00049b 89b9     +LDD R27 , Y + 16 + 1
00049c 898a     +LDD R24 , Y + 16 + 2
00049d 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00049e 27ff      	CLR  R31
00049f 2766      	CLR  R22
0004a0 2777      	CLR  R23
0004a1 940e 09d6 	CALL __DIVD21U
0004a3 940e 079b 	CALL SUBOPT_0x1E
                +
0004a5 89e8     +LDD R30 , Y + 16
0004a6 89f9     +LDD R31 , Y + 16 + 1
0004a7 896a     +LDD R22 , Y + 16 + 2
0004a8 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
0004a9 940e 0a4c 	CALL __CPD10
0004ab f009      	BREQ _0x20000A1
0004ac cfaf      	RJMP _0x20000A0
                 _0x20000A1:
                 _0x200009E:
0004ad ff00      	SBRS R16,0
0004ae c008      	RJMP _0x20000B4
                 _0x20000B5:
0004af 3050      	CPI  R21,0
0004b0 f031      	BREQ _0x20000B7
0004b1 5051      	SUBI R21,LOW(1)
0004b2 e2e0      	LDI  R30,LOW(32)
0004b3 93ea      	ST   -Y,R30
0004b4 940e 0775 	CALL SUBOPT_0x17
0004b6 cff8      	RJMP _0x20000B5
                 _0x20000B7:
                 _0x20000B4:
                 _0x20000B8:
                 _0x2000054:
                 _0x2000117:
0004b7 e010      	LDI  R17,LOW(0)
                 _0x2000035:
0004b8 ce0c      	RJMP _0x2000030
                 _0x2000032:
0004b9 81ae      	LDD  R26,Y+6
0004ba 81bf      	LDD  R27,Y+6+1
0004bb 940e 0a17 	CALL __GETW1P
0004bd 940e 0a57 	CALL __LOADLOCR6
0004bf 96ef      	ADIW R28,63
0004c0 966f      	ADIW R28,31
0004c1 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0004c2 92ff      	PUSH R15
0004c3 2ef8      	MOV  R15,R24
0004c4 9726      	SBIW R28,6
0004c5 940e 0a52 	CALL __SAVELOCR4
0004c7 940e 07bb 	CALL SUBOPT_0x21
0004c9 9730      	SBIW R30,0
0004ca f419      	BRNE _0x20000B9
0004cb efef      	LDI  R30,LOW(65535)
0004cc efff      	LDI  R31,HIGH(65535)
0004cd c023      	RJMP _0x20C0005
                 _0x20000B9:
0004ce 01de      	MOVW R26,R28
0004cf 9616      	ADIW R26,6
0004d0 940e 09ac 	CALL __ADDW2R15
0004d2 018d      	MOVW R16,R26
0004d3 940e 07bb 	CALL SUBOPT_0x21
0004d5 83ee      	STD  Y+6,R30
0004d6 83ff      	STD  Y+6+1,R31
0004d7 e0e0      	LDI  R30,LOW(0)
0004d8 87e8      	STD  Y+8,R30
0004d9 87e9      	STD  Y+8+1,R30
0004da 01de      	MOVW R26,R28
0004db 961a      	ADIW R26,10
0004dc 940e 09ac 	CALL __ADDW2R15
0004de 940e 0a17 	CALL __GETW1P
0004e0 93fa      	ST   -Y,R31
0004e1 93ea      	ST   -Y,R30
0004e2 931a      	ST   -Y,R17
0004e3 930a      	ST   -Y,R16
0004e4 e9ec      	LDI  R30,LOW(_put_buff_G100)
0004e5 e0f1      	LDI  R31,HIGH(_put_buff_G100)
0004e6 93fa      	ST   -Y,R31
0004e7 93ea      	ST   -Y,R30
0004e8 01de      	MOVW R26,R28
0004e9 961a      	ADIW R26,10
0004ea ddbd      	RCALL __print_G100
0004eb 019f      	MOVW R18,R30
0004ec 81ae      	LDD  R26,Y+6
0004ed 81bf      	LDD  R27,Y+6+1
0004ee e0e0      	LDI  R30,LOW(0)
0004ef 93ec      	ST   X,R30
0004f0 01f9      	MOVW R30,R18
                 _0x20C0005:
0004f1 940e 0a59 	CALL __LOADLOCR4
0004f3 962a      	ADIW R28,10
0004f4 90ff      	POP  R15
0004f5 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
0004f6 940e 0a3a 	CALL __PUTPARD2
0004f8 817b         ldd  r23,y+3
0004f9 816a         ldd  r22,y+2
0004fa 81f9         ldd  r31,y+1
0004fb 81e8         ld   r30,y
0004fc fb77         bst  r23,7
0004fd 0f77         lsl  r23
0004fe fd67         sbrc r22,7
0004ff 6071         sbr  r23,1
000500 2f97         mov  r25,r23
000501 579e         subi r25,0x7e
000502 f081         breq __ftrunc0
000503 f078         brcs __ftrunc0
000504 3198         cpi  r25,24
000505 f490         brsh __ftrunc1
000506 27aa         clr  r26
000507 27bb         clr  r27
000508 2788         clr  r24
                 __ftrunc2:
000509 9408         sec
00050a 9587         ror  r24
00050b 95b7         ror  r27
00050c 95a7         ror  r26
00050d 959a         dec  r25
00050e f7d1         brne __ftrunc2
00050f 23ea         and  r30,r26
000510 23fb         and  r31,r27
000511 2368         and  r22,r24
000512 c005         rjmp __ftrunc1
                 __ftrunc0:
000513 94e8         clt
000514 2777         clr  r23
000515 27ee         clr  r30
000516 27ff         clr  r31
000517 2766         clr  r22
                 __ftrunc1:
000518 776f         cbr  r22,0x80
000519 9576         lsr  r23
00051a f408         brcc __ftrunc3
00051b 6860         sbr  r22,0x80
                 __ftrunc3:
00051c f977         bld  r23,7
00051d 91a9         ld   r26,y+
00051e 91b9         ld   r27,y+
00051f 9189         ld   r24,y+
000520 9199         ld   r25,y+
000521 17ea         cp   r30,r26
000522 07fb         cpc  r31,r27
000523 0768         cpc  r22,r24
000524 0779         cpc  r23,r25
000525 fb97         bst  r25,7
000526 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
000527 940e 0a3a 	CALL __PUTPARD2
000529 940e 0a2b 	CALL __GETD2S0
00052b 940e 04f6 	CALL _ftrunc
00052d 940e 0a30 	CALL __PUTD1S0
00052f f419          brne __floor1
                 __floor0:
000530 940e 0a26 	CALL __GETD1S0
000532 c009      	RJMP _0x20C0004
                 __floor1:
000533 f7e6          brtc __floor0
000534 940e 0a26 	CALL __GETD1S0
                +
000536 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000537 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000538 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000539 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00053a 940e 08a2 	CALL __SUBF12
                 _0x20C0004:
00053c 9624      	ADIW R28,4
00053d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _fabs:
                 ; .FSTART _fabs
00053e 940e 0a3a 	CALL __PUTPARD2
000540 91e9          ld   r30,y+
000541 91f9          ld   r31,y+
000542 9169          ld   r22,y+
000543 9179          ld   r23,y+
000544 777f          cbr  r23,0x80
000545 9508          ret
                 ; .FEND
                 _ftoa:
                 ; .FSTART _ftoa
000546 940e 06fd 	CALL SUBOPT_0x7
000548 e0e0      	LDI  R30,LOW(0)
000549 83ea      	STD  Y+2,R30
00054a e3ef      	LDI  R30,LOW(63)
00054b 83eb      	STD  Y+3,R30
00054c 931a      	ST   -Y,R17
00054d 930a      	ST   -Y,R16
00054e 85eb      	LDD  R30,Y+11
00054f 85fc      	LDD  R31,Y+11+1
000550 3fef      	CPI  R30,LOW(0xFFFF)
000551 efaf      	LDI  R26,HIGH(0xFFFF)
000552 07fa      	CPC  R31,R26
000553 f439      	BRNE _0x204000D
000554 940e 07c2 	CALL SUBOPT_0x22
                +
000556 ebac     +LDI R26 , LOW ( 2 * _0x2040000 + ( 0 ) )
000557 e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 0 ) )
                 	__POINTW2FN _0x2040000,0
000558 940e 0699 	CALL _strcpyf
00055a c0ad      	RJMP _0x20C0003
                 _0x204000D:
00055b 3fef      	CPI  R30,LOW(0x7FFF)
00055c e7af      	LDI  R26,HIGH(0x7FFF)
00055d 07fa      	CPC  R31,R26
00055e f439      	BRNE _0x204000C
00055f 940e 07c2 	CALL SUBOPT_0x22
                +
000561 ebad     +LDI R26 , LOW ( 2 * _0x2040000 + ( 1 ) )
000562 e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 1 ) )
                 	__POINTW2FN _0x2040000,1
000563 940e 0699 	CALL _strcpyf
000565 c0a2      	RJMP _0x20C0003
                 _0x204000C:
000566 85ac      	LDD  R26,Y+12
000567 23aa      	TST  R26
000568 f462      	BRPL _0x204000F
                +
000569 85e9     +LDD R30 , Y + 9
00056a 85fa     +LDD R31 , Y + 9 + 1
00056b 856b     +LDD R22 , Y + 9 + 2
00056c 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00056d 940e 0803 	CALL __ANEGF1
00056f 940e 07c7 	CALL SUBOPT_0x23
000571 940e 07cc 	CALL SUBOPT_0x24
000573 e2ed      	LDI  R30,LOW(45)
000574 93ec      	ST   X,R30
                 _0x204000F:
000575 85a8      	LDD  R26,Y+8
000576 30a7      	CPI  R26,LOW(0x7)
000577 f010      	BRLO _0x2040010
000578 e0e6      	LDI  R30,LOW(6)
000579 87e8      	STD  Y+8,R30
                 _0x2040010:
00057a 8518      	LDD  R17,Y+8
                 _0x2040011:
00057b 2fe1      	MOV  R30,R17
00057c 5011      	SUBI R17,1
00057d 30e0      	CPI  R30,0
00057e f039      	BREQ _0x2040013
00057f 940e 07d3 	CALL SUBOPT_0x25
000581 940e 0742 	CALL SUBOPT_0xF
000583 940e 07d8 	CALL SUBOPT_0x26
000585 cff5      	RJMP _0x2040011
                 _0x2040013:
000586 940e 07dd 	CALL SUBOPT_0x27
000588 940e 08a9 	CALL __ADDF12
00058a 940e 07c7 	CALL SUBOPT_0x23
00058c e010      	LDI  R17,LOW(0)
                +
00058d e0e0     +LDI R30 , LOW ( 0x3F800000 )
00058e e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00058f e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000590 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000591 940e 07d8 	CALL SUBOPT_0x26
                 _0x2040014:
000593 940e 07dd 	CALL SUBOPT_0x27
000595 940e 098c 	CALL __CMPF12
000597 f088      	BRLO _0x2040016
000598 940e 07d3 	CALL SUBOPT_0x25
00059a 940e 072f 	CALL SUBOPT_0xC
00059c 940e 07d8 	CALL SUBOPT_0x26
00059e 5f1f      	SUBI R17,-LOW(1)
00059f 3217      	CPI  R17,39
0005a0 f038      	BRLO _0x2040017
0005a1 940e 07c2 	CALL SUBOPT_0x22
                +
0005a3 eca1     +LDI R26 , LOW ( 2 * _0x2040000 + ( 5 ) )
0005a4 e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 5 ) )
                 	__POINTW2FN _0x2040000,5
0005a5 940e 0699 	CALL _strcpyf
0005a7 c060      	RJMP _0x20C0003
                 _0x2040017:
0005a8 cfea      	RJMP _0x2040014
                 _0x2040016:
0005a9 3010      	CPI  R17,0
0005aa f429      	BRNE _0x2040018
0005ab 940e 07cc 	CALL SUBOPT_0x24
0005ad e3e0      	LDI  R30,LOW(48)
0005ae 93ec      	ST   X,R30
0005af c02b      	RJMP _0x2040019
                 _0x2040018:
                 _0x204001A:
0005b0 2fe1      	MOV  R30,R17
0005b1 5011      	SUBI R17,1
0005b2 30e0      	CPI  R30,0
0005b3 f139      	BREQ _0x204001C
0005b4 940e 07d3 	CALL SUBOPT_0x25
0005b6 940e 0742 	CALL SUBOPT_0xF
0005b8 940e 073b 	CALL SUBOPT_0xE
0005ba 01df      	MOVW R26,R30
0005bb 01cb      	MOVW R24,R22
0005bc 940e 0527 	CALL _floor
0005be 940e 07d8 	CALL SUBOPT_0x26
0005c0 940e 07dd 	CALL SUBOPT_0x27
0005c2 940e 0947 	CALL __DIVF21
0005c4 940e 0836 	CALL __CFD1U
0005c6 2f0e      	MOV  R16,R30
0005c7 940e 07cc 	CALL SUBOPT_0x24
0005c9 940e 0750 	CALL SUBOPT_0x11
0005cb e0f0      	LDI  R31,0
0005cc 940e 07d3 	CALL SUBOPT_0x25
0005ce 940e 09be 	CALL __CWD1
0005d0 940e 086f 	CALL __CDF1
0005d2 940e 08f9 	CALL __MULF12
0005d4 940e 07e6 	CALL SUBOPT_0x28
0005d6 940e 0755 	CALL SUBOPT_0x12
0005d8 940e 07c7 	CALL SUBOPT_0x23
0005da cfd5      	RJMP _0x204001A
                 _0x204001C:
                 _0x2040019:
0005db 85e8      	LDD  R30,Y+8
0005dc 30e0      	CPI  R30,0
0005dd f131      	BREQ _0x20C0002
0005de 940e 07cc 	CALL SUBOPT_0x24
0005e0 e2ee      	LDI  R30,LOW(46)
0005e1 93ec      	ST   X,R30
                 _0x204001E:
0005e2 85e8      	LDD  R30,Y+8
0005e3 50e1      	SUBI R30,LOW(1)
0005e4 87e8      	STD  Y+8,R30
0005e5 5fef      	SUBI R30,-LOW(1)
0005e6 f0e9      	BREQ _0x2040020
0005e7 940e 07e6 	CALL SUBOPT_0x28
0005e9 940e 072f 	CALL SUBOPT_0xC
0005eb 940e 07c7 	CALL SUBOPT_0x23
                +
0005ed 85e9     +LDD R30 , Y + 9
0005ee 85fa     +LDD R31 , Y + 9 + 1
0005ef 856b     +LDD R22 , Y + 9 + 2
0005f0 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0005f1 940e 0836 	CALL __CFD1U
0005f3 2f0e      	MOV  R16,R30
0005f4 940e 07cc 	CALL SUBOPT_0x24
0005f6 940e 0750 	CALL SUBOPT_0x11
0005f8 e0f0      	LDI  R31,0
0005f9 940e 07e6 	CALL SUBOPT_0x28
0005fb 940e 09be 	CALL __CWD1
0005fd 940e 086f 	CALL __CDF1
0005ff 940e 0755 	CALL SUBOPT_0x12
000601 940e 07c7 	CALL SUBOPT_0x23
000603 cfde      	RJMP _0x204001E
                 _0x2040020:
                 _0x20C0002:
000604 81ae      	LDD  R26,Y+6
000605 81bf      	LDD  R27,Y+6+1
000606 e0e0      	LDI  R30,LOW(0)
000607 93ec      	ST   X,R30
                 _0x20C0003:
000608 8119      	LDD  R17,Y+1
000609 8108      	LDD  R16,Y+0
00060a 962d      	ADIW R28,13
00060b 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G103:
                 ; .FSTART __lcd_write_nibble_G103
00060c 93aa      	ST   -Y,R26
00060d b3e5      	IN   R30,0x15
00060e 70ef      	ANDI R30,LOW(0xF)
00060f 2fae      	MOV  R26,R30
000610 81e8      	LD   R30,Y
000611 7fe0      	ANDI R30,LOW(0xF0)
000612 2bea      	OR   R30,R26
000613 bbe5      	OUT  0x15,R30
                +
000614 e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
000615 958a     +DEC R24
000616 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
000617 9aa9      	SBI  0x15,1
                +
000618 e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
000619 958a     +DEC R24
00061a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
00061b 98a9      	CBI  0x15,1
                +
00061c e181     +LDI R24 , LOW ( 17 )
                +__DELAY_USB_LOOP :
00061d 958a     +DEC R24
00061e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 17
00061f c077      	RJMP _0x20C0001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000620 93aa      	ST   -Y,R26
000621 81a8      	LD   R26,Y
000622 dfe9      	RCALL __lcd_write_nibble_G103
000623 81e8          ld    r30,y
000624 95e2          swap  r30
000625 83e8          st    y,r30
000626 81a8      	LD   R26,Y
000627 dfe4      	RCALL __lcd_write_nibble_G103
                +
000628 ea87     +LDI R24 , LOW ( 167 )
                +__DELAY_USB_LOOP :
000629 958a     +DEC R24
00062a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 167
00062b c06b      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
00062c 93aa      	ST   -Y,R26
00062d 81e8      	LD   R30,Y
00062e e0f0      	LDI  R31,0
00062f 5de8      	SUBI R30,LOW(-__base_y_G103)
000630 4ffa      	SBCI R31,HIGH(-__base_y_G103)
000631 81e0      	LD   R30,Z
000632 81a9      	LDD  R26,Y+1
000633 0fae      	ADD  R26,R30
000634 dfeb      	RCALL __lcd_write_data
000635 80b9      	LDD  R11,Y+1
000636 80a8      	LDD  R10,Y+0
000637 9622      	ADIW R28,2
000638 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000639 e0a2      	LDI  R26,LOW(2)
00063a 940e 07eb 	CALL SUBOPT_0x29
00063c e0ac      	LDI  R26,LOW(12)
00063d dfe2      	RCALL __lcd_write_data
00063e e0a1      	LDI  R26,LOW(1)
00063f 940e 07eb 	CALL SUBOPT_0x29
000641 e0e0      	LDI  R30,LOW(0)
000642 2eae      	MOV  R10,R30
000643 2ebe      	MOV  R11,R30
000644 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000645 93aa      	ST   -Y,R26
000646 81a8      	LD   R26,Y
000647 30aa      	CPI  R26,LOW(0xA)
000648 f011      	BREQ _0x2060005
000649 14bd      	CP   R11,R13
00064a f048      	BRLO _0x2060004
                 _0x2060005:
00064b e0e0      	LDI  R30,LOW(0)
00064c 93ea      	ST   -Y,R30
00064d 94a3      	INC  R10
00064e 2daa      	MOV  R26,R10
00064f dfdc      	RCALL _lcd_gotoxy
000650 81a8      	LD   R26,Y
000651 30aa      	CPI  R26,LOW(0xA)
000652 f409      	BRNE _0x2060007
000653 c043      	RJMP _0x20C0001
                 _0x2060007:
                 _0x2060004:
000654 94b3      	INC  R11
000655 9aa8      	SBI  0x15,0
000656 81a8      	LD   R26,Y
000657 dfc8      	RCALL __lcd_write_data
000658 98a8      	CBI  0x15,0
000659 c03d      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00065a 93ba      	ST   -Y,R27
00065b 93aa      	ST   -Y,R26
00065c 931a      	ST   -Y,R17
                 _0x2060008:
00065d 81a9      	LDD  R26,Y+1
00065e 81ba      	LDD  R27,Y+1+1
00065f 91ed      	LD   R30,X+
000660 83a9      	STD  Y+1,R26
000661 83ba      	STD  Y+1+1,R27
000662 2f1e      	MOV  R17,R30
000663 30e0      	CPI  R30,0
000664 f019      	BREQ _0x206000A
000665 2fa1      	MOV  R26,R17
000666 dfde      	RCALL _lcd_putchar
000667 cff5      	RJMP _0x2060008
                 _0x206000A:
000668 8118      	LDD  R17,Y+0
000669 9623      	ADIW R28,3
00066a 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00066b 93aa      	ST   -Y,R26
00066c b3e4      	IN   R30,0x14
00066d 6fe0      	ORI  R30,LOW(0xF0)
00066e bbe4      	OUT  0x14,R30
00066f 9aa1      	SBI  0x14,1
000670 9aa0      	SBI  0x14,0
000671 9aa2      	SBI  0x14,2
000672 98a9      	CBI  0x15,1
000673 98a8      	CBI  0x15,0
000674 98aa      	CBI  0x15,2
000675 80d8      	LDD  R13,Y+0
000676 81e8      	LD   R30,Y
000677 58e0      	SUBI R30,-LOW(128)
                +
000678 93e0 052a+STS __base_y_G103 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G103,2
00067a 81e8      	LD   R30,Y
00067b 54e0      	SUBI R30,-LOW(192)
                +
00067c 93e0 052b+STS __base_y_G103 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G103,3
00067e e1a4      	LDI  R26,LOW(20)
00067f e0b0      	LDI  R27,0
000680 940e 07f9 	CALL _delay_ms
000682 940e 07f1 	CALL SUBOPT_0x2A
000684 940e 07f1 	CALL SUBOPT_0x2A
000686 940e 07f1 	CALL SUBOPT_0x2A
000688 e2a0      	LDI  R26,LOW(32)
000689 df82      	RCALL __lcd_write_nibble_G103
                +
00068a ef8a     +LDI R24 , LOW ( 250 )
00068b e090     +LDI R25 , HIGH ( 250 )
                +__DELAY_USW_LOOP :
00068c 9701     +SBIW R24 , 1
00068d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 250
00068e e2a8      	LDI  R26,LOW(40)
00068f df90      	RCALL __lcd_write_data
000690 e0a4      	LDI  R26,LOW(4)
000691 df8e      	RCALL __lcd_write_data
000692 e8a5      	LDI  R26,LOW(133)
000693 df8c      	RCALL __lcd_write_data
000694 e0a6      	LDI  R26,LOW(6)
000695 df8a      	RCALL __lcd_write_data
000696 dfa2      	RCALL _lcd_clear
                 _0x20C0001:
000697 9621      	ADIW R28,1
000698 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
000699 93ba      	ST   -Y,R27
00069a 93aa      	ST   -Y,R26
00069b 91e9          ld   r30,y+
00069c 91f9          ld   r31,y+
00069d 91a9          ld   r26,y+
00069e 91b9          ld   r27,y+
00069f 01cd          movw r24,r26
                 strcpyf0:
0006a0 9005      	lpm  r0,z+
0006a1 920d          st   x+,r0
0006a2 2000          tst  r0
0006a3 f7e1          brne strcpyf0
0006a4 01fc          movw r30,r24
0006a5 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0006a6 93ba      	ST   -Y,R27
0006a7 93aa      	ST   -Y,R26
0006a8 91a9          ld   r26,y+
0006a9 91b9          ld   r27,y+
0006aa 27ee          clr  r30
0006ab 27ff          clr  r31
                 strlen0:
0006ac 916d          ld   r22,x+
0006ad 2366          tst  r22
0006ae f011          breq strlen1
0006af 9631          adiw r30,1
0006b0 cffb          rjmp strlen0
                 strlen1:
0006b1 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0006b2 93ba      	ST   -Y,R27
0006b3 93aa      	ST   -Y,R26
0006b4 27aa          clr  r26
0006b5 27bb          clr  r27
0006b6 91e9          ld   r30,y+
0006b7 91f9          ld   r31,y+
                 strlenf0:
0006b8 9005      	lpm  r0,z+
0006b9 2000          tst  r0
0006ba f011          breq strlenf1
0006bb 9611          adiw r26,1
0006bc cffb          rjmp strlenf0
                 strlenf1:
0006bd 01fd          movw r30,r26
0006be 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _data_adc0:
000500           	.BYTE 0x4
                 _data_adc1:
000504           	.BYTE 0x4
                 _tegangan0:
000508           	.BYTE 0x4
                 _tegangan1:
00050c           	.BYTE 0x4
                 _selisih:
000510           	.BYTE 0x4
                 _LCDBuffer:
000514           	.BYTE 0x10
                 __seed_G102:
000524           	.BYTE 0x4
                 __base_y_G103:
000528           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0006bf 2766      	CLR  R22
0006c0 2777      	CLR  R23
0006c1 940e 086f 	CALL __CDF1
0006c3 940e 0a21 	CALL __PUTDP1
0006c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
                +
0006c6 e0e0     +LDI R30 , LOW ( 0x40800000 )
0006c7 e0f0     +LDI R31 , HIGH ( 0x40800000 )
0006c8 e860     +LDI R22 , BYTE3 ( 0x40800000 )
0006c9 e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
0006ca 940e 08f9 	CALL __MULF12
0006cc 01df      	MOVW R26,R30
0006cd 01cb      	MOVW R24,R22
                +
0006ce e0e0     +LDI R30 , LOW ( 0x447FC000 )
0006cf ecf0     +LDI R31 , HIGH ( 0x447FC000 )
0006d0 e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
0006d1 e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
0006d2 940e 0947 	CALL __DIVF21
0006d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
0006d5 940e 062c 	CALL _lcd_gotoxy
0006d7 e1e4      	LDI  R30,LOW(_LCDBuffer)
0006d8 e0f5      	LDI  R31,HIGH(_LCDBuffer)
0006d9 93fa      	ST   -Y,R31
0006da 93ea      	ST   -Y,R30
0006db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
0006dc 91e0 0508 	LDS  R30,_tegangan0
0006de 91f0 0509 	LDS  R31,_tegangan0+1
0006e0 9160 050a 	LDS  R22,_tegangan0+2
0006e2 9170 050b 	LDS  R23,_tegangan0+3
0006e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
0006e5 91e0 0510 	LDS  R30,_selisih
0006e7 91f0 0511 	LDS  R31,_selisih+1
0006e9 9160 0512 	LDS  R22,_selisih+2
0006eb 9170 0513 	LDS  R23,_selisih+3
0006ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x5:
0006ee 91a0 0510 	LDS  R26,_selisih
0006f0 91b0 0511 	LDS  R27,_selisih+1
0006f2 9180 0512 	LDS  R24,_selisih+2
0006f4 9190 0513 	LDS  R25,_selisih+3
0006f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
0006f7 91ed      	LD   R30,X+
0006f8 91fd      	LD   R31,X+
0006f9 9631      	ADIW R30,1
0006fa 93fe      	ST   -X,R31
0006fb 93ee      	ST   -X,R30
0006fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
0006fd 93ba      	ST   -Y,R27
0006fe 93aa      	ST   -Y,R26
0006ff 9724      	SBIW R28,4
000700 e0e0      	LDI  R30,LOW(0)
000701 83e8      	ST   Y,R30
000702 83e9      	STD  Y+1,R30
000703 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x8:
                +
000704 81ac     +LDD R26 , Y + 4
000705 81bd     +LDD R27 , Y + 4 + 1
000706 818e     +LDD R24 , Y + 4 + 2
000707 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000708 e0e0     +LDI R30 , LOW ( 0x41200000 )
000709 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00070a e260     +LDI R22 , BYTE3 ( 0x41200000 )
00070b e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00070c 940e 08f9 	CALL __MULF12
                +
00070e 83ec     +STD Y + 4 , R30
00070f 83fd     +STD Y + 4 + 1 , R31
000710 836e     +STD Y + 4 + 2 , R22
000711 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000712 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x9:
                +
000713 81ec     +LDD R30 , Y + 4
000714 81fd     +LDD R31 , Y + 4 + 1
000715 816e     +LDD R22 , Y + 4 + 2
000716 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000717 85ac     +LDD R26 , Y + 12
000718 85bd     +LDD R27 , Y + 12 + 1
000719 858e     +LDD R24 , Y + 12 + 2
00071a 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00071b 940e 098c 	CALL __CMPF12
00071d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
                +
00071e 85ac     +LDD R26 , Y + 12
00071f 85bd     +LDD R27 , Y + 12 + 1
000720 858e     +LDD R24 , Y + 12 + 2
000721 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000722 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xB:
                +
000723 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000724 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000725 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000726 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000727 940e 08f9 	CALL __MULF12
                +
000729 87ec     +STD Y + 12 , R30
00072a 87fd     +STD Y + 12 + 1 , R31
00072b 876e     +STD Y + 12 + 2 , R22
00072c 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00072d 5f3f      	SUBI R19,-LOW(1)
00072e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
                +
00072f e0e0     +LDI R30 , LOW ( 0x41200000 )
000730 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000731 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000732 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000733 940e 08f9 	CALL __MULF12
000735 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
                +
000736 87ec     +STD Y + 12 , R30
000737 87fd     +STD Y + 12 + 1 , R31
000738 876e     +STD Y + 12 + 2 , R22
000739 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00073a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xE:
                +
00073b e0a0     +LDI R26 , LOW ( 0x3F000000 )
00073c e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00073d e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00073e e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00073f 940e 08a9 	CALL __ADDF12
000741 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xF:
                +
000742 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000743 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000744 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000745 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000746 940e 08f9 	CALL __MULF12
000748 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
000749 85a8      	LDD  R26,Y+8
00074a 85b9      	LDD  R27,Y+8+1
00074b 9611      	ADIW R26,1
00074c 87a8      	STD  Y+8,R26
00074d 87b9      	STD  Y+8+1,R27
00074e 9711      	SBIW R26,1
00074f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000750 2fe0      	MOV  R30,R16
000751 5de0      	SUBI R30,-LOW(48)
000752 93ec      	ST   X,R30
000753 2fe0      	MOV  R30,R16
000754 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
000755 940e 0a3f 	CALL __SWAPD12
000757 940e 08a2 	CALL __SUBF12
000759 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x13:
00075a 85e8      	LDD  R30,Y+8
00075b 85f9      	LDD  R31,Y+8+1
00075c 9631      	ADIW R30,1
00075d 87e8      	STD  Y+8,R30
00075e 87f9      	STD  Y+8+1,R31
00075f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x14:
000760 932a      	ST   -Y,R18
000761 81af      	LDD  R26,Y+7
000762 85b8      	LDD  R27,Y+7+1
000763 85e9      	LDD  R30,Y+9
000764 85fa      	LDD  R31,Y+9+1
000765 9509      	ICALL
000766 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x15:
                +
000767 01fe     +MOVW R30 , R28
000768 5ae6     +SUBI R30 , LOW ( - 90 )
000769 4fff     +SBCI R31 , HIGH ( - 90 )
00076a 9001     +LD R0 , Z +
00076b 81f0     +LD R31 , Z
00076c 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00076d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x16:
00076e 9734      	SBIW R30,4
                +
00076f 01de     +MOVW R26 , R28
000770 5aa6     +SUBI R26 , LOW ( - 90 )
000771 4fbf     +SBCI R27 , HIGH ( - 90 )
000772 93ed     +ST X + , R30
000773 93fc     +ST X , R31
                 	__PUTW1SX 90
000774 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x17:
000775 81af      	LDD  R26,Y+7
000776 85b8      	LDD  R27,Y+7+1
000777 85e9      	LDD  R30,Y+9
000778 85fa      	LDD  R31,Y+9+1
000779 9509      	ICALL
00077a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x18:
                +
00077b 01de     +MOVW R26 , R28
00077c 5aa6     +SUBI R26 , LOW ( - 90 )
00077d 4fbf     +SBCI R27 , HIGH ( - 90 )
00077e 900d     +LD R0 , X +
00077f 91bc     +LD R27 , X
000780 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000781 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19:
                +
000782 87ea     +STD Y + 10 , R30
000783 87fb     +STD Y + 10 + 1 , R31
000784 876c     +STD Y + 10 + 2 , R22
000785 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000786 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1A:
000787 dfdf      	RCALL SUBOPT_0x15
000788 cfe5      	RJMP SUBOPT_0x16
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B:
                +
000789 85ea     +LDD R30 , Y + 10
00078a 85fb     +LDD R31 , Y + 10 + 1
00078b 856c     +LDD R22 , Y + 10 + 2
00078c 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00078d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1C:
00078e 87ee      	STD  Y+14,R30
00078f 87ff      	STD  Y+14+1,R31
000790 85ae      	LDD  R26,Y+14
000791 85bf      	LDD  R27,Y+14+1
000792 940e 06a6 	CALL _strlen
000794 2f1e      	MOV  R17,R30
000795 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1D:
000796 dfe4      	RCALL SUBOPT_0x18
000797 9614      	ADIW R26,4
000798 940e 0a17 	CALL __GETW1P
00079a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E:
                +
00079b 8be8     +STD Y + 16 , R30
00079c 8bf9     +STD Y + 16 + 1 , R31
00079d 8b6a     +STD Y + 16 + 2 , R22
00079e 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00079f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1F:
0007a0 7f0b      	ANDI R16,LOW(251)
0007a1 89ed      	LDD  R30,Y+21
0007a2 93ea      	ST   -Y,R30
                +
0007a3 01de     +MOVW R26 , R28
0007a4 5aa9     +SUBI R26 , LOW ( - 87 )
0007a5 4fbf     +SBCI R27 , HIGH ( - 87 )
0007a6 900d     +LD R0 , X +
0007a7 91bc     +LD R27 , X
0007a8 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
0007a9 01fe     +MOVW R30 , R28
0007aa 5ae7     +SUBI R30 , LOW ( - 89 )
0007ab 4fff     +SBCI R31 , HIGH ( - 89 )
0007ac 9001     +LD R0 , Z +
0007ad 81f0     +LD R31 , Z
0007ae 2de0     +MOV R30 , R0
                 	__GETW1SX 89
0007af 9509      	ICALL
0007b0 3050      	CPI  R21,0
0007b1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
                +
0007b2 89e8     +LDD R30 , Y + 16
0007b3 89f9     +LDD R31 , Y + 16 + 1
0007b4 896a     +LDD R22 , Y + 16 + 2
0007b5 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
0007b6 85aa     +LDD R26 , Y + 10
0007b7 85bb     +LDD R27 , Y + 10 + 1
0007b8 858c     +LDD R24 , Y + 10 + 2
0007b9 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
0007ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
0007bb 01de      	MOVW R26,R28
0007bc 961c      	ADIW R26,12
0007bd 940e 09ac 	CALL __ADDW2R15
0007bf 940e 0a17 	CALL __GETW1P
0007c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
0007c2 81ee      	LDD  R30,Y+6
0007c3 81ff      	LDD  R31,Y+6+1
0007c4 93fa      	ST   -Y,R31
0007c5 93ea      	ST   -Y,R30
0007c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23:
                +
0007c7 87e9     +STD Y + 9 , R30
0007c8 87fa     +STD Y + 9 + 1 , R31
0007c9 876b     +STD Y + 9 + 2 , R22
0007ca 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
0007cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x24:
0007cc 81ae      	LDD  R26,Y+6
0007cd 81bf      	LDD  R27,Y+6+1
0007ce 9611      	ADIW R26,1
0007cf 83ae      	STD  Y+6,R26
0007d0 83bf      	STD  Y+6+1,R27
0007d1 9711      	SBIW R26,1
0007d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25:
                +
0007d3 81aa     +LDD R26 , Y + 2
0007d4 81bb     +LDD R27 , Y + 2 + 1
0007d5 818c     +LDD R24 , Y + 2 + 2
0007d6 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0007d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
                +
0007d8 83ea     +STD Y + 2 , R30
0007d9 83fb     +STD Y + 2 + 1 , R31
0007da 836c     +STD Y + 2 + 2 , R22
0007db 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0007dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x27:
                +
0007dd 81ea     +LDD R30 , Y + 2
0007de 81fb     +LDD R31 , Y + 2 + 1
0007df 816c     +LDD R22 , Y + 2 + 2
0007e0 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
0007e1 85a9     +LDD R26 , Y + 9
0007e2 85ba     +LDD R27 , Y + 9 + 1
0007e3 858b     +LDD R24 , Y + 9 + 2
0007e4 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0007e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
                +
0007e6 85a9     +LDD R26 , Y + 9
0007e7 85ba     +LDD R27 , Y + 9 + 1
0007e8 858b     +LDD R24 , Y + 9 + 2
0007e9 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0007ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
0007eb 940e 0620 	CALL __lcd_write_data
0007ed e0a3      	LDI  R26,LOW(3)
0007ee e0b0      	LDI  R27,0
0007ef 940c 07f9 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2A:
0007f1 e3a0      	LDI  R26,LOW(48)
0007f2 940e 060c 	CALL __lcd_write_nibble_G103
                +
0007f4 ef8a     +LDI R24 , LOW ( 250 )
0007f5 e090     +LDI R25 , HIGH ( 250 )
                +__DELAY_USW_LOOP :
0007f6 9701     +SBIW R24 , 1
0007f7 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 250
0007f8 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0007f9 9610      	adiw r26,0
0007fa f039      	breq __delay_ms1
                 __delay_ms0:
                +
0007fb ec84     +LDI R24 , LOW ( 0x9C4 )
0007fc e099     +LDI R25 , HIGH ( 0x9C4 )
                +__DELAY_USW_LOOP :
0007fd 9701     +SBIW R24 , 1
0007fe f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x9C4
0007ff 95a8      	wdr
000800 9711      	sbiw r26,1
000801 f7c9      	brne __delay_ms0
                 __delay_ms1:
000802 9508      	ret
                 
                 __ANEGF1:
000803 9730      	SBIW R30,0
000804 4060      	SBCI R22,0
000805 4070      	SBCI R23,0
000806 f009      	BREQ __ANEGF10
000807 5870      	SUBI R23,0x80
                 __ANEGF10:
000808 9508      	RET
                 
                 __ROUND_REPACK:
000809 2355      	TST  R21
00080a f442      	BRPL __REPACK
00080b 3850      	CPI  R21,0x80
00080c f411      	BRNE __ROUND_REPACK0
00080d ffe0      	SBRS R30,0
00080e c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00080f 9631      	ADIW R30,1
000810 1f69      	ADC  R22,R25
000811 1f79      	ADC  R23,R25
000812 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000813 e850      	LDI  R21,0x80
000814 2757      	EOR  R21,R23
000815 f411      	BRNE __REPACK0
000816 935f      	PUSH R21
000817 c0cf      	RJMP __ZERORES
                 __REPACK0:
000818 3f5f      	CPI  R21,0xFF
000819 f031      	BREQ __REPACK1
00081a 0f66      	LSL  R22
00081b 0c00      	LSL  R0
00081c 9557      	ROR  R21
00081d 9567      	ROR  R22
00081e 2f75      	MOV  R23,R21
00081f 9508      	RET
                 __REPACK1:
000820 935f      	PUSH R21
000821 2000      	TST  R0
000822 f00a      	BRMI __REPACK2
000823 c0cf      	RJMP __MAXRES
                 __REPACK2:
000824 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000825 e850      	LDI  R21,0x80
000826 2e19      	MOV  R1,R25
000827 2215      	AND  R1,R21
000828 0f88      	LSL  R24
000829 1f99      	ROL  R25
00082a 2795      	EOR  R25,R21
00082b 0f55      	LSL  R21
00082c 9587      	ROR  R24
                 
                 __UNPACK1:
00082d e850      	LDI  R21,0x80
00082e 2e07      	MOV  R0,R23
00082f 2205      	AND  R0,R21
000830 0f66      	LSL  R22
000831 1f77      	ROL  R23
000832 2775      	EOR  R23,R21
000833 0f55      	LSL  R21
000834 9567      	ROR  R22
000835 9508      	RET
                 
                 __CFD1U:
000836 9468      	SET
000837 c001      	RJMP __CFD1U0
                 __CFD1:
000838 94e8      	CLT
                 __CFD1U0:
000839 935f      	PUSH R21
00083a dff2      	RCALL __UNPACK1
00083b 3870      	CPI  R23,0x80
00083c f018      	BRLO __CFD10
00083d 3f7f      	CPI  R23,0xFF
00083e f408      	BRCC __CFD10
00083f c0a7      	RJMP __ZERORES
                 __CFD10:
000840 e156      	LDI  R21,22
000841 1b57      	SUB  R21,R23
000842 f4aa      	BRPL __CFD11
000843 9551      	NEG  R21
000844 3058      	CPI  R21,8
000845 f40e      	BRTC __CFD19
000846 3059      	CPI  R21,9
                 __CFD19:
000847 f030      	BRLO __CFD17
000848 efef      	SER  R30
000849 efff      	SER  R31
00084a ef6f      	SER  R22
00084b e77f      	LDI  R23,0x7F
00084c f977      	BLD  R23,7
00084d c01a      	RJMP __CFD15
                 __CFD17:
00084e 2777      	CLR  R23
00084f 2355      	TST  R21
000850 f0b9      	BREQ __CFD15
                 __CFD18:
000851 0fee      	LSL  R30
000852 1fff      	ROL  R31
000853 1f66      	ROL  R22
000854 1f77      	ROL  R23
000855 955a      	DEC  R21
000856 f7d1      	BRNE __CFD18
000857 c010      	RJMP __CFD15
                 __CFD11:
000858 2777      	CLR  R23
                 __CFD12:
000859 3058      	CPI  R21,8
00085a f028      	BRLO __CFD13
00085b 2fef      	MOV  R30,R31
00085c 2ff6      	MOV  R31,R22
00085d 2f67      	MOV  R22,R23
00085e 5058      	SUBI R21,8
00085f cff9      	RJMP __CFD12
                 __CFD13:
000860 2355      	TST  R21
000861 f031      	BREQ __CFD15
                 __CFD14:
000862 9576      	LSR  R23
000863 9567      	ROR  R22
000864 95f7      	ROR  R31
000865 95e7      	ROR  R30
000866 955a      	DEC  R21
000867 f7d1      	BRNE __CFD14
                 __CFD15:
000868 2000      	TST  R0
000869 f40a      	BRPL __CFD16
00086a d145      	RCALL __ANEGD1
                 __CFD16:
00086b 915f      	POP  R21
00086c 9508      	RET
                 
                 __CDF1U:
00086d 9468      	SET
00086e c001      	RJMP __CDF1U0
                 __CDF1:
00086f 94e8      	CLT
                 __CDF1U0:
000870 9730      	SBIW R30,0
000871 4060      	SBCI R22,0
000872 4070      	SBCI R23,0
000873 f0b1      	BREQ __CDF10
000874 2400      	CLR  R0
000875 f026      	BRTS __CDF11
000876 2377      	TST  R23
000877 f412      	BRPL __CDF11
000878 9400      	COM  R0
000879 d136      	RCALL __ANEGD1
                 __CDF11:
00087a 2e17      	MOV  R1,R23
00087b e17e      	LDI  R23,30
00087c 2011      	TST  R1
                 __CDF12:
00087d f032      	BRMI __CDF13
00087e 957a      	DEC  R23
00087f 0fee      	LSL  R30
000880 1fff      	ROL  R31
000881 1f66      	ROL  R22
000882 1c11      	ROL  R1
000883 cff9      	RJMP __CDF12
                 __CDF13:
000884 2fef      	MOV  R30,R31
000885 2ff6      	MOV  R31,R22
000886 2d61      	MOV  R22,R1
000887 935f      	PUSH R21
000888 df8a      	RCALL __REPACK
000889 915f      	POP  R21
                 __CDF10:
00088a 9508      	RET
                 
                 __SWAPACC:
00088b 934f      	PUSH R20
00088c 01af      	MOVW R20,R30
00088d 01fd      	MOVW R30,R26
00088e 01da      	MOVW R26,R20
00088f 01ab      	MOVW R20,R22
000890 01bc      	MOVW R22,R24
000891 01ca      	MOVW R24,R20
000892 2d40      	MOV  R20,R0
000893 2c01      	MOV  R0,R1
000894 2e14      	MOV  R1,R20
000895 914f      	POP  R20
000896 9508      	RET
                 
                 __UADD12:
000897 0fea      	ADD  R30,R26
000898 1ffb      	ADC  R31,R27
000899 1f68      	ADC  R22,R24
00089a 9508      	RET
                 
                 __NEGMAN1:
00089b 95e0      	COM  R30
00089c 95f0      	COM  R31
00089d 9560      	COM  R22
00089e 5fef      	SUBI R30,-1
00089f 4fff      	SBCI R31,-1
0008a0 4f6f      	SBCI R22,-1
0008a1 9508      	RET
                 
                 __SUBF12:
0008a2 935f      	PUSH R21
0008a3 df81      	RCALL __UNPACK
0008a4 3890      	CPI  R25,0x80
0008a5 f171      	BREQ __ADDF129
0008a6 e850      	LDI  R21,0x80
0008a7 2615      	EOR  R1,R21
                 
0008a8 c004      	RJMP __ADDF120
                 
                 __ADDF12:
0008a9 935f      	PUSH R21
0008aa df7a      	RCALL __UNPACK
0008ab 3890      	CPI  R25,0x80
0008ac f139      	BREQ __ADDF129
                 
                 __ADDF120:
0008ad 3870      	CPI  R23,0x80
0008ae f121      	BREQ __ADDF128
                 __ADDF121:
0008af 2f57      	MOV  R21,R23
0008b0 1b59      	SUB  R21,R25
0008b1 f12b      	BRVS __ADDF1211
0008b2 f412      	BRPL __ADDF122
0008b3 dfd7      	RCALL __SWAPACC
0008b4 cffa      	RJMP __ADDF121
                 __ADDF122:
0008b5 3158      	CPI  R21,24
0008b6 f018      	BRLO __ADDF123
0008b7 27aa      	CLR  R26
0008b8 27bb      	CLR  R27
0008b9 2788      	CLR  R24
                 __ADDF123:
0008ba 3058      	CPI  R21,8
0008bb f028      	BRLO __ADDF124
0008bc 2fab      	MOV  R26,R27
0008bd 2fb8      	MOV  R27,R24
0008be 2788      	CLR  R24
0008bf 5058      	SUBI R21,8
0008c0 cff9      	RJMP __ADDF123
                 __ADDF124:
0008c1 2355      	TST  R21
0008c2 f029      	BREQ __ADDF126
                 __ADDF125:
0008c3 9586      	LSR  R24
0008c4 95b7      	ROR  R27
0008c5 95a7      	ROR  R26
0008c6 955a      	DEC  R21
0008c7 f7d9      	BRNE __ADDF125
                 __ADDF126:
0008c8 2d50      	MOV  R21,R0
0008c9 2551      	EOR  R21,R1
0008ca f072      	BRMI __ADDF127
0008cb dfcb      	RCALL __UADD12
0008cc f438      	BRCC __ADDF129
0008cd 9567      	ROR  R22
0008ce 95f7      	ROR  R31
0008cf 95e7      	ROR  R30
0008d0 9573      	INC  R23
0008d1 f413      	BRVC __ADDF129
0008d2 c020      	RJMP __MAXRES
                 __ADDF128:
0008d3 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0008d4 df3e      	RCALL __REPACK
0008d5 915f      	POP  R21
0008d6 9508      	RET
                 __ADDF1211:
0008d7 f7d8      	BRCC __ADDF128
0008d8 cffb      	RJMP __ADDF129
                 __ADDF127:
0008d9 1bea      	SUB  R30,R26
0008da 0bfb      	SBC  R31,R27
0008db 0b68      	SBC  R22,R24
0008dc f051      	BREQ __ZERORES
0008dd f410      	BRCC __ADDF1210
0008de 9400      	COM  R0
0008df dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0008e0 2366      	TST  R22
0008e1 f392      	BRMI __ADDF129
0008e2 0fee      	LSL  R30
0008e3 1fff      	ROL  R31
0008e4 1f66      	ROL  R22
0008e5 957a      	DEC  R23
0008e6 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0008e7 27ee      	CLR  R30
0008e8 27ff      	CLR  R31
0008e9 2766      	CLR  R22
0008ea 2777      	CLR  R23
0008eb 915f      	POP  R21
0008ec 9508      	RET
                 
                 __MINRES:
0008ed efef      	SER  R30
0008ee efff      	SER  R31
0008ef e76f      	LDI  R22,0x7F
0008f0 ef7f      	SER  R23
0008f1 915f      	POP  R21
0008f2 9508      	RET
                 
                 __MAXRES:
0008f3 efef      	SER  R30
0008f4 efff      	SER  R31
0008f5 e76f      	LDI  R22,0x7F
0008f6 e77f      	LDI  R23,0x7F
0008f7 915f      	POP  R21
0008f8 9508      	RET
                 
                 __MULF12:
0008f9 935f      	PUSH R21
0008fa df2a      	RCALL __UNPACK
0008fb 3870      	CPI  R23,0x80
0008fc f351      	BREQ __ZERORES
0008fd 3890      	CPI  R25,0x80
0008fe f341      	BREQ __ZERORES
0008ff 2401      	EOR  R0,R1
000900 9408      	SEC
000901 1f79      	ADC  R23,R25
000902 f423      	BRVC __MULF124
000903 f31c      	BRLT __ZERORES
                 __MULF125:
000904 2000      	TST  R0
000905 f33a      	BRMI __MINRES
000906 cfec      	RJMP __MAXRES
                 __MULF124:
000907 920f      	PUSH R0
000908 931f      	PUSH R17
000909 932f      	PUSH R18
00090a 933f      	PUSH R19
00090b 934f      	PUSH R20
00090c 2711      	CLR  R17
00090d 2722      	CLR  R18
00090e 2799      	CLR  R25
00090f 9f68      	MUL  R22,R24
000910 01a0      	MOVW R20,R0
000911 9f8f      	MUL  R24,R31
000912 2d30      	MOV  R19,R0
000913 0d41      	ADD  R20,R1
000914 1f59      	ADC  R21,R25
000915 9f6b      	MUL  R22,R27
000916 0d30      	ADD  R19,R0
000917 1d41      	ADC  R20,R1
000918 1f59      	ADC  R21,R25
000919 9f8e      	MUL  R24,R30
00091a d027      	RCALL __MULF126
00091b 9fbf      	MUL  R27,R31
00091c d025      	RCALL __MULF126
00091d 9f6a      	MUL  R22,R26
00091e d023      	RCALL __MULF126
00091f 9fbe      	MUL  R27,R30
000920 d01d      	RCALL __MULF127
000921 9faf      	MUL  R26,R31
000922 d01b      	RCALL __MULF127
000923 9fae      	MUL  R26,R30
000924 0d11      	ADD  R17,R1
000925 1f29      	ADC  R18,R25
000926 1f39      	ADC  R19,R25
000927 1f49      	ADC  R20,R25
000928 1f59      	ADC  R21,R25
000929 2fe3      	MOV  R30,R19
00092a 2ff4      	MOV  R31,R20
00092b 2f65      	MOV  R22,R21
00092c 2f52      	MOV  R21,R18
00092d 914f      	POP  R20
00092e 913f      	POP  R19
00092f 912f      	POP  R18
000930 911f      	POP  R17
000931 900f      	POP  R0
000932 2366      	TST  R22
000933 f02a      	BRMI __MULF122
000934 0f55      	LSL  R21
000935 1fee      	ROL  R30
000936 1fff      	ROL  R31
000937 1f66      	ROL  R22
000938 c002      	RJMP __MULF123
                 __MULF122:
000939 9573      	INC  R23
00093a f24b      	BRVS __MULF125
                 __MULF123:
00093b decd      	RCALL __ROUND_REPACK
00093c 915f      	POP  R21
00093d 9508      	RET
                 
                 __MULF127:
00093e 0d10      	ADD  R17,R0
00093f 1d21      	ADC  R18,R1
000940 1f39      	ADC  R19,R25
000941 c002      	RJMP __MULF128
                 __MULF126:
000942 0d20      	ADD  R18,R0
000943 1d31      	ADC  R19,R1
                 __MULF128:
000944 1f49      	ADC  R20,R25
000945 1f59      	ADC  R21,R25
000946 9508      	RET
                 
                 __DIVF21:
000947 935f      	PUSH R21
000948 dedc      	RCALL __UNPACK
000949 3870      	CPI  R23,0x80
00094a f421      	BRNE __DIVF210
00094b 2011      	TST  R1
                 __DIVF211:
00094c f40a      	BRPL __DIVF219
00094d cf9f      	RJMP __MINRES
                 __DIVF219:
00094e cfa4      	RJMP __MAXRES
                 __DIVF210:
00094f 3890      	CPI  R25,0x80
000950 f409      	BRNE __DIVF218
                 __DIVF217:
000951 cf95      	RJMP __ZERORES
                 __DIVF218:
000952 2401      	EOR  R0,R1
000953 9408      	SEC
000954 0b97      	SBC  R25,R23
000955 f41b      	BRVC __DIVF216
000956 f3d4      	BRLT __DIVF217
000957 2000      	TST  R0
000958 cff3      	RJMP __DIVF211
                 __DIVF216:
000959 2f79      	MOV  R23,R25
00095a 931f      	PUSH R17
00095b 932f      	PUSH R18
00095c 933f      	PUSH R19
00095d 934f      	PUSH R20
00095e 2411      	CLR  R1
00095f 2711      	CLR  R17
000960 2722      	CLR  R18
000961 2733      	CLR  R19
000962 2744      	CLR  R20
000963 2755      	CLR  R21
000964 e290      	LDI  R25,32
                 __DIVF212:
000965 17ae      	CP   R26,R30
000966 07bf      	CPC  R27,R31
000967 0786      	CPC  R24,R22
000968 0741      	CPC  R20,R17
000969 f030      	BRLO __DIVF213
00096a 1bae      	SUB  R26,R30
00096b 0bbf      	SBC  R27,R31
00096c 0b86      	SBC  R24,R22
00096d 0b41      	SBC  R20,R17
00096e 9408      	SEC
00096f c001      	RJMP __DIVF214
                 __DIVF213:
000970 9488      	CLC
                 __DIVF214:
000971 1f55      	ROL  R21
000972 1f22      	ROL  R18
000973 1f33      	ROL  R19
000974 1c11      	ROL  R1
000975 1faa      	ROL  R26
000976 1fbb      	ROL  R27
000977 1f88      	ROL  R24
000978 1f44      	ROL  R20
000979 959a      	DEC  R25
00097a f751      	BRNE __DIVF212
00097b 01f9      	MOVW R30,R18
00097c 2d61      	MOV  R22,R1
00097d 914f      	POP  R20
00097e 913f      	POP  R19
00097f 912f      	POP  R18
000980 911f      	POP  R17
000981 2366      	TST  R22
000982 f032      	BRMI __DIVF215
000983 0f55      	LSL  R21
000984 1fee      	ROL  R30
000985 1fff      	ROL  R31
000986 1f66      	ROL  R22
000987 957a      	DEC  R23
000988 f243      	BRVS __DIVF217
                 __DIVF215:
000989 de7f      	RCALL __ROUND_REPACK
00098a 915f      	POP  R21
00098b 9508      	RET
                 
                 __CMPF12:
00098c 2399      	TST  R25
00098d f09a      	BRMI __CMPF120
00098e 2377      	TST  R23
00098f f042      	BRMI __CMPF121
000990 1797      	CP   R25,R23
000991 f048      	BRLO __CMPF122
000992 f429      	BRNE __CMPF121
000993 17ae      	CP   R26,R30
000994 07bf      	CPC  R27,R31
000995 0786      	CPC  R24,R22
000996 f020      	BRLO __CMPF122
000997 f031      	BREQ __CMPF123
                 __CMPF121:
000998 9498      	CLZ
000999 9488      	CLC
00099a 9508      	RET
                 __CMPF122:
00099b 9498      	CLZ
00099c 9408      	SEC
00099d 9508      	RET
                 __CMPF123:
00099e 9418      	SEZ
00099f 9488      	CLC
0009a0 9508      	RET
                 __CMPF120:
0009a1 2377      	TST  R23
0009a2 f7c2      	BRPL __CMPF122
0009a3 1797      	CP   R25,R23
0009a4 f398      	BRLO __CMPF121
0009a5 f7a9      	BRNE __CMPF122
0009a6 17ea      	CP   R30,R26
0009a7 07fb      	CPC  R31,R27
0009a8 0768      	CPC  R22,R24
0009a9 f388      	BRLO __CMPF122
0009aa f399      	BREQ __CMPF123
0009ab cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
0009ac 2400      	CLR  R0
0009ad 0daf      	ADD  R26,R15
0009ae 1db0      	ADC  R27,R0
0009af 9508      	RET
                 
                 __ANEGD1:
0009b0 95f0      	COM  R31
0009b1 9560      	COM  R22
0009b2 9570      	COM  R23
0009b3 95e1      	NEG  R30
0009b4 4fff      	SBCI R31,-1
0009b5 4f6f      	SBCI R22,-1
0009b6 4f7f      	SBCI R23,-1
0009b7 9508      	RET
                 
                 __CBD1:
0009b8 2ffe      	MOV  R31,R30
0009b9 0fff      	ADD  R31,R31
0009ba 0bff      	SBC  R31,R31
0009bb 2f6f      	MOV  R22,R31
0009bc 2f7f      	MOV  R23,R31
0009bd 9508      	RET
                 
                 __CWD1:
0009be 2f6f      	MOV  R22,R31
0009bf 0f66      	ADD  R22,R22
0009c0 0b66      	SBC  R22,R22
0009c1 2f76      	MOV  R23,R22
0009c2 9508      	RET
                 
                 __DIVB21U:
0009c3 2400      	CLR  R0
0009c4 e098      	LDI  R25,8
                 __DIVB21U1:
0009c5 0faa      	LSL  R26
0009c6 1c00      	ROL  R0
0009c7 1a0e      	SUB  R0,R30
0009c8 f410      	BRCC __DIVB21U2
0009c9 0e0e      	ADD  R0,R30
0009ca c001      	RJMP __DIVB21U3
                 __DIVB21U2:
0009cb 60a1      	SBR  R26,1
                 __DIVB21U3:
0009cc 959a      	DEC  R25
0009cd f7b9      	BRNE __DIVB21U1
0009ce 2fea      	MOV  R30,R26
0009cf 2da0      	MOV  R26,R0
0009d0 9508      	RET
                 
                 __DIVB21:
0009d1 d039      	RCALL __CHKSIGNB
0009d2 dff0      	RCALL __DIVB21U
0009d3 f40e      	BRTC __DIVB211
0009d4 95e1      	NEG  R30
                 __DIVB211:
0009d5 9508      	RET
                 
                 __DIVD21U:
0009d6 933f      	PUSH R19
0009d7 934f      	PUSH R20
0009d8 935f      	PUSH R21
0009d9 2400      	CLR  R0
0009da 2411      	CLR  R1
0009db 2744      	CLR  R20
0009dc 2755      	CLR  R21
0009dd e230      	LDI  R19,32
                 __DIVD21U1:
0009de 0faa      	LSL  R26
0009df 1fbb      	ROL  R27
0009e0 1f88      	ROL  R24
0009e1 1f99      	ROL  R25
0009e2 1c00      	ROL  R0
0009e3 1c11      	ROL  R1
0009e4 1f44      	ROL  R20
0009e5 1f55      	ROL  R21
0009e6 1a0e      	SUB  R0,R30
0009e7 0a1f      	SBC  R1,R31
0009e8 0b46      	SBC  R20,R22
0009e9 0b57      	SBC  R21,R23
0009ea f428      	BRCC __DIVD21U2
0009eb 0e0e      	ADD  R0,R30
0009ec 1e1f      	ADC  R1,R31
0009ed 1f46      	ADC  R20,R22
0009ee 1f57      	ADC  R21,R23
0009ef c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0009f0 60a1      	SBR  R26,1
                 __DIVD21U3:
0009f1 953a      	DEC  R19
0009f2 f759      	BRNE __DIVD21U1
0009f3 01fd      	MOVW R30,R26
0009f4 01bc      	MOVW R22,R24
0009f5 01d0      	MOVW R26,R0
0009f6 01ca      	MOVW R24,R20
0009f7 915f      	POP  R21
0009f8 914f      	POP  R20
0009f9 913f      	POP  R19
0009fa 9508      	RET
                 
                 __MODB21:
0009fb 94e8      	CLT
0009fc ffa7      	SBRS R26,7
0009fd c002      	RJMP __MODB211
0009fe 95a1      	NEG  R26
0009ff 9468      	SET
                 __MODB211:
000a00 fde7      	SBRC R30,7
000a01 95e1      	NEG  R30
000a02 dfc0      	RCALL __DIVB21U
000a03 2fea      	MOV  R30,R26
000a04 f40e      	BRTC __MODB212
000a05 95e1      	NEG  R30
                 __MODB212:
000a06 9508      	RET
                 
                 __MODD21U:
000a07 dfce      	RCALL __DIVD21U
000a08 01fd      	MOVW R30,R26
000a09 01bc      	MOVW R22,R24
000a0a 9508      	RET
                 
                 __CHKSIGNB:
000a0b 94e8      	CLT
000a0c ffe7      	SBRS R30,7
000a0d c002      	RJMP __CHKSB1
000a0e 95e1      	NEG  R30
000a0f 9468      	SET
                 __CHKSB1:
000a10 ffa7      	SBRS R26,7
000a11 c004      	RJMP __CHKSB2
000a12 95a1      	NEG  R26
000a13 f800      	BLD  R0,0
000a14 9403      	INC  R0
000a15 fa00      	BST  R0,0
                 __CHKSB2:
000a16 9508      	RET
                 
                 __GETW1P:
000a17 91ed      	LD   R30,X+
000a18 91fc      	LD   R31,X
000a19 9711      	SBIW R26,1
000a1a 9508      	RET
                 
                 __GETD1P:
000a1b 91ed      	LD   R30,X+
000a1c 91fd      	LD   R31,X+
000a1d 916d      	LD   R22,X+
000a1e 917c      	LD   R23,X
000a1f 9713      	SBIW R26,3
000a20 9508      	RET
                 
                 __PUTDP1:
000a21 93ed      	ST   X+,R30
000a22 93fd      	ST   X+,R31
000a23 936d      	ST   X+,R22
000a24 937c      	ST   X,R23
000a25 9508      	RET
                 
                 __GETD1S0:
000a26 81e8      	LD   R30,Y
000a27 81f9      	LDD  R31,Y+1
000a28 816a      	LDD  R22,Y+2
000a29 817b      	LDD  R23,Y+3
000a2a 9508      	RET
                 
                 __GETD2S0:
000a2b 81a8      	LD   R26,Y
000a2c 81b9      	LDD  R27,Y+1
000a2d 818a      	LDD  R24,Y+2
000a2e 819b      	LDD  R25,Y+3
000a2f 9508      	RET
                 
                 __PUTD1S0:
000a30 83e8      	ST   Y,R30
000a31 83f9      	STD  Y+1,R31
000a32 836a      	STD  Y+2,R22
000a33 837b      	STD  Y+3,R23
000a34 9508      	RET
                 
                 __PUTPARD1:
000a35 937a      	ST   -Y,R23
000a36 936a      	ST   -Y,R22
000a37 93fa      	ST   -Y,R31
000a38 93ea      	ST   -Y,R30
000a39 9508      	RET
                 
                 __PUTPARD2:
000a3a 939a      	ST   -Y,R25
000a3b 938a      	ST   -Y,R24
000a3c 93ba      	ST   -Y,R27
000a3d 93aa      	ST   -Y,R26
000a3e 9508      	RET
                 
                 __SWAPD12:
000a3f 2e18      	MOV  R1,R24
000a40 2f86      	MOV  R24,R22
000a41 2d61      	MOV  R22,R1
000a42 2e19      	MOV  R1,R25
000a43 2f97      	MOV  R25,R23
000a44 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000a45 2e1b      	MOV  R1,R27
000a46 2fbf      	MOV  R27,R31
000a47 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000a48 2e1a      	MOV  R1,R26
000a49 2fae      	MOV  R26,R30
000a4a 2de1      	MOV  R30,R1
000a4b 9508      	RET
                 
                 __CPD10:
000a4c 9730      	SBIW R30,0
000a4d 4060      	SBCI R22,0
000a4e 4070      	SBCI R23,0
000a4f 9508      	RET
                 
                 __SAVELOCR6:
000a50 935a      	ST   -Y,R21
                 __SAVELOCR5:
000a51 934a      	ST   -Y,R20
                 __SAVELOCR4:
000a52 933a      	ST   -Y,R19
                 __SAVELOCR3:
000a53 932a      	ST   -Y,R18
                 __SAVELOCR2:
000a54 931a      	ST   -Y,R17
000a55 930a      	ST   -Y,R16
000a56 9508      	RET
                 
                 __LOADLOCR6:
000a57 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000a58 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000a59 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000a5a 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000a5b 8119      	LDD  R17,Y+1
000a5c 8108      	LD   R16,Y
000a5d 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  60 r1 :  34 r2 :   0 r3 :   0 r4 :   4 r5 :   2 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   4 r11:   4 r12:   0 r13:   2 r14:   0 r15:   4 
r16:  50 r17:  60 r18:  48 r19:  35 r20:  50 r21:  90 r22: 124 r23: 109 
r24:  80 r25:  65 r26: 221 r27: 103 r28:  32 r29:   1 r30: 413 r31: 165 
x  :  44 y  : 376 z  :  24 
Registers used: 27 out of 35 (77.1%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  21 add   :  14 
adiw  :  34 and   :   5 andi  :   7 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  47 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  27 
brlt  :   2 brmi  :  11 brne  :  61 brpl  :   9 brsh  :  10 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 234 
cbi   :   5 cbr   :   2 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  51 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  15 cpc   :  19 cpi   :  81 cpse  :   0 dec   :  15 des   :   0 
elpm  :   0 eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 
ijmp  :   0 in    :   4 inc   :   5 jmp   :  37 ld    :  55 ldd   : 191 
ldi   : 257 lds   :  28 lpm   :  12 lsl   :  14 lsr   :   3 mov   :  82 
movw  :  53 mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 
or    :   1 ori   :  10 out   :  24 pop   :  22 push  :  22 rcall :  43 
ret   :  98 reti  :   0 rjmp  : 141 rol   :  32 ror   :  15 sbc   :  11 
sbci  :  20 sbi   :   7 sbic  :   0 sbis  :   1 sbiw  :  29 sbr   :   4 
sbrc  :   4 sbrs  :  20 sec   :   5 seh   :   0 sei   :   0 sen   :   0 
ser   :   8 ses   :   0 set   :   4 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 101 std   :  86 sts   :  19 sub   :   6 subi  :  48 
swap  :   1 tst   :  24 wdr   :   1 
Instructions used: 80 out of 117 (68.4%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0014bc   5228     80   5308  131072   4.0%
[.dseg] 0x000100 0x00052c      0     44     44    4096   1.1%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 9 warnings
