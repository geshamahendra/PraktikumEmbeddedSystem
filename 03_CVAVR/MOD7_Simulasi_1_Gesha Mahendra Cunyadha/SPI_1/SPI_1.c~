/*******************************************************
This program was created by the
CodeWizardAVR V3.12 Advanced
Automatic Program Generator
© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
http://www.hpinfotech.com

Project : 
Version : 
Date    : 11/16/2021
Author  : 
Company : 
Comments: 


Chip type               : ATmega128
Program type            : Application
AVR Core Clock frequency: 10.000000 MHz
Memory model            : Small
External RAM size       : 0
Data Stack size         : 1024
*******************************************************/
#include <mega128.h>
#include <stdio.h>
#include <delay.h>

// Alphanumeric LCD functions
#include <alcd.h>

// SPI functions
#include <spi.h>

// Declare your global variables here
#define CS_bar PORTB.0
#define MCP3204_Command 0B00000100

unsigned char no_channel;
unsigned int data;
float Temperatur;
char text[16];

unsigned int read_adcMCP3204(unsigned char no_sensor)
{
    unsigned int temp1, temp2;
    CS_bar= 1;
    CS_bar= 0;
    temp1= spi(MCP3204_Command);
    no_sensor= no_sensor<<6;
    temp1=spi(no_sensor);
    temp1= temp1 & 0x000F;
    temp1= temp1<<8;
    temp2= spi(0);
    temp2= temp2 & 0x00FF;
    temp1= temp1 + temp2;
    CS_bar= 1;
    return(temp1);
}

void main(void)
{
// Declare your local variables here

// Input/Output Ports initialization

// Port B initialization
// Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=Out Bit1=Out Bit0=Out 
DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
// State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=0 Bit1=0 Bit0=0 
PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);

// Port C initialization
// Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out 
DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
// State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0 
PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);

// SPI initialization
// SPI Type: Master
// SPI Clock Rate: 156.250 kHz
// SPI Clock Phase: Cycle Start
// SPI Clock Polarity: Low
// SPI Data Order: MSB First
SPCR=(0<<SPIE) | (1<<SPE) | (0<<DORD) | (1<<MSTR) | (0<<CPOL) | (0<<CPHA) | (1<<SPR1) | (0<<SPR0);
SPSR=(0<<SPI2X);

// Alphanumeric LCD initialization
// Connections are specified in the
// Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
// RS - PORTC Bit 0
// RD - PORTC Bit 2
// EN - PORTC Bit 1
// D4 - PORTC Bit 4
// D5 - PORTC Bit 5
// D6 - PORTC Bit 6
// D7 - PORTC Bit 7
// Characters/line: 16
lcd_init(16);
lcd_gotoxy(0,0);
lcd_puts("Read ADCMP3204");
while (1)
      {
      // Place your code here 
      no_channel = 0;
      data= read_adcMCP3204(no_channel);
      lcd_clear();
      lcd_gotoxy(0,0);
      lcd_puts("Read ADCMP3204");
      Temperatur = (float)data/4096*500-55;
      sprintf(text,"Suhu = %5.3f C",Temperatur);
      lcd_gotoxy(0,1);
      lcd_puts(text);
      delay_ms(100);

      }
}
