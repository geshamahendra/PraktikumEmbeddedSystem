
AVRASM ver. 2.1.30  D:\gesha\OneDrive - UNIVERSITAS INDONESIA\Kuliah\Semester 5\Sistem Tertanam\03_CVAVR\MOD5_Simulasi_1_Gesha Mahendra Cunyadha\MOD5_2\Debug\List\MOD5_2.asm Tue Nov 02 20:57:32 2021

D:\gesha\OneDrive - UNIVERSITAS INDONESIA\Kuliah\Semester 5\Sistem Tertanam\03_CVAVR\MOD5_Simulasi_1_Gesha Mahendra Cunyadha\MOD5_2\Debug\List\MOD5_2.asm(1090): warning: Register r4 already defined by the .DEF directive
D:\gesha\OneDrive - UNIVERSITAS INDONESIA\Kuliah\Semester 5\Sistem Tertanam\03_CVAVR\MOD5_Simulasi_1_Gesha Mahendra Cunyadha\MOD5_2\Debug\List\MOD5_2.asm(1091): warning: Register r5 already defined by the .DEF directive
D:\gesha\OneDrive - UNIVERSITAS INDONESIA\Kuliah\Semester 5\Sistem Tertanam\03_CVAVR\MOD5_Simulasi_1_Gesha Mahendra Cunyadha\MOD5_2\Debug\List\MOD5_2.asm(1092): warning: Register r6 already defined by the .DEF directive
D:\gesha\OneDrive - UNIVERSITAS INDONESIA\Kuliah\Semester 5\Sistem Tertanam\03_CVAVR\MOD5_Simulasi_1_Gesha Mahendra Cunyadha\MOD5_2\Debug\List\MOD5_2.asm(1093): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 10.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _pilihan1=R4
                 	.DEF _pilihan1_msb=R5
                 	.DEF _pilihan2=R6
                 	.DEF _pilihan2_msb=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0121 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
000046 2710
000047 03e8
000048 0064
000049 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00004a 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00004b 1000
00004c 0100
00004d 0010
00004e 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00004f 5420
000050 6b65
000051 6e61
000052 3120      	.DB  0x20,0x54,0x65,0x6B,0x61,0x6E,0x20,0x31
000053 7520
000054 746e
000055 6b75
000056 6d20      	.DB  0x20,0x75,0x6E,0x74,0x75,0x6B,0x20,0x6D
000057 6e65
000058 6179
000059 616c
00005a 616b      	.DB  0x65,0x6E,0x79,0x61,0x6C,0x61,0x6B,0x61
00005b 206e
00005c 454c
00005d 3044
00005e 0d20      	.DB  0x6E,0x20,0x4C,0x45,0x44,0x30,0x20,0xD
00005f 5420
000060 6b65
000061 6e61
000062 3220      	.DB  0x20,0x54,0x65,0x6B,0x61,0x6E,0x20,0x32
000063 7520
000064 746e
000065 6b75
000066 6d20      	.DB  0x20,0x75,0x6E,0x74,0x75,0x6B,0x20,0x6D
000067 6e65
000068 6179
000069 616c
00006a 616b      	.DB  0x65,0x6E,0x79,0x61,0x6C,0x61,0x6B,0x61
00006b 206e
00006c 454c
00006d 3144
00006e 0d20      	.DB  0x6E,0x20,0x4C,0x45,0x44,0x31,0x20,0xD
00006f 5420
000070 6b65
000071 6e61
000072 3320      	.DB  0x20,0x54,0x65,0x6B,0x61,0x6E,0x20,0x33
000073 7520
000074 746e
000075 6b75
000076 6d20      	.DB  0x20,0x75,0x6E,0x74,0x75,0x6B,0x20,0x6D
000077 6e65
000078 6179
000079 616c
00007a 616b      	.DB  0x65,0x6E,0x79,0x61,0x6C,0x61,0x6B,0x61
00007b 206e
00007c 454c
00007d 3344
00007e 0d20      	.DB  0x6E,0x20,0x4C,0x45,0x44,0x33,0x20,0xD
00007f 5420
000080 6b65
000081 6e61
000082 3420      	.DB  0x20,0x54,0x65,0x6B,0x61,0x6E,0x20,0x34
000083 7520
000084 746e
000085 6b75
000086 6d20      	.DB  0x20,0x75,0x6E,0x74,0x75,0x6B,0x20,0x6D
000087 6d65
000088 6c69
000089 6869
00008a 6d20      	.DB  0x65,0x6D,0x69,0x6C,0x69,0x68,0x20,0x6D
00008b 646f
00008c 2065
00008d 7274
00008e 6e61      	.DB  0x6F,0x64,0x65,0x20,0x74,0x72,0x61,0x6E
00008f 6973
000090 6973
000091 4c20
000092 4445      	.DB  0x73,0x69,0x73,0x69,0x20,0x4C,0x45,0x44
000093 0d20
000094 4d20
000095 7361
000096 6b75      	.DB  0x20,0xD,0x20,0x4D,0x61,0x73,0x75,0x6B
000097 616b
000098 206e
000099 6970
00009a 696c      	.DB  0x6B,0x61,0x6E,0x20,0x70,0x69,0x6C,0x69
00009b 6168
00009c 206e
00009d 454c
00009e 3a44      	.DB  0x68,0x61,0x6E,0x20,0x4C,0x45,0x44,0x3A
00009f 0d20
0000a0 2500
0000a1 0064
0000a2 4c20      	.DB  0x20,0xD,0x0,0x25,0x64,0x0,0x20,0x4C
0000a3 4445
0000a4 3020
0000a5 6e20
0000a6 6179      	.DB  0x45,0x44,0x20,0x30,0x20,0x6E,0x79,0x61
0000a7 616c
0000a8 0d20
0000a9 2000
0000aa 454c      	.DB  0x6C,0x61,0x20,0xD,0x0,0x20,0x4C,0x45
0000ab 2044
0000ac 2031
0000ad 796e
0000ae 6c61      	.DB  0x44,0x20,0x31,0x20,0x6E,0x79,0x61,0x6C
0000af 2061
0000b0 000d
0000b1 4c20
0000b2 4445      	.DB  0x61,0x20,0xD,0x0,0x20,0x4C,0x45,0x44
0000b3 3220
0000b4 6e20
0000b5 6179
0000b6 616c      	.DB  0x20,0x32,0x20,0x6E,0x79,0x61,0x6C,0x61
0000b7 0d20
0000b8 2000
0000b9 6554
0000ba 616b      	.DB  0x20,0xD,0x0,0x20,0x54,0x65,0x6B,0x61
0000bb 206e
0000bc 2031
0000bd 6e75
0000be 7574      	.DB  0x6E,0x20,0x31,0x20,0x75,0x6E,0x74,0x75
0000bf 206b
0000c0 7274
0000c1 6e61
0000c2 6973      	.DB  0x6B,0x20,0x74,0x72,0x61,0x6E,0x73,0x69
0000c3 6973
0000c4 4c20
0000c5 4445
0000c6 6420      	.DB  0x73,0x69,0x20,0x4C,0x45,0x44,0x20,0x64
0000c7 7261
0000c8 2069
0000c9 2030
0000ca 656b      	.DB  0x61,0x72,0x69,0x20,0x30,0x20,0x6B,0x65
0000cb 3720
0000cc 0d20
0000cd 2000
0000ce 6554      	.DB  0x20,0x37,0x20,0xD,0x0,0x20,0x54,0x65
0000cf 616b
0000d0 206e
0000d1 2032
0000d2 6e75      	.DB  0x6B,0x61,0x6E,0x20,0x32,0x20,0x75,0x6E
0000d3 7574
0000d4 206b
0000d5 7274
0000d6 6e61      	.DB  0x74,0x75,0x6B,0x20,0x74,0x72,0x61,0x6E
0000d7 6973
0000d8 6973
0000d9 4c20
0000da 4445      	.DB  0x73,0x69,0x73,0x69,0x20,0x4C,0x45,0x44
0000db 6420
0000dc 7261
0000dd 2069
0000de 2037      	.DB  0x20,0x64,0x61,0x72,0x69,0x20,0x37,0x20
0000df 656b
0000e0 3020
0000e1 0d20
0000e2 2000      	.DB  0x6B,0x65,0x20,0x30,0x20,0xD,0x0,0x20
0000e3 7254
0000e4 6e61
0000e5 6973
0000e6 6973      	.DB  0x54,0x72,0x61,0x6E,0x73,0x69,0x73,0x69
0000e7 4c20
0000e8 4445
0000e9 6420
0000ea 7261      	.DB  0x20,0x4C,0x45,0x44,0x20,0x64,0x61,0x72
0000eb 2069
0000ec 2030
0000ed 656b
0000ee 3720      	.DB  0x69,0x20,0x30,0x20,0x6B,0x65,0x20,0x37
0000ef 000d
0000f0 5420
0000f1 6172
0000f2 736e      	.DB  0xD,0x0,0x20,0x54,0x72,0x61,0x6E,0x73
0000f3 7369
0000f4 2069
0000f5 454c
0000f6 2044      	.DB  0x69,0x73,0x69,0x20,0x4C,0x45,0x44,0x20
0000f7 6164
0000f8 6972
0000f9 3720
0000fa 6b20      	.DB  0x64,0x61,0x72,0x69,0x20,0x37,0x20,0x6B
0000fb 2065
0000fc 0d30
0000fd 2000
0000fe 6147      	.DB  0x65,0x20,0x30,0xD,0x0,0x20,0x47,0x61
0000ff 616c
000100 2074
000101 6570
000102 6172      	.DB  0x6C,0x61,0x74,0x20,0x70,0x65,0x72,0x61
000103 676e
000104 616b
000105 2c74
000106 6920      	.DB  0x6E,0x67,0x6B,0x61,0x74,0x2C,0x20,0x69
000107 706e
000108 7475
000109 7920
00010a 6e61      	.DB  0x6E,0x70,0x75,0x74,0x20,0x79,0x61,0x6E
00010b 2067
00010c 6e61
00010d 6164
00010e 6d20      	.DB  0x67,0x20,0x61,0x6E,0x64,0x61,0x20,0x6D
00010f 7361
000110 6b75
000111 616b
000112 206e      	.DB  0x61,0x73,0x75,0x6B,0x6B,0x61,0x6E,0x20
000113 6173
000114 616c
000115 2068
000116 000d      	.DB  0x73,0x61,0x6C,0x61,0x68,0x20,0xD,0x0
                 _0x2040060:
D:\gesha\OneDrive - UNIVERSITAS INDONESIA\Kuliah\Semester 5\Sistem Tertanam\03_CVAVR\MOD5_Simulasi_1_Gesha Mahendra Cunyadha\MOD5_2\Debug\List\MOD5_2.asm(1196): warning: .cseg .db misalignment - padding zero byte
000117 0001      	.DB  0x1
                 _0x2040000:
000118 4e2d
000119 4e41
00011a 4900
00011b 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\gesha\OneDrive - UNIVERSITAS INDONESIA\Kuliah\Semester 5\Sistem Tertanam\03_CVAVR\MOD5_Simulasi_1_Gesha Mahendra Cunyadha\MOD5_2\Debug\List\MOD5_2.asm(1199): warning: .cseg .db misalignment - padding zero byte
00011c 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00011d 0001      	.DW  0x01
00011e 0500      	.DW  __seed_G102
00011f 022e      	.DW  _0x2040060*2
                 
                 _0xFFFFFFFF:
000120 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000121 94f8      	CLI
000122 27ee      	CLR  R30
000123 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000124 e0f1      	LDI  R31,1
000125 bff5      	OUT  MCUCR,R31
000126 bfe5      	OUT  MCUCR,R30
000127 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000129 e08d      	LDI  R24,(14-2)+1
00012a e0a2      	LDI  R26,2
00012b 27bb      	CLR  R27
                 __CLEAR_REG:
00012c 93ed      	ST   X+,R30
00012d 958a      	DEC  R24
00012e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00012f e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000130 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000131 e0a0      	LDI  R26,LOW(__SRAM_START)
000132 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000133 93ed      	ST   X+,R30
000134 9701      	SBIW R24,1
000135 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000136 e3ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000137 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000138 9185      	LPM  R24,Z+
000139 9195      	LPM  R25,Z+
00013a 9700      	SBIW R24,0
00013b f061      	BREQ __GLOBAL_INI_END
00013c 91a5      	LPM  R26,Z+
00013d 91b5      	LPM  R27,Z+
00013e 9005      	LPM  R0,Z+
00013f 9015      	LPM  R1,Z+
000140 01bf      	MOVW R22,R30
000141 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000142 9005      	LPM  R0,Z+
000143 920d      	ST   X+,R0
000144 9701      	SBIW R24,1
000145 f7e1      	BRNE __GLOBAL_INI_LOOP
000146 01fb      	MOVW R30,R22
000147 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000148 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000149 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00014a bfed      	OUT  SPL,R30
00014b e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00014c bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00014d e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00014e e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00014f 940c 0151 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*******************************************************
                 ;This program was created by the
                 ;CodeWizardAVR V3.12 Advanced
                 ;Automatic Program Generator
                 ;� Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 ;
                 ;Project :
                 ;Version :
                 ;Date    : 11/2/2021
                 ;Author  :
                 ;Company :
                 ;Comments:
                 ;
                 ;
                 ;Chip type               : ATmega128
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 10.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 1024
                 ;*******************************************************/
                 ;
                 ;#include <mega128.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;// Declare your global variables here
                 ;int pilihan1, pilihan2;
                 ;
                 ;// Standard Input/Output functions
                 ;#include <stdio.h>
                 ;
                 ;void main(void)
                 ; 0000 0023 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0024 // Declare your local variables here
                 ; 0000 0025 
                 ; 0000 0026 // Input/Output Ports initialization
                 ; 0000 0027 // Port B initialization
                 ; 0000 0028 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 0029 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
000151 efef      	LDI  R30,LOW(255)
000152 bbe7      	OUT  0x17,R30
                 ; 0000 002A // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 002B PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000153 e0e0      	LDI  R30,LOW(0)
000154 bbe8      	OUT  0x18,R30
                 ; 0000 002C 
                 ; 0000 002D // USART0 initialization
                 ; 0000 002E // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 002F // USART0 Receiver: On
                 ; 0000 0030 // USART0 Transmitter: On
                 ; 0000 0031 // USART0 Mode: Asynchronous
                 ; 0000 0032 // USART0 Baud Rate: 9600
                 ; 0000 0033 UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
000155 b9eb      	OUT  0xB,R30
                 ; 0000 0034 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
000156 e1e8      	LDI  R30,LOW(24)
000157 b9ea      	OUT  0xA,R30
                 ; 0000 0035 UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
000158 e0e6      	LDI  R30,LOW(6)
000159 93e0 0095 	STS  149,R30
                 ; 0000 0036 UBRR0H=0x00;
00015b e0e0      	LDI  R30,LOW(0)
00015c 93e0 0090 	STS  144,R30
                 ; 0000 0037 UBRR0L=0x40;
00015e e4e0      	LDI  R30,LOW(64)
00015f b9e9      	OUT  0x9,R30
                 ; 0000 0038 
                 ; 0000 0039 // USART1 initialization
                 ; 0000 003A // USART1 disabled
                 ; 0000 003B UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
000160 e0e0      	LDI  R30,LOW(0)
000161 93e0 009a 	STS  154,R30
                 ; 0000 003C 
                 ; 0000 003D // Analog Comparator initialization
                 ; 0000 003E // Analog Comparator: Off
                 ; 0000 003F // The Analog Comparator's positive input is
                 ; 0000 0040 // connected to the AIN0 pin
                 ; 0000 0041 // The Analog Comparator's negative input is
                 ; 0000 0042 // connected to the AIN1 pin
                 ; 0000 0043 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
000163 e8e0      	LDI  R30,LOW(128)
000164 b9e8      	OUT  0x8,R30
                 ; 0000 0044 SFIOR=(0<<ACME);
000165 e0e0      	LDI  R30,LOW(0)
000166 bde0      	OUT  0x20,R30
                 ; 0000 0045 
                 ; 0000 0046 while (1)
                 _0x3:
                 ; 0000 0047       {
                 ; 0000 0048       PORTB = 0b00000000;
000167 e0e0      	LDI  R30,LOW(0)
000168 bbe8      	OUT  0x18,R30
                 ; 0000 0049       printf(" Tekan 1 untuk menyalakan LED0 \r Tekan 2 untuk menyalakan LED1 \r Tekan 3 untuk menyalakan LED3 \r Tekan  ...
                +
000169 e9ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00016a e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00016b 940e 052c 	CALL SUBOPT_0x0
                 ; 0000 004A       scanf("%d", &pilihan1);
                +
00016d e4e1     +LDI R30 , LOW ( 2 * _0x0 + ( 163 ) )
00016e e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 163 ) )
                 	__POINTW1FN _0x0,163
00016f 93fa      	ST   -Y,R31
000170 93ea      	ST   -Y,R30
                +
000171 e0e4     +LDI R30 , LOW ( 0x4 )
000172 e0f0     +LDI R31 , HIGH ( 0x4 )
000173 e060     +LDI R22 , BYTE3 ( 0x4 )
000174 e070     +LDI R23 , BYTE4 ( 0x4 )
                 	__GETD1N 0x4
000175 940e 0533 	CALL SUBOPT_0x1
                 ; 0000 004B       delay_ms(500);
000177 940e 053a 	CALL SUBOPT_0x2
                 ; 0000 004C       if (pilihan1 == 1){
000179 e0e1      	LDI  R30,LOW(1)
00017a e0f0      	LDI  R31,HIGH(1)
00017b 15e4      	CP   R30,R4
00017c 05f5      	CPC  R31,R5
00017d f421      	BRNE _0x6
                 ; 0000 004D         PORTB = 0b00000001;
00017e bbe8      	OUT  0x18,R30
                 ; 0000 004E         printf(" LED 0 nyala \r");
                +
00017f e4e4     +LDI R30 , LOW ( 2 * _0x0 + ( 166 ) )
000180 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 166 ) )
                 	__POINTW1FN _0x0,166
000181 c080      	RJMP _0x13
                 ; 0000 004F         delay_ms(500);}
                 ; 0000 0050       else if (pilihan1 == 2){
                 _0x6:
000182 e0e2      	LDI  R30,LOW(2)
000183 e0f0      	LDI  R31,HIGH(2)
000184 15e4      	CP   R30,R4
000185 05f5      	CPC  R31,R5
000186 f421      	BRNE _0x8
                 ; 0000 0051         PORTB = 0b00000010;
000187 bbe8      	OUT  0x18,R30
                 ; 0000 0052         printf(" LED 1 nyala \r");
                +
000188 e5e3     +LDI R30 , LOW ( 2 * _0x0 + ( 181 ) )
000189 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 181 ) )
                 	__POINTW1FN _0x0,181
00018a c077      	RJMP _0x13
                 ; 0000 0053         delay_ms(500);}
                 ; 0000 0054       else if (pilihan1 == 3){
                 _0x8:
00018b e0e3      	LDI  R30,LOW(3)
00018c e0f0      	LDI  R31,HIGH(3)
00018d 15e4      	CP   R30,R4
00018e 05f5      	CPC  R31,R5
00018f f429      	BRNE _0xA
                 ; 0000 0055         PORTB = 0b00000100;
000190 e0e4      	LDI  R30,LOW(4)
000191 bbe8      	OUT  0x18,R30
                 ; 0000 0056         printf(" LED 2 nyala \r");
                +
000192 e6e2     +LDI R30 , LOW ( 2 * _0x0 + ( 196 ) )
000193 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 196 ) )
                 	__POINTW1FN _0x0,196
000194 c06d      	RJMP _0x13
                 ; 0000 0057         delay_ms(500);}
                 ; 0000 0058       else if (pilihan1 == 4){
                 _0xA:
000195 e0e4      	LDI  R30,LOW(4)
000196 e0f0      	LDI  R31,HIGH(4)
000197 15e4      	CP   R30,R4
000198 05f5      	CPC  R31,R5
000199 f009      	BREQ PC+2
00019a c065      	RJMP _0xC
                 ; 0000 0059         printf(" Tekan 1 untuk transisi LED dari 0 ke 7 \r");
                +
00019b e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 211 ) )
00019c e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 211 ) )
                 	__POINTW1FN _0x0,211
00019d 940e 052c 	CALL SUBOPT_0x0
                 ; 0000 005A         delay_ms(500);
00019f 940e 053a 	CALL SUBOPT_0x2
                 ; 0000 005B         printf(" Tekan 2 untuk transisi LED dari 7 ke 0 \r");
                +
0001a1 e9eb     +LDI R30 , LOW ( 2 * _0x0 + ( 253 ) )
0001a2 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 253 ) )
                 	__POINTW1FN _0x0,253
0001a3 940e 052c 	CALL SUBOPT_0x0
                 ; 0000 005C         delay_ms(500);
0001a5 940e 053a 	CALL SUBOPT_0x2
                 ; 0000 005D         scanf("%d", &pilihan2);
                +
0001a7 e4e1     +LDI R30 , LOW ( 2 * _0x0 + ( 163 ) )
0001a8 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 163 ) )
                 	__POINTW1FN _0x0,163
0001a9 93fa      	ST   -Y,R31
0001aa 93ea      	ST   -Y,R30
                +
0001ab e0e6     +LDI R30 , LOW ( 0x6 )
0001ac e0f0     +LDI R31 , HIGH ( 0x6 )
0001ad e060     +LDI R22 , BYTE3 ( 0x6 )
0001ae e070     +LDI R23 , BYTE4 ( 0x6 )
                 	__GETD1N 0x6
0001af 940e 0533 	CALL SUBOPT_0x1
                 ; 0000 005E         if (pilihan2 == 1){
0001b1 e0e1      	LDI  R30,LOW(1)
0001b2 e0f0      	LDI  R31,HIGH(1)
0001b3 15e6      	CP   R30,R6
0001b4 05f7      	CPC  R31,R7
0001b5 f4f1      	BRNE _0xD
                 ; 0000 005F             printf(" Transisi LED dari 0 ke 7\r");
                +
0001b6 ece5     +LDI R30 , LOW ( 2 * _0x0 + ( 295 ) )
0001b7 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 295 ) )
                 	__POINTW1FN _0x0,295
0001b8 940e 052c 	CALL SUBOPT_0x0
                 ; 0000 0060             PORTB = 0b00000001;
0001ba e0e1      	LDI  R30,LOW(1)
0001bb 940e 053e 	CALL SUBOPT_0x3
                 ; 0000 0061             delay_ms(100);
                 ; 0000 0062             PORTB = 0b00000010;
0001bd e0e2      	LDI  R30,LOW(2)
0001be 940e 053e 	CALL SUBOPT_0x3
                 ; 0000 0063             delay_ms(100);
                 ; 0000 0064             PORTB = 0b00000100;
0001c0 e0e4      	LDI  R30,LOW(4)
0001c1 940e 053e 	CALL SUBOPT_0x3
                 ; 0000 0065             delay_ms(100);
                 ; 0000 0066             PORTB = 0b00001000;
0001c3 e0e8      	LDI  R30,LOW(8)
0001c4 940e 053e 	CALL SUBOPT_0x3
                 ; 0000 0067             delay_ms(100);
                 ; 0000 0068             PORTB = 0b00010000;
0001c6 e1e0      	LDI  R30,LOW(16)
0001c7 940e 053e 	CALL SUBOPT_0x3
                 ; 0000 0069             delay_ms(100);
                 ; 0000 006A             PORTB = 0b00100000;
0001c9 e2e0      	LDI  R30,LOW(32)
0001ca 940e 053e 	CALL SUBOPT_0x3
                 ; 0000 006B             delay_ms(100);
                 ; 0000 006C             PORTB = 0b01000000;
0001cc e4e0      	LDI  R30,LOW(64)
0001cd 940e 053e 	CALL SUBOPT_0x3
                 ; 0000 006D             delay_ms(100);
                 ; 0000 006E             PORTB = 0b10000000;
0001cf e8e0      	LDI  R30,LOW(128)
0001d0 bbe8      	OUT  0x18,R30
                 ; 0000 006F             delay_ms(100);}
0001d1 e6a4      	LDI  R26,LOW(100)
0001d2 e0b0      	LDI  R27,0
0001d3 c029      	RJMP _0x14
                 ; 0000 0070         else if (pilihan2 == 2){
                 _0xD:
0001d4 e0e2      	LDI  R30,LOW(2)
0001d5 e0f0      	LDI  R31,HIGH(2)
0001d6 15e6      	CP   R30,R6
0001d7 05f7      	CPC  R31,R7
0001d8 f4f1      	BRNE _0xF
                 ; 0000 0071             printf(" Transisi LED dari 7 ke 0\r");
                +
0001d9 eee0     +LDI R30 , LOW ( 2 * _0x0 + ( 322 ) )
0001da e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 322 ) )
                 	__POINTW1FN _0x0,322
0001db 940e 052c 	CALL SUBOPT_0x0
                 ; 0000 0072             PORTB = 0b10000000;
0001dd e8e0      	LDI  R30,LOW(128)
0001de 940e 053e 	CALL SUBOPT_0x3
                 ; 0000 0073             delay_ms(100);
                 ; 0000 0074             PORTB = 0b01000000;
0001e0 e4e0      	LDI  R30,LOW(64)
0001e1 940e 053e 	CALL SUBOPT_0x3
                 ; 0000 0075             delay_ms(100);
                 ; 0000 0076             PORTB = 0b00100000;
0001e3 e2e0      	LDI  R30,LOW(32)
0001e4 940e 053e 	CALL SUBOPT_0x3
                 ; 0000 0077             delay_ms(100);
                 ; 0000 0078             PORTB = 0b00010000;
0001e6 e1e0      	LDI  R30,LOW(16)
0001e7 940e 053e 	CALL SUBOPT_0x3
                 ; 0000 0079             delay_ms(100);
                 ; 0000 007A             PORTB = 0b00001000;
0001e9 e0e8      	LDI  R30,LOW(8)
0001ea 940e 053e 	CALL SUBOPT_0x3
                 ; 0000 007B             delay_ms(100);
                 ; 0000 007C             PORTB = 0b00000100;
0001ec e0e4      	LDI  R30,LOW(4)
0001ed 940e 053e 	CALL SUBOPT_0x3
                 ; 0000 007D             delay_ms(100);
                 ; 0000 007E             PORTB = 0b00000010;
0001ef e0e2      	LDI  R30,LOW(2)
0001f0 940e 053e 	CALL SUBOPT_0x3
                 ; 0000 007F             delay_ms(100);
                 ; 0000 0080             PORTB = 0b00000001;
0001f2 e0e1      	LDI  R30,LOW(1)
0001f3 bbe8      	OUT  0x18,R30
                 ; 0000 0081             delay_ms(100);}
0001f4 e6a4      	LDI  R26,LOW(100)
0001f5 e0b0      	LDI  R27,0
0001f6 c006      	RJMP _0x14
                 ; 0000 0082         else {
                 _0xF:
                 ; 0000 0083             printf(" Galat perangkat, input yang anda masukkan salah \r");
                +
0001f7 efeb     +LDI R30 , LOW ( 2 * _0x0 + ( 349 ) )
0001f8 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 349 ) )
                 	__POINTW1FN _0x0,349
0001f9 940e 052c 	CALL SUBOPT_0x0
                 ; 0000 0084             delay_ms(500);}
0001fb efa4      	LDI  R26,LOW(500)
0001fc e0b1      	LDI  R27,HIGH(500)
                 _0x14:
0001fd 940e 058c 	CALL _delay_ms
                 ; 0000 0085         }
                 ; 0000 0086       else{
0001ff c00a      	RJMP _0x11
                 _0xC:
                 ; 0000 0087         printf(" Galat perangkat, input yang anda masukkan salah \r");
                +
000200 efeb     +LDI R30 , LOW ( 2 * _0x0 + ( 349 ) )
000201 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 349 ) )
                 	__POINTW1FN _0x0,349
                 _0x13:
000202 93fa      	ST   -Y,R31
000203 93ea      	ST   -Y,R30
000204 e080      	LDI  R24,0
000205 940e 035c 	CALL _printf
000207 9622      	ADIW R28,2
                 ; 0000 0088         delay_ms(500);}
000208 940e 053a 	CALL SUBOPT_0x2
                 _0x11:
                 ; 0000 0089       printf("\r");
                +
00020a e3ef     +LDI R30 , LOW ( 2 * _0x0 + ( 161 ) )
00020b e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 161 ) )
                 	__POINTW1FN _0x0,161
00020c 940e 052c 	CALL SUBOPT_0x0
                 ; 0000 008A       }
00020e cf58      	RJMP _0x3
                 ; 0000 008B }
                 _0x12:
00020f cfff      	RJMP _0x12
                 ; .FEND
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 ; .FSTART _getchar
                 getchar0:
000210 9b5f           sbis usr,rxc
000211 cffe           rjmp getchar0
000212 b1ec           in   r30,udr
000213 9508      	RET
                 ; .FEND
                 _putchar:
                 ; .FSTART _putchar
000214 93aa      	ST   -Y,R26
                 putchar0:
000215 9b5d           sbis usr,udre
000216 cffe           rjmp putchar0
000217 81e8           ld   r30,y
000218 b9ec           out  udr,r30
000219 9621      	ADIW R28,1
00021a 9508      	RET
                 ; .FEND
                 _put_usart_G101:
                 ; .FSTART _put_usart_G101
00021b 93ba      	ST   -Y,R27
00021c 93aa      	ST   -Y,R26
00021d 81aa      	LDD  R26,Y+2
00021e dff5      	RCALL _putchar
00021f 81a8      	LD   R26,Y
000220 81b9      	LDD  R27,Y+1
000221 91ed      	LD   R30,X+
000222 91fd      	LD   R31,X+
000223 9631      	ADIW R30,1
000224 93fe      	ST   -X,R31
000225 93ee      	ST   -X,R30
000226 9623      	ADIW R28,3
000227 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
000228 93ba      	ST   -Y,R27
000229 93aa      	ST   -Y,R26
00022a 9726      	SBIW R28,6
00022b 940e 05b3 	CALL __SAVELOCR6
00022d e010      	LDI  R17,0
00022e 85ac      	LDD  R26,Y+12
00022f 85bd      	LDD  R27,Y+12+1
000230 e0e0      	LDI  R30,LOW(0)
000231 e0f0      	LDI  R31,HIGH(0)
000232 93ed      	ST   X+,R30
000233 93fc      	ST   X,R31
                 _0x2020016:
000234 89ea      	LDD  R30,Y+18
000235 89fb      	LDD  R31,Y+18+1
000236 9631      	ADIW R30,1
000237 8bea      	STD  Y+18,R30
000238 8bfb      	STD  Y+18+1,R31
000239 9731      	SBIW R30,1
00023a 91e4      	LPM  R30,Z
00023b 2f2e      	MOV  R18,R30
00023c 30e0      	CPI  R30,0
00023d f409      	BRNE PC+2
00023e c115      	RJMP _0x2020018
00023f 2fe1      	MOV  R30,R17
000240 30e0      	CPI  R30,0
000241 f439      	BRNE _0x202001C
000242 3225      	CPI  R18,37
000243 f411      	BRNE _0x202001D
000244 e011      	LDI  R17,LOW(1)
000245 c002      	RJMP _0x202001E
                 _0x202001D:
000246 940e 0543 	CALL SUBOPT_0x4
                 _0x202001E:
000248 c10a      	RJMP _0x202001B
                 _0x202001C:
000249 30e1      	CPI  R30,LOW(0x1)
00024a f4a9      	BRNE _0x202001F
00024b 3225      	CPI  R18,37
00024c f419      	BRNE _0x2020020
00024d 940e 0543 	CALL SUBOPT_0x4
00024f c102      	RJMP _0x20200CC
                 _0x2020020:
000250 e012      	LDI  R17,LOW(2)
000251 e040      	LDI  R20,LOW(0)
000252 e000      	LDI  R16,LOW(0)
000253 322d      	CPI  R18,45
000254 f411      	BRNE _0x2020021
000255 e001      	LDI  R16,LOW(1)
000256 c0fc      	RJMP _0x202001B
                 _0x2020021:
000257 322b      	CPI  R18,43
000258 f411      	BRNE _0x2020022
000259 e24b      	LDI  R20,LOW(43)
00025a c0f8      	RJMP _0x202001B
                 _0x2020022:
00025b 3220      	CPI  R18,32
00025c f411      	BRNE _0x2020023
00025d e240      	LDI  R20,LOW(32)
00025e c0f4      	RJMP _0x202001B
                 _0x2020023:
00025f c002      	RJMP _0x2020024
                 _0x202001F:
000260 30e2      	CPI  R30,LOW(0x2)
000261 f439      	BRNE _0x2020025
                 _0x2020024:
000262 e050      	LDI  R21,LOW(0)
000263 e013      	LDI  R17,LOW(3)
000264 3320      	CPI  R18,48
000265 f411      	BRNE _0x2020026
000266 6800      	ORI  R16,LOW(128)
000267 c0eb      	RJMP _0x202001B
                 _0x2020026:
000268 c003      	RJMP _0x2020027
                 _0x2020025:
000269 30e3      	CPI  R30,LOW(0x3)
00026a f009      	BREQ PC+2
00026b c0e7      	RJMP _0x202001B
                 _0x2020027:
00026c 3320      	CPI  R18,48
00026d f010      	BRLO _0x202002A
00026e 332a      	CPI  R18,58
00026f f008      	BRLO _0x202002B
                 _0x202002A:
000270 c007      	RJMP _0x2020029
                 _0x202002B:
000271 e0aa      	LDI  R26,LOW(10)
000272 9f5a      	MUL  R21,R26
000273 2d50      	MOV  R21,R0
000274 2fe2      	MOV  R30,R18
000275 53e0      	SUBI R30,LOW(48)
000276 0f5e      	ADD  R21,R30
000277 c0db      	RJMP _0x202001B
                 _0x2020029:
000278 2fe2      	MOV  R30,R18
000279 36e3      	CPI  R30,LOW(0x63)
00027a f449      	BRNE _0x202002F
00027b 940e 054a 	CALL SUBOPT_0x5
00027d 89e8      	LDD  R30,Y+16
00027e 89f9      	LDD  R31,Y+16+1
00027f 81a4      	LDD  R26,Z+4
000280 93aa      	ST   -Y,R26
000281 940e 0550 	CALL SUBOPT_0x6
000283 c0ce      	RJMP _0x2020030
                 _0x202002F:
000284 37e3      	CPI  R30,LOW(0x73)
000285 f441      	BRNE _0x2020032
000286 940e 054a 	CALL SUBOPT_0x5
000288 940e 0556 	CALL SUBOPT_0x7
00028a 940e 0513 	CALL _strlen
00028c 2f1e      	MOV  R17,R30
00028d c00a      	RJMP _0x2020033
                 _0x2020032:
00028e 37e0      	CPI  R30,LOW(0x70)
00028f f461      	BRNE _0x2020035
000290 940e 054a 	CALL SUBOPT_0x5
000292 940e 0556 	CALL SUBOPT_0x7
000294 940e 051f 	CALL _strlenf
000296 2f1e      	MOV  R17,R30
000297 6008      	ORI  R16,LOW(8)
                 _0x2020033:
000298 6002      	ORI  R16,LOW(2)
000299 770f      	ANDI R16,LOW(127)
00029a e030      	LDI  R19,LOW(0)
00029b c034      	RJMP _0x2020036
                 _0x2020035:
00029c 36e4      	CPI  R30,LOW(0x64)
00029d f011      	BREQ _0x2020039
00029e 36e9      	CPI  R30,LOW(0x69)
00029f f411      	BRNE _0x202003A
                 _0x2020039:
0002a0 6004      	ORI  R16,LOW(4)
0002a1 c002      	RJMP _0x202003B
                 _0x202003A:
0002a2 37e5      	CPI  R30,LOW(0x75)
0002a3 f431      	BRNE _0x202003C
                 _0x202003B:
0002a4 e8ec      	LDI  R30,LOW(_tbl10_G101*2)
0002a5 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
0002a6 83ee      	STD  Y+6,R30
0002a7 83ff      	STD  Y+6+1,R31
0002a8 e015      	LDI  R17,LOW(5)
0002a9 c00c      	RJMP _0x202003D
                 _0x202003C:
0002aa 35e8      	CPI  R30,LOW(0x58)
0002ab f411      	BRNE _0x202003F
0002ac 6008      	ORI  R16,LOW(8)
0002ad c003      	RJMP _0x2020040
                 _0x202003F:
0002ae 37e8      	CPI  R30,LOW(0x78)
0002af f009      	BREQ PC+2
0002b0 c0a1      	RJMP _0x2020071
                 _0x2020040:
0002b1 e9e6      	LDI  R30,LOW(_tbl16_G101*2)
0002b2 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
0002b3 83ee      	STD  Y+6,R30
0002b4 83ff      	STD  Y+6+1,R31
0002b5 e014      	LDI  R17,LOW(4)
                 _0x202003D:
0002b6 ff02      	SBRS R16,2
0002b7 c014      	RJMP _0x2020042
0002b8 940e 054a 	CALL SUBOPT_0x5
0002ba 940e 0560 	CALL SUBOPT_0x8
0002bc 85ab      	LDD  R26,Y+11
0002bd 23aa      	TST  R26
0002be f43a      	BRPL _0x2020043
0002bf 85ea      	LDD  R30,Y+10
0002c0 85fb      	LDD  R31,Y+10+1
0002c1 940e 059a 	CALL __ANEGW1
0002c3 87ea      	STD  Y+10,R30
0002c4 87fb      	STD  Y+10+1,R31
0002c5 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
0002c6 3040      	CPI  R20,0
0002c7 f011      	BREQ _0x2020044
0002c8 5f1f      	SUBI R17,-LOW(1)
0002c9 c001      	RJMP _0x2020045
                 _0x2020044:
0002ca 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
0002cb c004      	RJMP _0x2020046
                 _0x2020042:
0002cc 940e 054a 	CALL SUBOPT_0x5
0002ce 940e 0560 	CALL SUBOPT_0x8
                 _0x2020046:
                 _0x2020036:
0002d0 fd00      	SBRC R16,0
0002d1 c011      	RJMP _0x2020047
                 _0x2020048:
0002d2 1715      	CP   R17,R21
0002d3 f478      	BRSH _0x202004A
0002d4 ff07      	SBRS R16,7
0002d5 c008      	RJMP _0x202004B
0002d6 ff02      	SBRS R16,2
0002d7 c004      	RJMP _0x202004C
0002d8 7f0b      	ANDI R16,LOW(251)
0002d9 2f24      	MOV  R18,R20
0002da 5011      	SUBI R17,LOW(1)
0002db c001      	RJMP _0x202004D
                 _0x202004C:
0002dc e320      	LDI  R18,LOW(48)
                 _0x202004D:
0002dd c001      	RJMP _0x202004E
                 _0x202004B:
0002de e220      	LDI  R18,LOW(32)
                 _0x202004E:
0002df 940e 0543 	CALL SUBOPT_0x4
0002e1 5051      	SUBI R21,LOW(1)
0002e2 cfef      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
0002e3 2f31      	MOV  R19,R17
0002e4 ff01      	SBRS R16,1
0002e5 c017      	RJMP _0x202004F
                 _0x2020050:
0002e6 3030      	CPI  R19,0
0002e7 f0a1      	BREQ _0x2020052
0002e8 ff03      	SBRS R16,3
0002e9 c006      	RJMP _0x2020053
0002ea 81ee      	LDD  R30,Y+6
0002eb 81ff      	LDD  R31,Y+6+1
0002ec 9125      	LPM  R18,Z+
0002ed 83ee      	STD  Y+6,R30
0002ee 83ff      	STD  Y+6+1,R31
0002ef c005      	RJMP _0x2020054
                 _0x2020053:
0002f0 81ae      	LDD  R26,Y+6
0002f1 81bf      	LDD  R27,Y+6+1
0002f2 912d      	LD   R18,X+
0002f3 83ae      	STD  Y+6,R26
0002f4 83bf      	STD  Y+6+1,R27
                 _0x2020054:
0002f5 940e 0543 	CALL SUBOPT_0x4
0002f7 3050      	CPI  R21,0
0002f8 f009      	BREQ _0x2020055
0002f9 5051      	SUBI R21,LOW(1)
                 _0x2020055:
0002fa 5031      	SUBI R19,LOW(1)
0002fb cfea      	RJMP _0x2020050
                 _0x2020052:
0002fc c04b      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
0002fd e320      	LDI  R18,LOW(48)
0002fe 81ee      	LDD  R30,Y+6
0002ff 81ff      	LDD  R31,Y+6+1
000300 940e 05aa 	CALL __GETW1PF
000302 87e8      	STD  Y+8,R30
000303 87f9      	STD  Y+8+1,R31
000304 81ee      	LDD  R30,Y+6
000305 81ff      	LDD  R31,Y+6+1
000306 9632      	ADIW R30,2
000307 83ee      	STD  Y+6,R30
000308 83ff      	STD  Y+6+1,R31
                 _0x202005A:
000309 85e8      	LDD  R30,Y+8
00030a 85f9      	LDD  R31,Y+8+1
00030b 85aa      	LDD  R26,Y+10
00030c 85bb      	LDD  R27,Y+10+1
00030d 17ae      	CP   R26,R30
00030e 07bf      	CPC  R27,R31
00030f f050      	BRLO _0x202005C
000310 5f2f      	SUBI R18,-LOW(1)
000311 85a8      	LDD  R26,Y+8
000312 85b9      	LDD  R27,Y+8+1
000313 85ea      	LDD  R30,Y+10
000314 85fb      	LDD  R31,Y+10+1
000315 1bea      	SUB  R30,R26
000316 0bfb      	SBC  R31,R27
000317 87ea      	STD  Y+10,R30
000318 87fb      	STD  Y+10+1,R31
000319 cfef      	RJMP _0x202005A
                 _0x202005C:
00031a 332a      	CPI  R18,58
00031b f028      	BRLO _0x202005D
00031c ff03      	SBRS R16,3
00031d c002      	RJMP _0x202005E
00031e 5f29      	SUBI R18,-LOW(7)
00031f c001      	RJMP _0x202005F
                 _0x202005E:
000320 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000321 fd04      	SBRC R16,4
000322 c01a      	RJMP _0x2020061
000323 3321      	CPI  R18,49
000324 f420      	BRSH _0x2020063
000325 85a8      	LDD  R26,Y+8
000326 85b9      	LDD  R27,Y+8+1
000327 9711      	SBIW R26,1
000328 f409      	BRNE _0x2020062
                 _0x2020063:
000329 c009      	RJMP _0x20200CD
                 _0x2020062:
00032a 1753      	CP   R21,R19
00032b f010      	BRLO _0x2020067
00032c ff00      	SBRS R16,0
00032d c001      	RJMP _0x2020068
                 _0x2020067:
00032e c013      	RJMP _0x2020066
                 _0x2020068:
00032f e220      	LDI  R18,LOW(32)
000330 ff07      	SBRS R16,7
000331 c00b      	RJMP _0x2020069
000332 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
000333 6100      	ORI  R16,LOW(16)
000334 ff02      	SBRS R16,2
000335 c007      	RJMP _0x202006A
000336 7f0b      	ANDI R16,LOW(251)
000337 934a      	ST   -Y,R20
000338 940e 0550 	CALL SUBOPT_0x6
00033a 3050      	CPI  R21,0
00033b f009      	BREQ _0x202006B
00033c 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
00033d 940e 0543 	CALL SUBOPT_0x4
00033f 3050      	CPI  R21,0
000340 f009      	BREQ _0x202006C
000341 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000342 5031      	SUBI R19,LOW(1)
000343 85a8      	LDD  R26,Y+8
000344 85b9      	LDD  R27,Y+8+1
000345 9712      	SBIW R26,2
000346 f008      	BRLO _0x2020059
000347 cfb5      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
000348 ff00      	SBRS R16,0
000349 c008      	RJMP _0x202006D
                 _0x202006E:
00034a 3050      	CPI  R21,0
00034b f031      	BREQ _0x2020070
00034c 5051      	SUBI R21,LOW(1)
00034d e2e0      	LDI  R30,LOW(32)
00034e 93ea      	ST   -Y,R30
00034f 940e 0550 	CALL SUBOPT_0x6
000351 cff8      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
000352 e010      	LDI  R17,LOW(0)
                 _0x202001B:
000353 cee0      	RJMP _0x2020016
                 _0x2020018:
000354 85ac      	LDD  R26,Y+12
000355 85bd      	LDD  R27,Y+12+1
000356 940e 05a6 	CALL __GETW1P
000358 940e 05ba 	CALL __LOADLOCR6
00035a 9664      	ADIW R28,20
00035b 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
00035c 92ff      	PUSH R15
00035d 2ef8      	MOV  R15,R24
00035e 9726      	SBIW R28,6
00035f 931a      	ST   -Y,R17
000360 930a      	ST   -Y,R16
000361 01de      	MOVW R26,R28
000362 9614      	ADIW R26,4
000363 940e 0596 	CALL __ADDW2R15
000365 018d      	MOVW R16,R26
000366 e0e0      	LDI  R30,LOW(0)
000367 83ec      	STD  Y+4,R30
000368 83ed      	STD  Y+4+1,R30
000369 83ee      	STD  Y+6,R30
00036a 83ef      	STD  Y+6+1,R30
00036b 01de      	MOVW R26,R28
00036c 9618      	ADIW R26,8
00036d 940e 0568 	CALL SUBOPT_0x9
00036f e1eb      	LDI  R30,LOW(_put_usart_G101)
000370 e0f2      	LDI  R31,HIGH(_put_usart_G101)
000371 93fa      	ST   -Y,R31
000372 93ea      	ST   -Y,R30
000373 01de      	MOVW R26,R28
000374 9618      	ADIW R26,8
000375 deb2      	RCALL __print_G101
000376 8119      	LDD  R17,Y+1
000377 8108      	LDD  R16,Y+0
000378 9628      	ADIW R28,8
000379 90ff      	POP  R15
00037a 9508      	RET
                 ; .FEND
                 _get_usart_G101:
                 ; .FSTART _get_usart_G101
00037b 93ba      	ST   -Y,R27
00037c 93aa      	ST   -Y,R26
00037d 931a      	ST   -Y,R17
00037e 81a9      	LDD  R26,Y+1
00037f 81ba      	LDD  R27,Y+1+1
000380 e0e0      	LDI  R30,LOW(0)
000381 93ec      	ST   X,R30
000382 81ab      	LDD  R26,Y+3
000383 81bc      	LDD  R27,Y+3+1
000384 91ec      	LD   R30,X
000385 2f1e      	MOV  R17,R30
000386 30e0      	CPI  R30,0
000387 f019      	BREQ _0x2020078
000388 e0e0      	LDI  R30,LOW(0)
000389 93ec      	ST   X,R30
00038a c002      	RJMP _0x2020079
                 _0x2020078:
00038b de84      	RCALL _getchar
00038c 2f1e      	MOV  R17,R30
                 _0x2020079:
00038d 2fe1      	MOV  R30,R17
00038e 8118      	LDD  R17,Y+0
00038f 9625      	ADIW R28,5
000390 9508      	RET
                 ; .FEND
                 __scanf_G101:
                 ; .FSTART __scanf_G101
000391 92ff      	PUSH R15
000392 93ba      	ST   -Y,R27
000393 93aa      	ST   -Y,R26
000394 9724      	SBIW R28,4
000395 940e 05b3 	CALL __SAVELOCR6
000397 e0e0      	LDI  R30,LOW(0)
000398 e0f0      	LDI  R31,HIGH(0)
000399 87e8      	STD  Y+8,R30
00039a 87f9      	STD  Y+8+1,R31
00039b 2f4e      	MOV  R20,R30
                 _0x202007F:
00039c 89e8      	LDD  R30,Y+16
00039d 89f9      	LDD  R31,Y+16+1
00039e 9631      	ADIW R30,1
00039f 8be8      	STD  Y+16,R30
0003a0 8bf9      	STD  Y+16+1,R31
0003a1 9731      	SBIW R30,1
0003a2 91e4      	LPM  R30,Z
0003a3 2f3e      	MOV  R19,R30
0003a4 30e0      	CPI  R30,0
0003a5 f409      	BRNE PC+2
0003a6 c125      	RJMP _0x2020081
0003a7 940e 0571 	CALL SUBOPT_0xA
0003a9 f0c1      	BREQ _0x2020082
                 _0x2020083:
0003aa b7ed      	IN   R30,SPL
0003ab b7fe      	IN   R31,SPH
0003ac 93fa      	ST   -Y,R31
0003ad 93ea      	ST   -Y,R30
0003ae 934f      	PUSH R20
0003af 940e 0576 	CALL SUBOPT_0xB
0003b1 914f      	POP  R20
0003b2 2f3e      	MOV  R19,R30
0003b3 30e0      	CPI  R30,0
0003b4 f019      	BREQ _0x2020086
0003b5 940e 0571 	CALL SUBOPT_0xA
0003b7 f409      	BRNE _0x2020087
                 _0x2020086:
0003b8 c007      	RJMP _0x2020085
                 _0x2020087:
0003b9 940e 057c 	CALL SUBOPT_0xC
0003bb f41c      	BRGE _0x2020088
0003bc efef      	LDI  R30,LOW(65535)
0003bd efff      	LDI  R31,HIGH(65535)
0003be c10f      	RJMP _0x20A0001
                 _0x2020088:
0003bf cfea      	RJMP _0x2020083
                 _0x2020085:
0003c0 2f43      	MOV  R20,R19
0003c1 c109      	RJMP _0x2020089
                 _0x2020082:
0003c2 3235      	CPI  R19,37
0003c3 f009      	BREQ PC+2
0003c4 c0ee      	RJMP _0x202008A
0003c5 e050      	LDI  R21,LOW(0)
                 _0x202008B:
0003c6 89e8      	LDD  R30,Y+16
0003c7 89f9      	LDD  R31,Y+16+1
0003c8 9135      	LPM  R19,Z+
0003c9 8be8      	STD  Y+16,R30
0003ca 8bf9      	STD  Y+16+1,R31
0003cb 3330      	CPI  R19,48
0003cc f010      	BRLO _0x202008F
0003cd 333a      	CPI  R19,58
0003ce f008      	BRLO _0x202008E
                 _0x202008F:
0003cf c007      	RJMP _0x202008D
                 _0x202008E:
0003d0 e0aa      	LDI  R26,LOW(10)
0003d1 9f5a      	MUL  R21,R26
0003d2 2d50      	MOV  R21,R0
0003d3 2fe3      	MOV  R30,R19
0003d4 53e0      	SUBI R30,LOW(48)
0003d5 0f5e      	ADD  R21,R30
0003d6 cfef      	RJMP _0x202008B
                 _0x202008D:
0003d7 3030      	CPI  R19,0
0003d8 f409      	BRNE _0x2020091
0003d9 c0f2      	RJMP _0x2020081
                 _0x2020091:
                 _0x2020092:
0003da b7ed      	IN   R30,SPL
0003db b7fe      	IN   R31,SPH
0003dc 93fa      	ST   -Y,R31
0003dd 93ea      	ST   -Y,R30
0003de 934f      	PUSH R20
0003df 940e 0576 	CALL SUBOPT_0xB
0003e1 914f      	POP  R20
0003e2 2f2e      	MOV  R18,R30
0003e3 2fae      	MOV  R26,R30
0003e4 940e 04f9 	CALL _isspace
0003e6 30e0      	CPI  R30,0
0003e7 f039      	BREQ _0x2020094
0003e8 940e 057c 	CALL SUBOPT_0xC
0003ea f41c      	BRGE _0x2020095
0003eb efef      	LDI  R30,LOW(65535)
0003ec efff      	LDI  R31,HIGH(65535)
0003ed c0e0      	RJMP _0x20A0001
                 _0x2020095:
0003ee cfeb      	RJMP _0x2020092
                 _0x2020094:
0003ef 3020      	CPI  R18,0
0003f0 f409      	BRNE _0x2020096
0003f1 c0d1      	RJMP _0x2020097
                 _0x2020096:
0003f2 2f42      	MOV  R20,R18
0003f3 3050      	CPI  R21,0
0003f4 f409      	BRNE _0x2020098
0003f5 ef5f      	LDI  R21,LOW(255)
                 _0x2020098:
0003f6 2fe3      	MOV  R30,R19
0003f7 36e3      	CPI  R30,LOW(0x63)
0003f8 f499      	BRNE _0x202009C
0003f9 940e 0581 	CALL SUBOPT_0xD
0003fb b7ed      	IN   R30,SPL
0003fc b7fe      	IN   R31,SPH
0003fd 93fa      	ST   -Y,R31
0003fe 93ea      	ST   -Y,R30
0003ff 934f      	PUSH R20
000400 940e 0576 	CALL SUBOPT_0xB
000402 914f      	POP  R20
000403 01d8      	MOVW R26,R16
000404 93ec      	ST   X,R30
000405 940e 057c 	CALL SUBOPT_0xC
000407 f41c      	BRGE _0x202009D
000408 efef      	LDI  R30,LOW(65535)
000409 efff      	LDI  R31,HIGH(65535)
00040a c0c3      	RJMP _0x20A0001
                 _0x202009D:
00040b c0a1      	RJMP _0x202009B
                 _0x202009C:
00040c 37e3      	CPI  R30,LOW(0x73)
00040d f541      	BRNE _0x20200A6
00040e 940e 0581 	CALL SUBOPT_0xD
                 _0x202009F:
000410 2fe5      	MOV  R30,R21
000411 5051      	SUBI R21,1
000412 30e0      	CPI  R30,0
000413 f0f1      	BREQ _0x20200A1
000414 b7ed      	IN   R30,SPL
000415 b7fe      	IN   R31,SPH
000416 93fa      	ST   -Y,R31
000417 93ea      	ST   -Y,R30
000418 934f      	PUSH R20
000419 940e 0576 	CALL SUBOPT_0xB
00041b 914f      	POP  R20
00041c 2f3e      	MOV  R19,R30
00041d 30e0      	CPI  R30,0
00041e f019      	BREQ _0x20200A3
00041f 940e 0571 	CALL SUBOPT_0xA
000421 f039      	BREQ _0x20200A2
                 _0x20200A3:
000422 940e 057c 	CALL SUBOPT_0xC
000424 f41c      	BRGE _0x20200A5
000425 efef      	LDI  R30,LOW(65535)
000426 efff      	LDI  R31,HIGH(65535)
000427 c0a6      	RJMP _0x20A0001
                 _0x20200A5:
000428 c009      	RJMP _0x20200A1
                 _0x20200A2:
000429 931f      	PUSH R17
00042a 930f      	PUSH R16
                +
00042b 5f0f     +SUBI R16 , LOW ( - 1 )
00042c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00042d 2fe3      	MOV  R30,R19
00042e 91af      	POP  R26
00042f 91bf      	POP  R27
000430 93ec      	ST   X,R30
000431 cfde      	RJMP _0x202009F
                 _0x20200A1:
000432 01d8      	MOVW R26,R16
000433 e0e0      	LDI  R30,LOW(0)
000434 93ec      	ST   X,R30
000435 c077      	RJMP _0x202009B
                 _0x20200A6:
000436 9468      	SET
000437 f8f1      	BLD  R15,1
000438 94e8      	CLT
000439 f8f2      	BLD  R15,2
00043a 2fe3      	MOV  R30,R19
00043b 36e4      	CPI  R30,LOW(0x64)
00043c f011      	BREQ _0x20200AB
00043d 36e9      	CPI  R30,LOW(0x69)
00043e f419      	BRNE _0x20200AC
                 _0x20200AB:
00043f 94e8      	CLT
000440 f8f1      	BLD  R15,1
000441 c002      	RJMP _0x20200AD
                 _0x20200AC:
000442 37e5      	CPI  R30,LOW(0x75)
000443 f411      	BRNE _0x20200AE
                 _0x20200AD:
000444 e02a      	LDI  R18,LOW(10)
000445 c008      	RJMP _0x20200A9
                 _0x20200AE:
000446 37e8      	CPI  R30,LOW(0x78)
000447 f411      	BRNE _0x20200AF
000448 e120      	LDI  R18,LOW(16)
000449 c004      	RJMP _0x20200A9
                 _0x20200AF:
00044a 32e5      	CPI  R30,LOW(0x25)
00044b f409      	BRNE _0x20200B2
00044c c066      	RJMP _0x20200B1
                 _0x20200B2:
00044d c07e      	RJMP _0x20A0002
                 _0x20200A9:
00044e e0e0      	LDI  R30,LOW(0)
00044f 83ee      	STD  Y+6,R30
000450 83ef      	STD  Y+6+1,R30
000451 9468      	SET
000452 f8f0      	BLD  R15,0
                 _0x20200B3:
000453 2fe5      	MOV  R30,R21
000454 5051      	SUBI R21,1
000455 30e0      	CPI  R30,0
000456 f409      	BRNE PC+2
000457 c046      	RJMP _0x20200B5
000458 b7ed      	IN   R30,SPL
000459 b7fe      	IN   R31,SPH
00045a 93fa      	ST   -Y,R31
00045b 93ea      	ST   -Y,R30
00045c 934f      	PUSH R20
00045d 940e 0576 	CALL SUBOPT_0xB
00045f 914f      	POP  R20
000460 2f3e      	MOV  R19,R30
000461 32e1      	CPI  R30,LOW(0x21)
000462 f438      	BRSH _0x20200B6
000463 940e 057c 	CALL SUBOPT_0xC
000465 f41c      	BRGE _0x20200B7
000466 efef      	LDI  R30,LOW(65535)
000467 efff      	LDI  R31,HIGH(65535)
000468 c065      	RJMP _0x20A0001
                 _0x20200B7:
000469 c017      	RJMP _0x20200B8
                 _0x20200B6:
00046a fcf1      	SBRC R15,1
00046b c008      	RJMP _0x20200B9
00046c 9468      	SET
00046d f8f1      	BLD  R15,1
00046e 323d      	CPI  R19,45
00046f f411      	BRNE _0x20200BA
000470 f8f2      	BLD  R15,2
000471 cfe1      	RJMP _0x20200B3
                 _0x20200BA:
000472 323b      	CPI  R19,43
000473 f2f9      	BREQ _0x20200B3
                 _0x20200B9:
000474 3120      	CPI  R18,16
000475 f431      	BRNE _0x20200BC
000476 2fa3      	MOV  R26,R19
000477 940e 0504 	CALL _isxdigit
000479 30e0      	CPI  R30,0
00047a f031      	BREQ _0x20200B8
00047b c009      	RJMP _0x20200BE
                 _0x20200BC:
00047c 2fa3      	MOV  R26,R19
00047d 940e 04f0 	CALL _isdigit
00047f 30e0      	CPI  R30,0
000480 f421      	BRNE _0x20200BF
                 _0x20200B8:
000481 fcf0      	SBRC R15,0
000482 c049      	RJMP _0x20200C1
000483 2f43      	MOV  R20,R19
000484 c019      	RJMP _0x20200B5
                 _0x20200BF:
                 _0x20200BE:
000485 3631      	CPI  R19,97
000486 f010      	BRLO _0x20200C2
000487 5537      	SUBI R19,LOW(87)
000488 c005      	RJMP _0x20200C3
                 _0x20200C2:
000489 3431      	CPI  R19,65
00048a f010      	BRLO _0x20200C4
00048b 5337      	SUBI R19,LOW(55)
00048c c001      	RJMP _0x20200C5
                 _0x20200C4:
00048d 5330      	SUBI R19,LOW(48)
                 _0x20200C5:
                 _0x20200C3:
00048e 2fe2      	MOV  R30,R18
00048f 81ae      	LDD  R26,Y+6
000490 81bf      	LDD  R27,Y+6+1
000491 e0f0      	LDI  R31,0
000492 940e 059e 	CALL __MULW12U
000494 01df      	MOVW R26,R30
000495 2fe3      	MOV  R30,R19
000496 e0f0      	LDI  R31,0
000497 0fea      	ADD  R30,R26
000498 1ffb      	ADC  R31,R27
000499 83ee      	STD  Y+6,R30
00049a 83ff      	STD  Y+6+1,R31
00049b 94e8      	CLT
00049c f8f0      	BLD  R15,0
00049d cfb5      	RJMP _0x20200B3
                 _0x20200B5:
00049e 940e 0581 	CALL SUBOPT_0xD
0004a0 fef2      	SBRS R15,2
0004a1 c006      	RJMP _0x20200C6
0004a2 81ee      	LDD  R30,Y+6
0004a3 81ff      	LDD  R31,Y+6+1
0004a4 940e 059a 	CALL __ANEGW1
0004a6 83ee      	STD  Y+6,R30
0004a7 83ff      	STD  Y+6+1,R31
                 _0x20200C6:
0004a8 81ee      	LDD  R30,Y+6
0004a9 81ff      	LDD  R31,Y+6+1
0004aa 01d8      	MOVW R26,R16
0004ab 93ed      	ST   X+,R30
0004ac 93fc      	ST   X,R31
                 _0x202009B:
0004ad 85e8      	LDD  R30,Y+8
0004ae 85f9      	LDD  R31,Y+8+1
0004af 9631      	ADIW R30,1
0004b0 87e8      	STD  Y+8,R30
0004b1 87f9      	STD  Y+8+1,R31
0004b2 c018      	RJMP _0x20200C7
                 _0x202008A:
                 _0x20200B1:
0004b3 b7ed      	IN   R30,SPL
0004b4 b7fe      	IN   R31,SPH
0004b5 93fa      	ST   -Y,R31
0004b6 93ea      	ST   -Y,R30
0004b7 934f      	PUSH R20
0004b8 940e 0576 	CALL SUBOPT_0xB
0004ba 914f      	POP  R20
0004bb 17e3      	CP   R30,R19
0004bc f071      	BREQ _0x20200C8
0004bd 940e 057c 	CALL SUBOPT_0xC
0004bf f41c      	BRGE _0x20200C9
0004c0 efef      	LDI  R30,LOW(65535)
0004c1 efff      	LDI  R31,HIGH(65535)
0004c2 c00b      	RJMP _0x20A0001
                 _0x20200C9:
                 _0x2020097:
0004c3 85e8      	LDD  R30,Y+8
0004c4 85f9      	LDD  R31,Y+8+1
0004c5 9730      	SBIW R30,0
0004c6 f419      	BRNE _0x20200CA
0004c7 efef      	LDI  R30,LOW(65535)
0004c8 efff      	LDI  R31,HIGH(65535)
0004c9 c004      	RJMP _0x20A0001
                 _0x20200CA:
0004ca c001      	RJMP _0x2020081
                 _0x20200C8:
                 _0x20200C7:
                 _0x2020089:
0004cb ced0      	RJMP _0x202007F
                 _0x2020081:
                 _0x20200C1:
                 _0x20A0002:
0004cc 85e8      	LDD  R30,Y+8
0004cd 85f9      	LDD  R31,Y+8+1
                 _0x20A0001:
0004ce 940e 05ba 	CALL __LOADLOCR6
0004d0 9662      	ADIW R28,18
0004d1 90ff      	POP  R15
0004d2 9508      	RET
                 ; .FEND
                 _scanf:
                 ; .FSTART _scanf
0004d3 92ff      	PUSH R15
0004d4 2ef8      	MOV  R15,R24
0004d5 9723      	SBIW R28,3
0004d6 931a      	ST   -Y,R17
0004d7 930a      	ST   -Y,R16
0004d8 01de      	MOVW R26,R28
0004d9 9611      	ADIW R26,1
0004da 940e 0596 	CALL __ADDW2R15
0004dc 018d      	MOVW R16,R26
0004dd e0e0      	LDI  R30,LOW(0)
0004de 83eb      	STD  Y+3,R30
0004df 83ec      	STD  Y+3+1,R30
0004e0 01de      	MOVW R26,R28
0004e1 9615      	ADIW R26,5
0004e2 940e 0568 	CALL SUBOPT_0x9
0004e4 e7eb      	LDI  R30,LOW(_get_usart_G101)
0004e5 e0f3      	LDI  R31,HIGH(_get_usart_G101)
0004e6 93fa      	ST   -Y,R31
0004e7 93ea      	ST   -Y,R30
0004e8 01de      	MOVW R26,R28
0004e9 9618      	ADIW R26,8
0004ea dea6      	RCALL __scanf_G101
0004eb 8119      	LDD  R17,Y+1
0004ec 8108      	LDD  R16,Y+0
0004ed 9625      	ADIW R28,5
0004ee 90ff      	POP  R15
0004ef 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _isdigit:
                 ; .FSTART _isdigit
0004f0 93aa      	ST   -Y,R26
0004f1 e0e1          ldi  r30,1
0004f2 91f9          ld   r31,y+
0004f3 33f0          cpi  r31,'0'
0004f4 f010          brlo isdigit0
0004f5 33fa          cpi  r31,'9'+1
0004f6 f008          brlo isdigit1
                 isdigit0:
0004f7 27ee          clr  r30
                 isdigit1:
0004f8 9508          ret
                 ; .FEND
                 _isspace:
                 ; .FSTART _isspace
0004f9 93aa      	ST   -Y,R26
0004fa e0e1          ldi  r30,1
0004fb 91f9          ld   r31,y+
0004fc 32f0          cpi  r31,' '
0004fd f029          breq isspace1
0004fe 30f9          cpi  r31,9
0004ff f010          brlo isspace0
000500 30fe          cpi  r31,13+1
000501 f008          brlo isspace1
                 isspace0:
000502 27ee          clr  r30
                 isspace1:
000503 9508          ret
                 ; .FEND
                 _isxdigit:
                 ; .FSTART _isxdigit
000504 93aa      	ST   -Y,R26
000505 e0e1          ldi  r30,1
000506 91f9          ld   r31,y+
000507 53f0          subi r31,0x30
000508 f040          brcs isxdigit0
000509 30fa          cpi  r31,10
00050a f038          brcs isxdigit1
00050b 75ff          andi r31,0x5f
00050c 50f7          subi r31,7
00050d 30fa          cpi  r31,10
00050e f010          brcs isxdigit0
00050f 31f0          cpi  r31,16
000510 f008          brcs isxdigit1
                 isxdigit0:
000511 27ee          clr  r30
                 isxdigit1:
000512 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000513 93ba      	ST   -Y,R27
000514 93aa      	ST   -Y,R26
000515 91a9          ld   r26,y+
000516 91b9          ld   r27,y+
000517 27ee          clr  r30
000518 27ff          clr  r31
                 strlen0:
000519 916d          ld   r22,x+
00051a 2366          tst  r22
00051b f011          breq strlen1
00051c 9631          adiw r30,1
00051d cffb          rjmp strlen0
                 strlen1:
00051e 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00051f 93ba      	ST   -Y,R27
000520 93aa      	ST   -Y,R26
000521 27aa          clr  r26
000522 27bb          clr  r27
000523 91e9          ld   r30,y+
000524 91f9          ld   r31,y+
                 strlenf0:
000525 9005      	lpm  r0,z+
000526 2000          tst  r0
000527 f011          breq strlenf1
000528 9611          adiw r26,1
000529 cffb          rjmp strlenf0
                 strlenf1:
00052a 01fd          movw r30,r26
00052b 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __seed_G102:
000500           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x0:
00052c 93fa      	ST   -Y,R31
00052d 93ea      	ST   -Y,R30
00052e e080      	LDI  R24,0
00052f 940e 035c 	CALL _printf
000531 9622      	ADIW R28,2
000532 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000533 940e 05ae 	CALL __PUTPARD1
000535 e084      	LDI  R24,4
000536 940e 04d3 	CALL _scanf
000538 9626      	ADIW R28,6
000539 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
00053a efa4      	LDI  R26,LOW(500)
00053b e0b1      	LDI  R27,HIGH(500)
00053c 940c 058c 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x3:
00053e bbe8      	OUT  0x18,R30
00053f e6a4      	LDI  R26,LOW(100)
000540 e0b0      	LDI  R27,0
000541 940c 058c 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x4:
000543 932a      	ST   -Y,R18
000544 85ad      	LDD  R26,Y+13
000545 85be      	LDD  R27,Y+13+1
000546 85ef      	LDD  R30,Y+15
000547 89f8      	LDD  R31,Y+15+1
000548 9509      	ICALL
000549 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
00054a 89e8      	LDD  R30,Y+16
00054b 89f9      	LDD  R31,Y+16+1
00054c 9734      	SBIW R30,4
00054d 8be8      	STD  Y+16,R30
00054e 8bf9      	STD  Y+16+1,R31
00054f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
000550 85ad      	LDD  R26,Y+13
000551 85be      	LDD  R27,Y+13+1
000552 85ef      	LDD  R30,Y+15
000553 89f8      	LDD  R31,Y+15+1
000554 9509      	ICALL
000555 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x7:
000556 89a8      	LDD  R26,Y+16
000557 89b9      	LDD  R27,Y+16+1
000558 9614      	ADIW R26,4
000559 940e 05a6 	CALL __GETW1P
00055b 83ee      	STD  Y+6,R30
00055c 83ff      	STD  Y+6+1,R31
00055d 81ae      	LDD  R26,Y+6
00055e 81bf      	LDD  R27,Y+6+1
00055f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8:
000560 89a8      	LDD  R26,Y+16
000561 89b9      	LDD  R27,Y+16+1
000562 9614      	ADIW R26,4
000563 940e 05a6 	CALL __GETW1P
000565 87ea      	STD  Y+10,R30
000566 87fb      	STD  Y+10+1,R31
000567 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
000568 940e 0596 	CALL __ADDW2R15
00056a 940e 05a6 	CALL __GETW1P
00056c 93fa      	ST   -Y,R31
00056d 93ea      	ST   -Y,R30
00056e 931a      	ST   -Y,R17
00056f 930a      	ST   -Y,R16
000570 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
000571 2fa3      	MOV  R26,R19
000572 940e 04f9 	CALL _isspace
000574 30e0      	CPI  R30,0
000575 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0xB:
000576 85ac      	LDD  R26,Y+12
000577 85bd      	LDD  R27,Y+12+1
000578 85ee      	LDD  R30,Y+14
000579 85ff      	LDD  R31,Y+14+1
00057a 9509      	ICALL
00057b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xC:
00057c 85aa      	LDD  R26,Y+10
00057d 85bb      	LDD  R27,Y+10+1
00057e 91ac      	LD   R26,X
00057f 30a0      	CPI  R26,0
000580 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xD:
000581 85ee      	LDD  R30,Y+14
000582 85ff      	LDD  R31,Y+14+1
000583 9734      	SBIW R30,4
000584 87ee      	STD  Y+14,R30
000585 87ff      	STD  Y+14+1,R31
000586 85ae      	LDD  R26,Y+14
000587 85bf      	LDD  R27,Y+14+1
000588 9614      	ADIW R26,4
000589 910d      	LD   R16,X+
00058a 911c      	LD   R17,X
00058b 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00058c 9610      	adiw r26,0
00058d f039      	breq __delay_ms1
                 __delay_ms0:
                +
00058e ec84     +LDI R24 , LOW ( 0x9C4 )
00058f e099     +LDI R25 , HIGH ( 0x9C4 )
                +__DELAY_USW_LOOP :
000590 9701     +SBIW R24 , 1
000591 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x9C4
000592 95a8      	wdr
000593 9711      	sbiw r26,1
000594 f7c9      	brne __delay_ms0
                 __delay_ms1:
000595 9508      	ret
                 
                 __ADDW2R15:
000596 2400      	CLR  R0
000597 0daf      	ADD  R26,R15
000598 1db0      	ADC  R27,R0
000599 9508      	RET
                 
                 __ANEGW1:
00059a 95f1      	NEG  R31
00059b 95e1      	NEG  R30
00059c 40f0      	SBCI R31,0
00059d 9508      	RET
                 
                 __MULW12U:
00059e 9ffa      	MUL  R31,R26
00059f 2df0      	MOV  R31,R0
0005a0 9feb      	MUL  R30,R27
0005a1 0df0      	ADD  R31,R0
0005a2 9fea      	MUL  R30,R26
0005a3 2de0      	MOV  R30,R0
0005a4 0df1      	ADD  R31,R1
0005a5 9508      	RET
                 
                 __GETW1P:
0005a6 91ed      	LD   R30,X+
0005a7 91fc      	LD   R31,X
0005a8 9711      	SBIW R26,1
0005a9 9508      	RET
                 
                 __GETW1PF:
0005aa 9005      	LPM  R0,Z+
0005ab 91f4      	LPM  R31,Z
0005ac 2de0      	MOV  R30,R0
0005ad 9508      	RET
                 
                 __PUTPARD1:
0005ae 937a      	ST   -Y,R23
0005af 936a      	ST   -Y,R22
0005b0 93fa      	ST   -Y,R31
0005b1 93ea      	ST   -Y,R30
0005b2 9508      	RET
                 
                 __SAVELOCR6:
0005b3 935a      	ST   -Y,R21
                 __SAVELOCR5:
0005b4 934a      	ST   -Y,R20
                 __SAVELOCR4:
0005b5 933a      	ST   -Y,R19
                 __SAVELOCR3:
0005b6 932a      	ST   -Y,R18
                 __SAVELOCR2:
0005b7 931a      	ST   -Y,R17
0005b8 930a      	ST   -Y,R16
0005b9 9508      	RET
                 
                 __LOADLOCR6:
0005ba 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0005bb 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0005bc 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0005bd 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0005be 8119      	LDD  R17,Y+1
0005bf 8108      	LD   R16,Y
0005c0 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  15 r1 :   2 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   2 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:  19 
r16:  39 r17:  29 r18:  34 r19:  35 r20:  25 r21:  27 r22:   7 r23:   3 
r24:  15 r25:   3 r26:  90 r27:  42 r28:  21 r29:   1 r30: 277 r31: 134 
x  :  24 y  : 208 z  :  15 
Registers used: 26 out of 35 (74.3%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   6 
adiw  :  27 and   :   0 andi  :   5 asr   :   0 bclr  :   0 bld   :   7 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   4 break :   0 breq  :  27 
brge  :   6 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  14 
brlt  :   0 brmi  :   0 brne  :  43 brpl  :   1 brsh  :   3 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  90 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  10 cls   :   0 clt   :   3 clv   :   0 clz   :   0 com   :   0 
cp    :  10 cpc   :   7 cpi   :  67 cpse  :   0 dec   :   1 des   :   0 
elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 
ijmp  :   0 in    :  13 inc   :   0 jmp   :  38 ld    :  20 ldd   :  90 
ldi   : 165 lds   :   0 lpm   :  17 lsl   :   0 lsr   :   0 mov   :  39 
movw  :  16 mul   :   5 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 
or    :   0 ori   :   6 out   :  21 pop   :  11 push  :  11 rcall :   4 
ret   :  34 reti  :   0 rjmp  : 102 rol   :   0 ror   :   0 sbc   :   1 
sbci  :   2 sbi   :   0 sbic  :   0 sbis  :   2 sbiw  :  17 sbr   :   0 
sbrc  :   4 sbrs  :  11 sec   :   0 seh   :   0 sei   :   0 sen   :   0 
ser   :   0 ses   :   0 set   :   3 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    :  77 std   :  46 sts   :   4 sub   :   1 subi  :  22 
swap  :   0 tst   :   3 wdr   :   1 
Instructions used: 52 out of 117 (44.4%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000b82   2508    438   2946  131072   2.2%
[.dseg] 0x000100 0x000504      0      4      4    4096   0.1%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 6 warnings
