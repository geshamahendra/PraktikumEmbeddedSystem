;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;ï¿½ Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 11/2/2021
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega128
;Program type            : Application
;AVR Core Clock frequency: 10.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 1024
;*******************************************************/
;
;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <math.h>
;
;// Declare your global variables here
;int pilihan1, pilihan2;
;
;// Standard Input/Output functions
;#include <stdio.h>
;
;void main(void)
; 0000 0023 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0024 // Declare your local variables here
; 0000 0025 
; 0000 0026 // Input/Output Ports initialization
; 0000 0027 // Port B initialization
; 0000 0028 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0029 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 002A // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 002B PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 002C 
; 0000 002D // USART0 initialization
; 0000 002E // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 002F // USART0 Receiver: On
; 0000 0030 // USART0 Transmitter: On
; 0000 0031 // USART0 Mode: Asynchronous
; 0000 0032 // USART0 Baud Rate: 9600
; 0000 0033 UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0034 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0035 UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0036 UBRR0H=0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0037 UBRR0L=0x40;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0038 
; 0000 0039 // USART1 initialization
; 0000 003A // USART1 disabled
; 0000 003B UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 003C 
; 0000 003D // Analog Comparator initialization
; 0000 003E // Analog Comparator: Off
; 0000 003F // The Analog Comparator's positive input is
; 0000 0040 // connected to the AIN0 pin
; 0000 0041 // The Analog Comparator's negative input is
; 0000 0042 // connected to the AIN1 pin
; 0000 0043 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0044 SFIOR=(0<<ACME);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0045 
; 0000 0046 while (1)
;PCODE: $00000022 VOL: 0
; 0000 0047       {
; 0000 0048       PORTB = 0b00000000;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0049       printf(" Tekan 1 untuk menyalakan LED0 \r Tekan 2 untuk menyalakan LED1 \r Tekan 3 untuk menyalakan LED3 \r Tekan  ...
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 004A       scanf("%d", &pilihan1);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 004B       delay_ms(500);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 004C       if (pilihan1 == 1){
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 004D         PORTB = 0b00000001;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 004E         printf(" LED 0 nyala \r");
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 004F         delay_ms(500);}
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0050       else if (pilihan1 == 2){
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0051         PORTB = 0b00000010;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0052         printf(" LED 1 nyala \r");
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0053         delay_ms(500);}
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0054       else if (pilihan1 == 3){
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0055         PORTB = 0b00000100;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0056         printf(" LED 2 nyala \r");
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0057         delay_ms(500);}
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0058       else if (pilihan1 == 4){
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0059         printf(" Tekan 1 untuk transisi LED dari 0 ke 7 \r");
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 005A         delay_ms(500);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 005B         printf(" Tekan 2 untuk transisi LED dari 7 ke 0 \r");
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 005C         delay_ms(500);
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 005D         scanf("%d", &pilihan2);
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 005E         if (pilihan2 == 1){
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 005F             printf(" Transisi LED dari 0 ke 7\r");
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0060             PORTB = 0b00000001;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0061             delay_ms(100);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0062             PORTB = 0b00000010;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0063             delay_ms(100);
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0064             PORTB = 0b00000100;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0065             delay_ms(100);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 0066             PORTB = 0b00001000;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0067             delay_ms(100);
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0068             PORTB = 0b00010000;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0069             delay_ms(100);
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 006A             PORTB = 0b00100000;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 006B             delay_ms(100);
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 006C             PORTB = 0b01000000;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 006D             delay_ms(100);
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 006E             PORTB = 0b10000000;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 006F             delay_ms(100);}
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 0070         else if (pilihan2 == 2){
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0071             printf(" Transisi LED dari 7 ke 0\r");
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 0072             PORTB = 0b10000000;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 0073             delay_ms(100);
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0074             PORTB = 0b01000000;
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0075             delay_ms(100);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 0076             PORTB = 0b00100000;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 0077             delay_ms(100);
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0078             PORTB = 0b00010000;
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 0079             delay_ms(100);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 007A             PORTB = 0b00001000;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 007B             delay_ms(100);
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 007C             PORTB = 0b00000100;
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 007D             delay_ms(100);
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 007E             PORTB = 0b00000010;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 007F             delay_ms(100);
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 0080             PORTB = 0b00000001;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 0081             delay_ms(100);}
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 0082         else {
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 0083             printf(" Galat perangkat, input yang anda masukkan salah \r");
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 0084             delay_ms(500);}
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0085         }
; 0000 0086       else{
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 0087         printf(" Galat perangkat, input yang anda masukkan salah \r");
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 0088         delay_ms(500);}
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 0089       printf("\r");
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 008A       }
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 008B }
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
